{"version":3,"sources":["node_modules/chart.js/dist/Chart.js"],"names":["global","factory","exports","module","require","e","define","amd","Chart","moment","this","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","h","r","g","b","min","Math","max","delta","k","reverseKeywords","JSON","stringify","pow","xyz","x","y","z","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","m","lab","y2","a","atan2","PI","sqrt","lch","hr","c","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","convert","Converter","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","undefined","length","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","value","w","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","type","result","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","id","chartjsColor","helpers","noop","uid","isNullOrUndef","isArray","Object","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","apply","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","canvas","easing","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","skipX","skipY","bounds","rectangle","borderSkipped","element_rectangle","rects","border","maxW","maxH","edge","horizontal","parseBorderSkipped","parseBorderWidth","outer","inner","boundingRects","fillRect","Line","Point","Rectangle","Arc","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","scaleMargin","stylesheet","freeze","default","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","expando","proxies","event","pos","fromNativeEvent","ticking","resizer","CSS_PREFIX","expand","CSS_SIZE_MONITOR","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","addResizeListener","remove","unwatchForRender","removeChild","addEvent","removeEvent","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","core_tooltip","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","indexScale","valueScale","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","getLabelForIndex","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","globalAlpha","handleEvent","getElementsAtEventForMode","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","stepDecimal","easingFunction","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","pixel","decimal","getBaseValue","_autoSkip","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","optionTicks","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","innerDimension","firstTickValue","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","scale_time","adapters","date","warn","displayFormats","timestamp","timeOpts","timestamps","dataLabels","_horizontal","_table","_timestamps","capacity","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","generate","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","exampleTime","exampleLabel","innerWidth","displayFormat","category","radialLinear","FORMATS","_id","valueOf","amount","as","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase"],"mappings":"CAMA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,cAAAD,QAAAD,EAAA,WAAoG,IAAM,OAAAG,QAAA,UAA4B,MAAAC,KAAtI,IACA,mBAAAC,eAAAC,IAAAD,OAAA,qBAAAF,GAAoF,OAAAH,EAAA,WAA4B,IAAM,OAAAG,EAAA,UAA4B,MAAAC,KAA9D,MACpFL,EAAAQ,MAAAP,EAAAD,EAAAS,QAHA,CAICC,KAAA,SAAAD,GAA2B,aAE5BA,OAAAE,eAAA,WAAAF,EAAA,QAAAA,EAIA,IAAAG,EAAA,CACAC,UACAC,UACAC,UACAC,WACAC,cACAC,UACAC,UACAC,QAuLA,SAAAC,GACA,OAAAC,EAAAH,EAAAE,KAtLAE,UACAC,QA8NA,SAAAC,GACA,IACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OAGA,WAAAE,EAGA,QAOA,CAfAF,EAAA,GAcA,GAFAC,IADAC,GAAA,IACA,EAAAA,EAAA,EAAAA,IAEAA,EAAAD,GACA,KAFAC,EAAAD,GAAA,EAEA,MA7OAE,QAgPA,SAAAP,GACA,OAAAN,EAAAQ,EAAAF,KAhPAQ,SAmPA,SAAAR,GACA,OAAAL,EAAAO,EAAAF,KAnPAS,YAsPA,SAAAT,GACA,OAAAJ,EAAAM,EAAAF,KArPAU,UACAC,QAoRA,SAAAC,GACA,IAGAC,EAAAP,EAFAD,EAAAO,EAAA,OACAE,EAAAF,EAAA,OAQA,OAJAC,EAAAR,EAAAS,EAIA,CAVAF,EAAA,GAUA,KAFAC,GADAA,IAFAP,GAAA,EAAAD,GAAAS,IAEA,EAAAR,EAAA,EAAAA,IACA,GAEA,KADAA,GAAA,KA7RAS,QAiSA,SAAAf,GACA,OAAAN,EAAAgB,EAAAV,KAjSAgB,SAoSA,SAAAhB,GACA,OAAAL,EAAAe,EAAAV,KApSAiB,YAuSA,SAAAjB,GACA,OAAAJ,EAAAc,EAAAV,KAtSAkB,UACAC,QA4UA,SAAAnB,GACA,OAAAR,EAAA0B,EAAAlB,KA5UAoB,QA+UA,SAAApB,GACA,OAAAP,EAAAyB,EAAAlB,KA/UAqB,SAkVA,SAAArB,GACA,OAAAL,EAAAuB,EAAAlB,KAlVAsB,YAqVA,SAAAtB,GACA,OAAAJ,EAAAsB,EAAAlB,KApVAuB,WACAC,SAmWA,SAAAxB,GACA,OAAAR,EAAA+B,EAAAvB,KAnWAyB,SAsWA,SAAAzB,GACA,OAAAP,EAAA8B,EAAAvB,KAtWA0B,SAyWA,SAAA1B,GACA,OAAAN,EAAA6B,EAAAvB,KAzWA2B,aA4WA,SAAA3B,GACA,OAAAJ,EAAA2B,EAAAvB,KA3WA4B,cACAC,YAkeA,SAAA7B,GACA,OAAAR,EAAAoC,EAAA5B,KAleA8B,YAqeA,SAAA9B,GACA,OAAAP,EAAAmC,EAAA5B,KAreA+B,YAweA,SAAA/B,GACA,OAAAN,EAAAkC,EAAA5B,KAxeAgC,aA2eA,SAAAhC,GACA,OAAAL,EAAAiC,EAAA5B,KA3eAiC,YA8eA,SAAAjC,GACA,OAAAF,EAAA8B,EAAA5B,KA9eAkC,YAifA,SAAAlC,GACA,OAAAH,EAAA+B,EAAA5B,KAhfAmC,UACAC,UACAC,QAqZA,SAAArC,GACA,OAAAC,EAAAmC,EAAApC,KApZAsC,UACAC,UACAtC,UAEAuC,UACAC,QAscA,SAAAzC,GACA,OAAAsC,EAAAE,EAAAxC,KAtcA0C,QAycA,SAAA1C,GACA,OAAAuC,EAAAC,EAAAxC,MAtcA,SAAAR,EAAAmD,GACA,IAMAC,EAAAtC,EANAuC,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAJ,EAAA,OACAK,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EA0BA,OAvBAE,GAAAF,EACAJ,EAAA,EACAC,GAAAK,EACAN,GAAAE,EAAAC,GAAAI,EACAL,GAAAI,EACAN,EAAA,GAAAG,EAAAF,GAAAM,EACAJ,GAAAG,IACAN,EAAA,GAAAC,EAAAC,GAAAK,IAEAP,EAAAK,KAAAD,IAAA,GAAAJ,EAAA,MAEA,IACAA,GAAA,KAEAtC,GAAA0C,EAAAE,GAAA,EASA,CAAAN,EAAA,KAPAM,GAAAF,EACA,EACA1C,GAAA,GACA6C,GAAAD,EAAAF,GAEAG,GAAA,EAAAD,EAAAF,IAEA,IAAA1C,GAGA,SAAAb,EAAAkD,GACA,IAMAC,EAAAvC,EANAwC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EAwBA,OApBA3C,EADA,GAAA6C,EACA,EAEAC,EAAAD,EAAA,OAEAA,GAAAF,EACAJ,EAAA,EACAC,GAAAK,EACAN,GAAAE,EAAAC,GAAAI,EACAL,GAAAI,EACAN,EAAA,GAAAG,EAAAF,GAAAM,EACAJ,GAAAG,IACAN,EAAA,GAAAC,EAAAC,GAAAK,IAEAP,EAAAK,KAAAD,IAAA,GAAAJ,EAAA,MAEA,IACAA,GAAA,KAIA,CAAAA,EAAAvC,EAFA6C,EAAA,YAKA,SAAAxD,EAAAiD,GACA,IAAAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GAKA,OAJAnD,EAAAmD,GAAA,GACA,MAAAM,KAAAD,IAAAH,EAAAI,KAAAD,IAAAF,EAAAC,IAGA,SAFAA,EAAA,QAAAE,KAAAC,IAAAL,EAAAI,KAAAC,IAAAJ,EAAAC,MAKA,SAAApD,EAAAgD,GACA,IAGAS,EAHAP,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAJ,EAAA,OAOA,aAHA,EAAAE,GADAO,EAAAH,KAAAD,IAAA,EAAAH,EAAA,EAAAC,EAAA,EAAAC,MACA,EAAAK,IAAA,GAGA,MAFA,EAAAN,EAAAM,IAAA,EAAAA,IAAA,GAEA,MADA,EAAAL,EAAAK,IAAA,EAAAA,IAAA,GACA,IAAAA,GAGA,SAAAxD,EAAA+C,GACA,OAAAU,EAAAC,KAAAC,UAAAZ,IAGA,SAAA9C,EAAA8C,GACA,IAAAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAJ,EAAA,OAWA,YAJA,OAJAE,IAAA,OAAAI,KAAAO,KAAAX,EAAA,iBAAAA,EAAA,OAIA,OAHAC,IAAA,OAAAG,KAAAO,KAAAV,EAAA,iBAAAA,EAAA,OAGA,OAFAC,IAAA,OAAAE,KAAAO,KAAAT,EAAA,iBAAAA,EAAA,QAMA,KAHA,MAAAF,EAAA,MAAAC,EAAA,MAAAC,GAGA,KAFA,MAAAF,EAAA,MAAAC,EAAA,MAAAC,IAKA,SAAAjD,EAAA6C,GACA,IAAAc,EAAA5D,EAAA8C,GACAe,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAeA,OAXAE,GAAA,IACAC,GAAA,QAEAF,GAJAA,GAAA,QAIA,QAAAT,KAAAO,IAAAE,EAAA,WAAAA,EAAA,OAQA,CAJA,KAHAC,IAAA,QAAAV,KAAAO,IAAAG,EAAA,WAAAA,EAAA,QAGA,GACA,KAAAD,EAAAC,GACA,KAAAA,GAJAC,IAAA,QAAAX,KAAAO,IAAAI,EAAA,WAAAA,EAAA,UAaA,SAAA1D,EAAAE,GACA,IAGAyD,EAAAC,EAAAC,EAAApB,EAAAqB,EAHApB,EAAAxC,EAAA,OACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OAGA,MAAAC,EAEA,OADA2D,EAAA,IAAA1D,EACA0D,KAOAH,EAAA,EAAAvD,GAHAwD,EADAxD,EAAA,GACAA,GAAA,EAAAD,GAEAC,EAAAD,EAAAC,EAAAD,GAGAsC,EAAA,QACA,QAAAsB,EAAA,EAAiBA,EAAA,EAAOA,KACxBF,EAAAnB,EAAA,MAAAqB,EAAA,IACA,GAAAF,IACAA,EAAA,GAAAA,IAWApB,EAAAsB,GAAA,KARAD,EADA,EAAAD,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACA,EAAAA,EAAA,EACAD,EACA,EAAAC,EAAA,EACAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAEAF,GAKA,OAAAlB,EAmCA,SAAAjC,EAAAE,GACA,IAAAgC,EAAAhC,EAAA,MACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OACAsD,EAAAjB,KAAAkB,MAAAvB,GAAA,EAEAwB,EAAAxB,EAAAK,KAAAkB,MAAAvB,GACAyB,EAAA,IAAAvD,GAAA,EAAAT,GACAiE,EAAA,IAAAxD,GAAA,EAAAT,EAAA+D,GACAG,EAAA,IAAAzD,GAAA,EAAAT,GAAA,EAAA+D,IAGA,OAFAtD,GAAA,IAEAoD,GACA,OACA,OAAApD,EAAAyD,EAAAF,GACA,OACA,OAAAC,EAAAxD,EAAAuD,GACA,OACA,OAAAA,EAAAvD,EAAAyD,GACA,OACA,OAAAF,EAAAC,EAAAxD,GACA,OACA,OAAAyD,EAAAF,EAAAvD,GACA,OACA,OAAAA,EAAAuD,EAAAC,IA+BA,SAAApD,EAAAsD,GACA,IAIAP,EAAAnD,EAAAsD,EAAAK,EAJA7B,EAAA4B,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAF,EAAAC,EAiBA,OAbAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAKAR,EAAA,EAAAxB,GAFAqB,EAAAhB,KAAAkB,MAAA,EAAAvB,IAGA,MAAAqB,KACAG,EAAA,EAAAA,GAEAK,EAAAC,EAAAN,IALAtD,EAAA,EAAA6D,GAKAD,GAEAT,GACA,QACA,OACA,OAAApB,EAAA/B,EAAkBgC,EAAA2B,EAAO1B,EAAA2B,EAAQ,MACjC,OAAA7B,EAAA4B,EAAkB3B,EAAAhC,EAAOiC,EAAA2B,EAAQ,MACjC,OAAA7B,EAAA6B,EAAmB5B,EAAAhC,EAAOiC,EAAA0B,EAAO,MACjC,OAAA5B,EAAA6B,EAAmB5B,EAAA2B,EAAO1B,EAAAjC,EAAO,MACjC,OAAA+B,EAAA4B,EAAkB3B,EAAA4B,EAAQ3B,EAAAjC,EAAO,MACjC,OAAA+B,EAAA/B,EAAkBgC,EAAA4B,EAAQ3B,EAAA0B,EAG1B,WAAA5B,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAxB,EAAAsD,GACA,IACAC,EAAAD,EAAA,OACAlB,EAAAkB,EAAA,OACAzB,EAAAyB,EAAA,OAMA,YAHA,EAAA5B,KAAAD,IAAA,EANA6B,EAAA,QAMA,EAAAzB,OAGA,KAFA,EAAAH,KAAAD,IAAA,EAAA8B,GAAA,EAAA1B,OAEA,KADA,EAAAH,KAAAD,IAAA,EAAAW,GAAA,EAAAP,QAqBA,SAAAjB,EAAAsB,GACA,IAGAZ,EAAAC,EAAAC,EAHAW,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAqBA,OAjBAX,GAAA,MAAAY,EAAA,OAAAC,EAAA,MAAAC,EACAb,EAAA,MAAAW,GAAA,KAAAC,EAAA,MAAAC,EAGAf,GALAA,EAAA,OAAAa,GAAA,OAAAC,GAAA,MAAAC,GAKA,eAAAX,KAAAO,IAAAX,EAAA,YACAA,GAAA,MAEAC,IAAA,eAAAG,KAAAO,IAAAV,EAAA,YACAA,GAAA,MAEAC,IAAA,eAAAE,KAAAO,IAAAT,EAAA,YACAA,GAAA,MAMA,MAJAF,EAAAI,KAAAD,IAAAC,KAAAC,IAAA,EAAAL,GAAA,IAIA,KAHAC,EAAAG,KAAAD,IAAAC,KAAAC,IAAA,EAAAJ,GAAA,IAGA,KAFAC,EAAAE,KAAAD,IAAAC,KAAAC,IAAA,EAAAH,GAAA,KAKA,SAAAX,EAAAqB,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAeA,OAXAE,GAAA,IACAC,GAAA,QAEAF,GAJAA,GAAA,QAIA,QAAAT,KAAAO,IAAAE,EAAA,WAAAA,EAAA,OAQA,CAJA,KAHAC,IAAA,QAAAV,KAAAO,IAAAG,EAAA,WAAAA,EAAA,QAGA,GACA,KAAAD,EAAAC,GACA,KAAAA,GAJAC,IAAA,QAAAX,KAAAO,IAAAI,EAAA,WAAAA,EAAA,UAaA,SAAAtB,EAAAyC,GACA,IAGArB,EAAAC,EAAAC,EAAAoB,EAHA1E,EAAAyE,EAAA,GACAE,EAAAF,EAAA,GACAhC,EAAAgC,EAAA,GAeA,OAZAzE,GAAA,EAEA0E,GADArB,EAAA,IAAArD,EAAA,OACA,kBAEAqD,EAAA,IAAAV,KAAAO,KAAAlD,EAAA,WACA0E,EAAA/B,KAAAO,IAAAG,EAAA,UAOA,CAJAD,IAAA,gBAAAA,EAAA,QAAAuB,EAAA,IAAAD,EAAA,qBAAA/B,KAAAO,IAAAyB,EAAA,IAAAD,EAAA,GAIArB,EAFAC,IAAA,iBAAAA,EAAA,SAAAoB,EAAAjC,EAAA,0BAAAE,KAAAO,IAAAwB,EAAAjC,EAAA,QAKA,SAAA9C,EAAA8E,GACA,IAGAnC,EAHAtC,EAAAyE,EAAA,GACAE,EAAAF,EAAA,GACAhC,EAAAgC,EAAA,GASA,OALAnC,EAAA,IADAK,KAAAiC,MAAAnC,EAAAkC,GACA,EAAAhC,KAAAkC,IACA,IACAvC,GAAA,KAGA,CAAAtC,EADA2C,KAAAmC,KAAAH,IAAAlC,KACAH,GAGA,SAAAL,EAAAvC,GACA,OAAAmC,EAAAG,EAAAtC,IAGA,SAAAwC,EAAA6C,GACA,IAGAC,EAFAC,EAAAF,EAAA,GAOA,OAHAC,EAHAD,EAAA,GAGA,MAAApC,KAAAkC,GAGA,CARAE,EAAA,GAMAE,EAAAtC,KAAAuC,IAAAF,GACAC,EAAAtC,KAAAwC,IAAAH,IAYA,SAAA1D,EAAA8D,GACA,OAAAC,EAAAD,GA2BA,IAAAC,EAAA,CACAC,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAGA1L,EAAA,GACA,QAAA2L,KAAArJ,EACAtC,EAAAC,KAAAC,UAAAoC,EAAAqJ,OAGA,IAAAC,EAAA,WACA,WAAAC,GAGA,QAAAC,KAAA5P,EAAA,CAEA0P,EAAAE,EAAA,gBAAAA,GAEA,gBAAAC,GAGA,MAFA,iBAAAA,IACAA,EAAAC,MAAAC,UAAAC,MAAAC,KAAAC,YACAlQ,EAAA4P,GAAAC,IALA,CAOGD,GAEH,IAAAO,EAAA,cAAAC,KAAAR,GACAS,EAAAF,EAAA,GACAG,EAAAH,EAAA,IAGAT,EAAAW,GAAAX,EAAAW,IAAA,IAEAC,GAAAZ,EAAAE,GAAA,SAAAA,GACA,gBAAAC,GACA,iBAAAA,IACAA,EAAAC,MAAAC,UAAAC,MAAAC,KAAAC,YAEA,IAAAzL,EAAAzE,EAAA4P,GAAAC,GACA,oBAAApL,QAAA8L,IAAA9L,EACA,OAAAA,EAEA,QAAAC,EAAA,EAAqBA,EAAAD,EAAA+L,OAAgB9L,IACrCD,EAAAC,GAAAhB,KAAA+M,MAAAhM,EAAAC,IACA,OAAAD,GAXA,CAaGmL,GAKH,IAAAD,EAAA,WACA7P,KAAA4Q,MAAA,IAKAf,EAAAI,UAAAY,WAAA,SAAAC,EAAAnQ,GACA,IAAAoQ,EAAApQ,EAAA,GACA,YAAA8P,IAAAM,EAEA/Q,KAAAgR,UAAAF,IAGA,iBAAAC,IACAA,EAAAf,MAAAC,UAAAC,MAAAC,KAAAxP,IAGAX,KAAAiR,UAAAH,EAAAC,KAIAlB,EAAAI,UAAAgB,UAAA,SAAAH,EAAAC,GAIA,OAHA/Q,KAAA8Q,QACA9Q,KAAA4Q,MAAA,GACA5Q,KAAA4Q,MAAAE,GAAAC,EACA/Q,MAMA6P,EAAAI,UAAAe,UAAA,SAAAF,GACA,IAAAI,EAAAlR,KAAA4Q,MAAAE,GACA,IAAAI,EAAA,CACA,IAAAC,EAAAnR,KAAA8Q,MAEAI,EAAAtB,EAAAuB,GAAAL,GADA9Q,KAAA4Q,MAAAO,IAGAnR,KAAA4Q,MAAAE,GAAAI,EAEA,OAAAA,GAGA,qCAAAE,QAAA,SAAAN,GACAjB,EAAAI,UAAAa,GAAA,SAAAI,GACA,OAAAlR,KAAA6Q,WAAAC,EAAAV,cAIA,IAAAiB,EAAAzB,EAEA0B,EAAA,CACA/K,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAMA6B,EAAA,CACAC,UACAC,UACAC,OAqHA,SAAAC,GACA,IAAAC,EAAAJ,EAAAG,GACA,OAAAC,KAAA1B,MAAA,MAtHA2B,OAyHA,SAAAF,GACA,IAAAG,EAAAL,EAAAE,GACA,OAAAG,KAAA5B,MAAA,MA1HA6B,SACAC,SA4HA,SAAAL,GACA,IAAAT,EAAAM,EAAAG,GACA,OAAAT,EACAA,EAAA,IAEAA,EAAAO,EAAAE,IACAT,EAAA,IAEAA,EAAAa,EAAAJ,IACAT,EAAA,QADA,GAlIAe,UAwIA,SAAAL,EAAAhM,GAEA,OADAA,OAAA6K,IAAA7K,GAAA,IAAAgM,EAAAlB,OAAA9K,EAAAgM,EAAA,GACA,IAAAM,EAAAN,EAAA,IACAM,EAAAN,EAAA,IACAM,EAAAN,EAAA,KAEAhM,GAAA,GAAAA,EAAA,EACAsM,EAAAtO,KAAA+M,MAAA,IAAA/K,IACA,KA/IAuM,UAmJA,SAAAP,EAAAQ,GACA,OAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACAS,EAAAT,EAAAQ,GAEA,OAAAR,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAtJAS,aACAC,cAgKA,SAAAV,EAAAQ,GACA,OAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACAW,EAAAX,EAAAQ,GAMA,OAJAxO,KAAA+M,MAAAiB,EAAA,YAIA,MAHAhO,KAAA+M,MAAAiB,EAAA,YAGA,MAFAhO,KAAA+M,MAAAiB,EAAA,YAEA,MAvKAW,iBACAC,UAgLA,SAAAV,EAAAM,GACA,OAAAA,EAAA,GAAAN,EAAA,IAAAA,EAAA,KACAW,EAAAX,EAAAM,GAEA,OAAAN,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAnLAW,aACAC,UA+LA,SAAAvN,EAAAiN,GAIA,YAHA3B,IAAA2B,IACAA,OAAA3B,IAAAtL,EAAA,GAAAA,EAAA,MAEA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aACAsL,IAAA2B,GAAA,IAAAA,EAAA,KAAAA,EAAA,SAnMA/L,QAsMA,SAAA/C,GACA,OAAAqP,EAAArP,EAAA4M,MAAA,QApMA,SAAAsB,EAAAG,GACA,GAAAA,EAAA,CAGA,IAMArO,EAAA,QACAsC,EAAA,EACAgN,EAAAjB,EAAAiB,MARA,0BASAC,EAAA,GACA,GAAAD,EAAA,CAEAC,GADAD,IAAA,IACA,GACA,QAAAhO,EAAA,EAAqBA,EAAAtB,EAAAoN,OAAgB9L,IACrCtB,EAAAsB,GAAAkO,SAAAF,EAAAhO,GAAAgO,EAAAhO,GAAA,IAEAiO,IACAjN,EAAAhC,KAAA+M,MAAAmC,SAAAD,IAAA,uBAGA,GAAAD,EAAAjB,EAAAiB,MAnBA,yCAmBA,CAGA,IAFAC,EAAAD,EAAA,GACAA,IAAA,GACAhO,EAAA,EAAqBA,EAAAtB,EAAAoN,OAAgB9L,IACrCtB,EAAAsB,GAAAkO,SAAAF,EAAA1C,MAAA,EAAAtL,EAAA,EAAAA,EAAA,OAEAiO,IACAjN,EAAAhC,KAAA+M,MAAAmC,SAAAD,EAAA,uBAGA,GAAAD,EAAAjB,EAAAiB,MA5BA,4FA4BA,CACA,IAAAhO,EAAA,EAAqBA,EAAAtB,EAAAoN,OAAgB9L,IACrCtB,EAAAsB,GAAAkO,SAAAF,EAAAhO,EAAA,IAEAgB,EAAAmN,WAAAH,EAAA,SAEA,GAAAA,EAAAjB,EAAAiB,MAjCA,8GAiCA,CACA,IAAAhO,EAAA,EAAqBA,EAAAtB,EAAAoN,OAAgB9L,IACrCtB,EAAAsB,GAAAhB,KAAA+M,MAAA,KAAAoC,WAAAH,EAAAhO,EAAA,KAEAgB,EAAAmN,WAAAH,EAAA,SAEA,GAAAA,EAAAjB,EAAAiB,MAtCA,SAsCA,CACA,kBAAAA,EAAA,GACA,gBAGA,KADAtP,EAAAgO,EAAAsB,EAAA,KAEA,OAIA,IAAAhO,EAAA,EAAkBA,EAAAtB,EAAAoN,OAAgB9L,IAClCtB,EAAAsB,GAAAoO,EAAA1P,EAAAsB,GAAA,OASA,OAHAgB,EAJAA,GAAA,GAAAA,EAIAoN,EAAApN,EAAA,KAHA,EAKAtC,EAAA,GAAAsC,EACAtC,GAGA,SAAAmO,EAAAE,GACA,GAAAA,EAAA,CAGA,IACAiB,EAAAjB,EAAAiB,MADA,4GAEA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IAKA,OAJAI,EAAAF,SAAAF,EAAA,WACAI,EAAAD,WAAAH,EAAA,WACAI,EAAAD,WAAAH,EAAA,WACAI,EAAAC,MAAAb,GAAA,EAAAA,EAAA,QAKA,SAAAL,EAAAJ,GACA,GAAAA,EAAA,CAGA,IACAiB,EAAAjB,EAAAiB,MADA,0GAEA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IAKA,OAJAI,EAAAF,SAAAF,EAAA,WACAI,EAAAD,WAAAH,EAAA,WACAI,EAAAD,WAAAH,EAAA,WACAI,EAAAC,MAAAb,GAAA,EAAAA,EAAA,QAgDA,SAAAC,EAAAT,EAAAQ,GAIA,YAHA3B,IAAA2B,IACAA,OAAA3B,IAAAmB,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,KAAAQ,EAAA,IAcA,SAAAG,EAAAX,EAAAQ,GAIA,cAHAxO,KAAA+M,MAAAiB,EAAA,YAGA,MAFAhO,KAAA+M,MAAAiB,EAAA,YAEA,MADAhO,KAAA+M,MAAAiB,EAAA,YACA,OAAAQ,GAAAR,EAAA,WAUA,SAAAa,EAAAX,EAAAM,GAIA,YAHA3B,IAAA2B,IACAA,OAAA3B,IAAAqB,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SACAM,EAAA,IAkBA,SAAAY,EAAAE,EAAAvP,EAAAE,GACA,OAAAD,KAAAD,IAAAC,KAAAC,IAAAF,EAAAuP,GAAArP,GAGA,SAAAqO,EAAAgB,GACA,IAAAC,EAAAD,EAAAE,SAAA,IAAAC,cACA,OAAAF,EAAAzC,OAAA,MAAAyC,IAKA,IAAAR,EAAA,GACA,QAAAW,KAAAhC,EACAqB,EAAArB,EAAAgC,MAOA,IAAAC,EAAA,SAAAC,GACA,OAAAA,aAAAD,EACAC,EAEAxT,gBAAAuT,GAIAvT,KAAAyT,OAAA,EACAzT,KAAA+Q,OAAA,CACAzN,IAAA,QACAvC,IAAA,QACAQ,IAAA,QACA4D,IAAA,QACAK,KAAA,UACA4M,MAAA,QAKA,iBAAAoB,GACAtC,EAAAK,EAAAC,QAAAgC,IAEAxT,KAAAiR,UAAA,MAAAC,IACGA,EAAAK,EAAAE,QAAA+B,IACHxT,KAAAiR,UAAA,MAAAC,IACGA,EAAAK,EAAAQ,OAAAyB,KACHxT,KAAAiR,UAAA,MAAAC,GAEE,iBAAAsC,SAEF/C,KADAS,EAAAsC,GACAhQ,QAAAiN,IAAAS,EAAAnD,IACA/N,KAAAiR,UAAA,MAAAC,QACGT,IAAAS,EAAAjQ,QAAAwP,IAAAS,EAAAwC,UACH1T,KAAAiR,UAAA,MAAAC,QACGT,IAAAS,EAAAzP,QAAAgP,IAAAS,EAAAyC,MACH3T,KAAAiR,UAAA,MAAAC,QACGT,IAAAS,EAAA0C,QAAAnD,IAAAS,EAAA2C,UACH7T,KAAAiR,UAAA,MAAAC,QACGT,IAAAS,EAAAhL,QAAAuK,IAAAS,EAAAvJ,MACH3H,KAAAiR,UAAA,OAAAC,MAnCA,IAAAqC,EAAAC,GAcA,IAAAtC,GA0BAqC,EAAAtD,UAAA,CACA6D,QAAA,WACA,OAAA9T,KAAAyT,OAEAnQ,IAAA,WACA,OAAAtD,KAAA+T,SAAA,MAAA3D,YAEArP,IAAA,WACA,OAAAf,KAAA+T,SAAA,MAAA3D,YAEA7O,IAAA,WACA,OAAAvB,KAAA+T,SAAA,MAAA3D,YAEAjL,IAAA,WACA,OAAAnF,KAAA+T,SAAA,MAAA3D,YAEA5K,KAAA,WACA,OAAAxF,KAAA+T,SAAA,OAAA3D,YAGA4D,SAAA,WACA,OAAAhU,KAAA+Q,OAAAzN,KAEA2Q,SAAA,WACA,OAAAjU,KAAA+Q,OAAAhQ,KAEAmT,SAAA,WACA,OAAAlU,KAAA+Q,OAAAxP,KAEA4S,SAAA,WACA,IAAApD,EAAA/Q,KAAA+Q,OACA,WAAAA,EAAAqB,MACArB,EAAA5L,IAAAiP,OAAA,CAAArD,EAAAqB,QAEArB,EAAA5L,KAEAkP,UAAA,WACA,OAAArU,KAAA+Q,OAAAvL,MAEA8O,UAAA,WACA,IAAAvD,EAAA/Q,KAAA+Q,OACA,OAAAA,EAAAzN,IAAA8Q,OAAA,CAAArD,EAAAqB,SAEAmC,UAAA,WACA,IAAAxD,EAAA/Q,KAAA+Q,OACA,OAAAA,EAAAhQ,IAAAqT,OAAA,CAAArD,EAAAqB,SAEAA,MAAA,SAAAzN,GACA,YAAA8L,IAAA9L,EACA3E,KAAA+Q,OAAAqB,OAEApS,KAAAiR,UAAA,QAAAtM,GACA3E,OAGA+N,IAAA,SAAApJ,GACA,OAAA3E,KAAAwU,WAAA,QAAA7P,IAEAkF,MAAA,SAAAlF,GACA,OAAA3E,KAAAwU,WAAA,QAAA7P,IAEAqC,KAAA,SAAArC,GACA,OAAA3E,KAAAwU,WAAA,QAAA7P,IAEA8P,IAAA,SAAA9P,GAKA,OAJAA,IAEAA,GADAA,GAAA,KACA,MAAAA,KAEA3E,KAAAwU,WAAA,QAAA7P,IAEA+P,WAAA,SAAA/P,GACA,OAAA3E,KAAAwU,WAAA,QAAA7P,IAEA+O,UAAA,SAAA/O,GACA,OAAA3E,KAAAwU,WAAA,QAAA7P,IAEAgQ,YAAA,SAAAhQ,GACA,OAAA3E,KAAAwU,WAAA,QAAA7P,IAEAkP,UAAA,SAAAlP,GACA,OAAA3E,KAAAwU,WAAA,QAAA7P,IAEAiQ,UAAA,SAAAjQ,GACA,OAAA3E,KAAAwU,WAAA,QAAA7P,IAEAgP,MAAA,SAAAhP,GACA,OAAA3E,KAAAwU,WAAA,QAAA7P,IAEAgD,KAAA,SAAAhD,GACA,OAAA3E,KAAAwU,WAAA,SAAA7P,IAEAiH,QAAA,SAAAjH,GACA,OAAA3E,KAAAwU,WAAA,SAAA7P,IAEA8K,OAAA,SAAA9K,GACA,OAAA3E,KAAAwU,WAAA,SAAA7P,IAEAmC,MAAA,SAAAnC,GACA,OAAA3E,KAAAwU,WAAA,SAAA7P,IAGAsN,UAAA,WACA,OAAAV,EAAAU,UAAAjS,KAAA+Q,OAAAzN,MAEA6O,UAAA,WACA,OAAAZ,EAAAY,UAAAnS,KAAA+Q,OAAAzN,IAAAtD,KAAA+Q,OAAAqB,QAEAC,WAAA,WACA,OAAAd,EAAAc,WAAArS,KAAA+Q,OAAAzN,IAAAtD,KAAA+Q,OAAAqB,QAEAE,cAAA,WACA,OAAAf,EAAAe,cAAAtS,KAAA+Q,OAAAzN,IAAAtD,KAAA+Q,OAAAqB,QAEAI,UAAA,WACA,OAAAjB,EAAAiB,UAAAxS,KAAA+Q,OAAAhQ,IAAAf,KAAA+Q,OAAAqB,QAEAK,WAAA,WACA,OAAAlB,EAAAkB,WAAAzS,KAAA+Q,OAAAhQ,IAAAf,KAAA+Q,OAAAqB,QAEAM,UAAA,WACA,OAAAnB,EAAAmB,UAAA1S,KAAA+Q,OAAA5L,IAAAnF,KAAA+Q,OAAAqB,QAEA/L,QAAA,WACA,OAAAkL,EAAAlL,QAAArG,KAAA+Q,OAAAzN,IAAAtD,KAAA+Q,OAAAqB,QAGAyC,UAAA,WACA,IAAAvR,EAAAtD,KAAA+Q,OAAAzN,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAGAwR,WAAA,WAIA,IAFA,IAAAxR,EAAAtD,KAAA+Q,OAAAzN,IACAyR,EAAA,GACAnQ,EAAA,EAAiBA,EAAAtB,EAAAoN,OAAgB9L,IAAA,CACjC,IAAAoQ,EAAA1R,EAAAsB,GAAA,IACAmQ,EAAAnQ,GAAAoQ,GAAA,OAAAA,EAAA,MAAApR,KAAAO,KAAA6Q,EAAA,iBAEA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAGAE,SAAA,SAAAC,GAEA,IAAAC,EAAAnV,KAAA8U,aACAM,EAAAF,EAAAJ,aACA,OAAAK,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAEAA,EAAA,MAAAD,EAAA,MAGAE,MAAA,SAAAH,GACA,IAAAI,EAAAtV,KAAAiV,SAAAC,GACA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAGAC,KAAA,WAEA,IAAAjS,EAAAtD,KAAA+Q,OAAAzN,IAEA,OADA,IAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,KAGAkS,MAAA,WACA,OAAAxV,KAAAuV,QAGAE,OAAA,WAEA,IADA,IAAAnS,EAAA,GACAsB,EAAA,EAAiBA,EAAA,EAAOA,IACxBtB,EAAAsB,GAAA,IAAA5E,KAAA+Q,OAAAzN,IAAAsB,GAGA,OADA5E,KAAAiR,UAAA,MAAA3N,GACAtD,MAGA0V,QAAA,SAAAnQ,GACA,IAAAxE,EAAAf,KAAA+Q,OAAAhQ,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACAvF,KAAAiR,UAAA,MAAAlQ,GACAf,MAGA2V,OAAA,SAAApQ,GACA,IAAAxE,EAAAf,KAAA+Q,OAAAhQ,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACAvF,KAAAiR,UAAA,MAAAlQ,GACAf,MAGA4V,SAAA,SAAArQ,GACA,IAAAxE,EAAAf,KAAA+Q,OAAAhQ,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACAvF,KAAAiR,UAAA,MAAAlQ,GACAf,MAGA6V,WAAA,SAAAtQ,GACA,IAAAxE,EAAAf,KAAA+Q,OAAAhQ,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACAvF,KAAAiR,UAAA,MAAAlQ,GACAf,MAGA8V,OAAA,SAAAvQ,GACA,IAAAJ,EAAAnF,KAAA+Q,OAAA5L,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACAvF,KAAAiR,UAAA,MAAA9L,GACAnF,MAGA+V,QAAA,SAAAxQ,GACA,IAAAJ,EAAAnF,KAAA+Q,OAAA5L,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACAvF,KAAAiR,UAAA,MAAA9L,GACAnF,MAGAgW,UAAA,WACA,IAAA1S,EAAAtD,KAAA+Q,OAAAzN,IAEAqB,EAAA,GAAArB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADAtD,KAAAiR,UAAA,OAAAtM,QACA3E,MAGAiW,QAAA,SAAA1Q,GACA,IAAA6M,EAAApS,KAAA+Q,OAAAqB,MAEA,OADApS,KAAAiR,UAAA,QAAAmB,IAAA7M,GACAvF,MAGAkW,QAAA,SAAA3Q,GACA,IAAA6M,EAAApS,KAAA+Q,OAAAqB,MAEA,OADApS,KAAAiR,UAAA,QAAAmB,IAAA7M,GACAvF,MAGAmW,OAAA,SAAAC,GACA,IAAArV,EAAAf,KAAA+Q,OAAAhQ,IACA0T,GAAA1T,EAAA,GAAAqV,GAAA,IAGA,OAFArV,EAAA,GAAA0T,EAAA,MAAAA,IACAzU,KAAAiR,UAAA,MAAAlQ,GACAf,MAOAqW,IAAA,SAAAC,EAAAC,GACA,IACArB,EAAAoB,EACAtR,OAAAyL,IAAA8F,EAAA,GAAAA,EAEA3C,EAAA,EAAA5O,EAAA,EACAY,EALA5F,KAKAoS,QAAA8C,EAAA9C,QAEAoE,IAAA5C,EAAAhO,IAAA,EAAAgO,KAAAhO,IAAA,EAAAgO,EAAAhO,IAAA,KACA6Q,EAAA,EAAAD,EAEA,OAAAxW,KACAsD,IACAkT,EAZAxW,KAYA+N,MAAA0I,EAAAvB,EAAAnH,MACAyI,EAbAxW,KAaA6J,QAAA4M,EAAAvB,EAAArL,QACA2M,EAdAxW,KAcAgH,OAAAyP,EAAAvB,EAAAlO,QAEAoL,MAhBApS,KAgBAoS,QAAApN,EAAAkQ,EAAA9C,SAAA,EAAApN,KAGA0R,OAAA,WACA,OAAA1W,KAAAsD,OAGAqT,MAAA,WAKA,IAGAhD,EAAAiD,EAHAC,EAAA,IAAAtD,EACAuD,EAAA9W,KAAA+Q,OACAgG,EAAAF,EAAA9F,OAGA,QAAAiG,KAAAF,EACAA,EAAA7W,eAAA+W,KAGA,oBADAJ,EAAA,GAAcxD,SAAAjD,KADdwD,EAAAmD,EAAAE,KAGAD,EAAAC,GAAArD,EAAAzD,MAAA,GACK,oBAAA0G,EACLG,EAAAC,GAAArD,EAEAsD,QAAAC,MAAA,0BAAAvD,IAKA,OAAAkD,IAIAtD,EAAAtD,UAAAkH,OAAA,CACA7T,IAAA,uBACAvC,IAAA,iCACAQ,IAAA,6BACA4D,IAAA,gCACAK,KAAA,qCAGA+N,EAAAtD,UAAAmH,MAAA,CACA9T,IAAA,cACAvC,IAAA,cACAQ,IAAA,cACA4D,IAAA,cACAK,KAAA,mBAGA+N,EAAAtD,UAAAe,UAAA,SAAAF,GAIA,IAHA,IAAAC,EAAA/Q,KAAA+Q,OACAG,EAAA,GAEAtM,EAAA,EAAgBA,EAAAkM,EAAAJ,OAAkB9L,IAClCsM,EAAAJ,EAAAuG,OAAAzS,IAAAmM,EAAAD,GAAAlM,GAQA,OALA,IAAAmM,EAAAqB,QACAlB,EAAAtL,EAAAmL,EAAAqB,OAIAlB,GAGAqC,EAAAtD,UAAAgB,UAAA,SAAAH,EAAAI,GACA,IAIAtM,EAkCA0S,EAtCAvG,EAAA/Q,KAAA+Q,OACAoG,EAAAnX,KAAAmX,OACAC,EAAApX,KAAAoX,MACAhF,EAAA,EAKA,GAFApS,KAAAyT,OAAA,EAEA,UAAA3C,EACAsB,EAAAlB,OACE,GAAAA,EAAAR,OAEFK,EAAAD,GAAAI,EAAAhB,MAAA,EAAAY,EAAAJ,QACA0B,EAAAlB,EAAAJ,EAAAJ,aACE,QAAAD,IAAAS,EAAAJ,EAAAuG,OAAA,KAEF,IAAAzS,EAAA,EAAaA,EAAAkM,EAAAJ,OAAkB9L,IAC/BmM,EAAAD,GAAAlM,GAAAsM,EAAAJ,EAAAuG,OAAAzS,IAGAwN,EAAAlB,EAAAtL,OACE,QAAA6K,IAAAS,EAAAiG,EAAArG,GAAA,KAEF,IAAAyG,EAAAJ,EAAArG,GAEA,IAAAlM,EAAA,EAAaA,EAAAkM,EAAAJ,OAAkB9L,IAC/BmM,EAAAD,GAAAlM,GAAAsM,EAAAqG,EAAA3S,IAGAwN,EAAAlB,EAAAkB,MAKA,GAFArB,EAAAqB,MAAAxO,KAAAC,IAAA,EAAAD,KAAAD,IAAA,OAAA8M,IAAA2B,EAAArB,EAAAqB,UAEA,UAAAtB,EACA,SAMA,IAAAlM,EAAA,EAAYA,EAAAkM,EAAAJ,OAAkB9L,IAC9B0S,EAAA1T,KAAAC,IAAA,EAAAD,KAAAD,IAAAyT,EAAAtG,GAAAlM,GAAAmM,EAAAD,GAAAlM,KACAmM,EAAAD,GAAAlM,GAAAhB,KAAA+M,MAAA2G,GAIA,QAAAE,KAAAL,EACAK,IAAA1G,IACAC,EAAAyG,GAAAnG,EAAAP,GAAA0G,GAAAzG,EAAAD,KAIA,UAGAyC,EAAAtD,UAAA8D,SAAA,SAAAjD,EAAAnQ,GACA,IAAAuQ,EAAAvQ,EAAA,GAEA,YAAA8P,IAAAS,EAEAlR,KAAAgR,UAAAF,IAIA,iBAAAI,IACAA,EAAAlB,MAAAC,UAAAC,MAAAC,KAAAxP,IAGAX,KAAAiR,UAAAH,EAAAI,GACAlR,OAGAuT,EAAAtD,UAAAuE,WAAA,SAAA1D,EAAA2G,EAAA9S,GACA,IAAA+S,EAAA1X,KAAA+Q,OAAAD,GACA,YAAAL,IAAA9L,EAEA+S,EAAAD,GACE9S,IAAA+S,EAAAD,GAEFzX,MAIA0X,EAAAD,GAAA9S,EACA3E,KAAAiR,UAAAH,EAAA4G,GAEA1X,OAGA,oBAAA2X,SACAA,OAAApE,SAGA,IAiBAqE,EAjBAC,EAAAtE,EAKAuE,EAAA,CAIAC,KAAA,aAOAC,KACAJ,EAAA,EACA,WACA,OAAAA,MAUAK,cAAA,SAAAtE,GACA,OAAAA,SASAuE,QAAA,SAAAvE,GACA,GAAA3D,MAAAkI,SAAAlI,MAAAkI,QAAAvE,GACA,SAEA,IAAAiD,EAAAuB,OAAAlI,UAAAmD,SAAAjD,KAAAwD,GACA,kBAAAiD,EAAAwB,OAAA,iBAAAxB,EAAAwB,QAAA,IAYAC,SAAA,SAAA1E,GACA,cAAAA,GAAA,oBAAAwE,OAAAlI,UAAAmD,SAAAjD,KAAAwD,IAQA2E,SAAA,SAAA3E,GACA,wBAAAA,gBAAA4E,SAAAD,SAAA3E,IASA6E,eAAA,SAAA7E,EAAA8E,GACA,gBAAA9E,EAAA8E,EAAA9E,GAUA+E,sBAAA,SAAA/E,EAAA8D,EAAAgB,GACA,OAAAX,EAAAU,eAAAV,EAAAI,QAAAvE,KAAA8D,GAAA9D,EAAA8E,IAWAE,SAAA,SAAAC,EAAAjY,EAAAkY,GACA,GAAAD,GAAA,mBAAAA,EAAAzI,KACA,OAAAyI,EAAAE,MAAAD,EAAAlY,IAaAoY,KAAA,SAAAC,EAAAJ,EAAAC,EAAAI,GACA,IAAArU,EAAAsU,EAAAC,EACA,GAAArB,EAAAI,QAAAc,GAEA,GADAE,EAAAF,EAAAtI,OACAuI,EACA,IAAArU,EAAAsU,EAAA,EAAqBtU,GAAA,EAAQA,IAC7BgU,EAAAzI,KAAA0I,EAAAG,EAAApU,WAGA,IAAAA,EAAA,EAAeA,EAAAsU,EAAStU,IACxBgU,EAAAzI,KAAA0I,EAAAG,EAAApU,WAGG,GAAAkT,EAAAO,SAAAW,GAGH,IADAE,GADAC,EAAAhB,OAAAgB,KAAAH,IACAtI,OACA9L,EAAA,EAAcA,EAAAsU,EAAStU,IACvBgU,EAAAzI,KAAA0I,EAAAG,EAAAG,EAAAvU,IAAAuU,EAAAvU,KAYAwU,YAAA,SAAAC,EAAAC,GACA,IAAA1U,EAAA2U,EAAAC,EAAAC,EAEA,IAAAJ,IAAAC,GAAAD,EAAA3I,SAAA4I,EAAA5I,OACA,SAGA,IAAA9L,EAAA,EAAA2U,EAAAF,EAAA3I,OAA+B9L,EAAA2U,IAAU3U,EAIzC,GAFA6U,EAAAH,EAAA1U,IADA4U,EAAAH,EAAAzU,cAGAoL,OAAAyJ,aAAAzJ,OACA,IAAA8H,EAAAsB,YAAAI,EAAAC,GACA,cAEI,GAAAD,IAAAC,EAEJ,SAIA,UAQA9C,MAAA,SAAAG,GACA,GAAAgB,EAAAI,QAAApB,GACA,OAAAA,EAAA4C,IAAA5B,EAAAnB,OAGA,GAAAmB,EAAAO,SAAAvB,GAAA,CAMA,IALA,IAAAC,EAAA,GACAoC,EAAAhB,OAAAgB,KAAArC,GACA6C,EAAAR,EAAAzI,OACA3M,EAAA,EAESA,EAAA4V,IAAU5V,EACnBgT,EAAAoC,EAAApV,IAAA+T,EAAAnB,MAAAG,EAAAqC,EAAApV,KAGA,OAAAgT,EAGA,OAAAD,GAQA8C,QAAA,SAAAjK,EAAAoH,EAAAD,EAAA+C,GACA,IAAAC,EAAA/C,EAAApH,GACAoK,EAAAjD,EAAAnH,GAEAmI,EAAAO,SAAAyB,IAAAhC,EAAAO,SAAA0B,GACAjC,EAAAkC,MAAAF,EAAAC,EAAAF,GAEA9C,EAAApH,GAAAmI,EAAAnB,MAAAoD,IAQAE,UAAA,SAAAtK,EAAAoH,EAAAD,GACA,IAAAgD,EAAA/C,EAAApH,GACAoK,EAAAjD,EAAAnH,GAEAmI,EAAAO,SAAAyB,IAAAhC,EAAAO,SAAA0B,GACAjC,EAAAoC,QAAAJ,EAAAC,GACGhD,EAAA9W,eAAA0P,KACHoH,EAAApH,GAAAmI,EAAAnB,MAAAoD,KAaAC,MAAA,SAAAjD,EAAAD,EAAA+C,GACA,IAEAG,EAAApV,EAAAuU,EAAAQ,EAAA5V,EAFAoW,EAAArC,EAAAI,QAAApB,KAAA,CAAAA,GACAyC,EAAAY,EAAAzJ,OAGA,IAAAoH,EAAAO,SAAAtB,GACA,OAAAA,EAMA,IAFAiD,GADAH,KAAA,IACAO,QAAAtC,EAAA8B,QAEAhV,EAAA,EAAaA,EAAA2U,IAAU3U,EAEvB,GAAAkT,EAAAO,SADAvB,EAAAqD,EAAAvV,IAMA,IAAAb,EAAA,EAAA4V,GADAR,EAAAhB,OAAAgB,KAAArC,IACApG,OAAkC3M,EAAA4V,IAAU5V,EAC5CiW,EAAAb,EAAApV,GAAAgT,EAAAD,EAAA+C,GAIA,OAAA9C,GAUAmD,QAAA,SAAAnD,EAAAD,GACA,OAAAgB,EAAAkC,MAAAjD,EAAAD,EAAA,CAAwCsD,OAAAtC,EAAAmC,aAUxCI,OAAA,SAAAtD,GAIA,IAHA,IAAAuD,EAAA,SAAA3G,EAAAhE,GACAoH,EAAApH,GAAAgE,GAEA/O,EAAA,EAAA2U,EAAAnJ,UAAAM,OAA0C9L,EAAA2U,IAAU3U,EACpDkT,EAAAiB,KAAA3I,UAAAxL,GAAA0V,GAEA,OAAAvD,GAMAwD,SAAA,SAAAC,GACA,IAAAC,EAAAza,KACA0a,EAAAF,KAAAva,eAAA,eAAAua,EAAAG,YAAA,WACA,OAAAF,EAAA3B,MAAA9Y,KAAAoQ,YAGAwK,EAAA,WACA5a,KAAA2a,YAAAD,GAYA,OATAE,EAAA3K,UAAAwK,EAAAxK,UACAyK,EAAAzK,UAAA,IAAA2K,EACAF,EAAAL,OAAAvC,EAAAyC,SAEAC,GACA1C,EAAAuC,OAAAK,EAAAzK,UAAAuK,GAGAE,EAAAG,UAAAJ,EAAAxK,UACAyK,IAIAI,EAAAhD,EAWAA,EAAAiD,aAAAjD,EAAAa,SAUAb,EAAAkD,QAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAnL,MAAAC,UAAA+K,QAAA7K,KAAA8K,EAAAC,EAAAC,IAUArD,EAAAsD,kBAAAtD,EAAAU,eASAV,EAAAuD,yBAAAvD,EAAAY,sBAOA,IAAA4C,EAAA,CACAC,OAAA,SAAArW,GACA,OAAAA,GAGAsW,WAAA,SAAAtW,GACA,OAAAA,KAGAuW,YAAA,SAAAvW,GACA,OAAAA,KAAA,IAGAwW,cAAA,SAAAxW,GACA,OAAAA,GAAA,MACA,GAAAA,KAEA,MAAAA,KAAA,OAGAyW,YAAA,SAAAzW,GACA,OAAAA,OAGA0W,aAAA,SAAA1W,GACA,OAAAA,GAAA,GAAAA,IAAA,GAGA2W,eAAA,SAAA3W,GACA,OAAAA,GAAA,MACA,GAAAA,MAEA,KAAAA,GAAA,GAAAA,IAAA,IAGA4W,YAAA,SAAA5W,GACA,OAAAA,SAGA6W,aAAA,SAAA7W,GACA,SAAAA,GAAA,GAAAA,MAAA,IAGA8W,eAAA,SAAA9W,GACA,OAAAA,GAAA,MACA,GAAAA,SAEA,KAAAA,GAAA,GAAAA,MAAA,IAGA+W,YAAA,SAAA/W,GACA,OAAAA,WAGAgX,aAAA,SAAAhX,GACA,OAAAA,GAAA,GAAAA,QAAA,GAGAiX,eAAA,SAAAjX,GACA,OAAAA,GAAA,MACA,GAAAA,UAEA,KAAAA,GAAA,GAAAA,QAAA,IAGAkX,WAAA,SAAAlX,GACA,SAAAtB,KAAAuC,IAAAjB,GAAAtB,KAAAkC,GAAA,KAGAuW,YAAA,SAAAnX,GACA,OAAAtB,KAAAwC,IAAAlB,GAAAtB,KAAAkC,GAAA,KAGAwW,cAAA,SAAApX,GACA,WAAAtB,KAAAuC,IAAAvC,KAAAkC,GAAAZ,GAAA,IAGAqX,WAAA,SAAArX,GACA,WAAAA,EAAA,EAAAtB,KAAAO,IAAA,MAAAe,EAAA,KAGAsX,YAAA,SAAAtX,GACA,WAAAA,EAAA,IAAAtB,KAAAO,IAAA,MAAAe,IAGAuX,cAAA,SAAAvX,GACA,WAAAA,EACA,EAEA,IAAAA,EACA,GAEAA,GAAA,MACA,GAAAtB,KAAAO,IAAA,MAAAe,EAAA,IAEA,MAAAtB,KAAAO,IAAA,QAAAe,KAGAwX,WAAA,SAAAxX,GACA,OAAAA,GAAA,EACAA,IAEAtB,KAAAmC,KAAA,EAAAb,KAAA,IAGAyX,YAAA,SAAAzX,GACA,OAAAtB,KAAAmC,KAAA,GAAAb,GAAA,GAAAA,IAGA0X,cAAA,SAAA1X,GACA,OAAAA,GAAA,OACA,IAAAtB,KAAAmC,KAAA,EAAAb,KAAA,GAEA,IAAAtB,KAAAmC,KAAA,GAAAb,GAAA,GAAAA,GAAA,IAGA2X,cAAA,SAAA3X,GACA,IAAAlE,EAAA,QACAgE,EAAA,EACAY,EAAA,EACA,WAAAV,EACA,EAEA,IAAAA,EACA,GAEAF,IACAA,EAAA,IAEAY,EAAA,GACAA,EAAA,EACA5E,EAAAgE,EAAA,GAEAhE,EAAAgE,GAAA,EAAApB,KAAAkC,IAAAlC,KAAAkZ,KAAA,EAAAlX,IAEAA,EAAAhC,KAAAO,IAAA,MAAAe,GAAA,IAAAtB,KAAAwC,KAAAlB,EAAAlE,IAAA,EAAA4C,KAAAkC,IAAAd,KAGA+X,eAAA,SAAA7X,GACA,IAAAlE,EAAA,QACAgE,EAAA,EACAY,EAAA,EACA,WAAAV,EACA,EAEA,IAAAA,EACA,GAEAF,IACAA,EAAA,IAEAY,EAAA,GACAA,EAAA,EACA5E,EAAAgE,EAAA,GAEAhE,EAAAgE,GAAA,EAAApB,KAAAkC,IAAAlC,KAAAkZ,KAAA,EAAAlX,GAEAA,EAAAhC,KAAAO,IAAA,MAAAe,GAAAtB,KAAAwC,KAAAlB,EAAAlE,IAAA,EAAA4C,KAAAkC,IAAAd,GAAA,IAGAgY,iBAAA,SAAA9X,GACA,IAAAlE,EAAA,QACAgE,EAAA,EACAY,EAAA,EACA,WAAAV,EACA,EAEA,IAAAA,GAAA,IACA,GAEAF,IACAA,EAAA,KAEAY,EAAA,GACAA,EAAA,EACA5E,EAAAgE,EAAA,GAEAhE,EAAAgE,GAAA,EAAApB,KAAAkC,IAAAlC,KAAAkZ,KAAA,EAAAlX,GAEAV,EAAA,EACAU,EAAAhC,KAAAO,IAAA,MAAAe,GAAA,IAAAtB,KAAAwC,KAAAlB,EAAAlE,IAAA,EAAA4C,KAAAkC,IAAAd,IAAA,GAEAY,EAAAhC,KAAAO,IAAA,OAAAe,GAAA,IAAAtB,KAAAwC,KAAAlB,EAAAlE,IAAA,EAAA4C,KAAAkC,IAAAd,GAAA,OAEAiY,WAAA,SAAA/X,GACA,IAAAlE,EAAA,QACA,OAAAkE,MAAAlE,EAAA,GAAAkE,EAAAlE,IAGAkc,YAAA,SAAAhY,GACA,IAAAlE,EAAA,QACA,OAAAkE,GAAA,GAAAA,IAAAlE,EAAA,GAAAkE,EAAAlE,GAAA,GAGAmc,cAAA,SAAAjY,GACA,IAAAlE,EAAA,QACA,OAAAkE,GAAA,MACAA,MAAA,GAAAlE,GAAA,QAAAkE,EAAAlE,GAAA,GAEA,KAAAkE,GAAA,GAAAA,IAAA,GAAAlE,GAAA,QAAAkE,EAAAlE,GAAA,IAGAoc,aAAA,SAAAlY,GACA,SAAAoW,EAAA+B,cAAA,EAAAnY,IAGAmY,cAAA,SAAAnY,GACA,OAAAA,EAAA,OACA,OAAAA,IAEAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAEAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAEA,QAAAA,GAAA,YAAAA,EAAA,SAGAoY,gBAAA,SAAApY,GACA,OAAAA,EAAA,GACA,GAAAoW,EAAA8B,aAAA,EAAAlY,GAEA,GAAAoW,EAAA+B,cAAA,EAAAnY,EAAA,QAIAqY,EAAA,CACAjC,WAYAR,EAAA0C,cAAAlC,EAEA,IAAAxV,EAAAlC,KAAAkC,GACA2X,EAAA3X,EAAA,IACA4X,GAAA,EAAA5X,EACA6X,GAAA7X,EAAA,EACA8X,GAAA9X,EAAA,EACA+X,GAAA,EAAA/X,EAAA,EAKAgY,GAAA,CAKAC,MAAA,SAAAC,GACAA,EAAAC,IAAAC,UAAA,IAAAF,EAAAG,MAAAH,EAAAI,SAcAC,YAAA,SAAAJ,EAAA5Z,EAAAC,EAAA6Z,EAAAC,EAAAE,GACA,GAAAA,EAAA,CACA,IAAA9a,EAAAI,KAAAD,IAAA2a,EAAAF,EAAA,EAAAD,EAAA,GACAI,EAAAla,EAAAb,EACAgb,EAAAla,EAAAd,EACAib,EAAApa,EAAA8Z,EAAA3a,EACAkb,EAAApa,EAAA8Z,EAAA5a,EAEAya,EAAAU,OAAAta,EAAAma,GACAD,EAAAE,GAAAD,EAAAE,GACAT,EAAAW,IAAAL,EAAAC,EAAAhb,GAAAsC,GAAA6X,IACAM,EAAAW,IAAAH,EAAAD,EAAAhb,GAAAma,GAAA,GACAM,EAAAW,IAAAH,EAAAC,EAAAlb,EAAA,EAAAma,IACAM,EAAAW,IAAAL,EAAAG,EAAAlb,EAAAma,GAAA7X,IACIyY,EAAAE,GACJR,EAAAU,OAAAJ,EAAAja,GACA2Z,EAAAW,IAAAH,EAAAD,EAAAhb,GAAAma,OACAM,EAAAW,IAAAL,EAAAC,EAAAhb,EAAAma,GAAA7X,EAAA6X,KACIa,EAAAE,GACJT,EAAAW,IAAAL,EAAAC,EAAAhb,GAAAsC,EAAA,GACAmY,EAAAW,IAAAL,EAAAG,EAAAlb,EAAA,EAAAsC,IAEAmY,EAAAW,IAAAL,EAAAC,EAAAhb,GAAAsC,KAEAmY,EAAAY,YACAZ,EAAAU,OAAAta,EAAAC,QAEA2Z,EAAAa,KAAAza,EAAAC,EAAA6Z,EAAAC,IAIAW,UAAA,SAAAd,EAAAe,EAAAV,EAAAja,EAAAC,EAAA2a,GACA,IAAArI,EAAAsI,EAAAC,EAAAC,EAAAC,EACAC,GAAAL,GAAA,GAAAxB,EAEA,IAAAuB,GAAA,iBAAAA,GAEA,+BADApI,EAAAoI,EAAA5L,aACA,+BAAAwD,GAMA,KAAA3D,MAAAqL,OAAA,IAMA,OAFAL,EAAAsB,YAEAP,GAEA,QACAf,EAAAW,IAAAva,EAAAC,EAAAga,EAAA,EAAAZ,IACAO,EAAAY,YACA,MACA,eACAZ,EAAAU,OAAAta,EAAAT,KAAAwC,IAAAkZ,GAAAhB,EAAAha,EAAAV,KAAAuC,IAAAmZ,GAAAhB,GACAgB,GAAAzB,GACAI,EAAAuB,OAAAnb,EAAAT,KAAAwC,IAAAkZ,GAAAhB,EAAAha,EAAAV,KAAAuC,IAAAmZ,GAAAhB,GACAgB,GAAAzB,GACAI,EAAAuB,OAAAnb,EAAAT,KAAAwC,IAAAkZ,GAAAhB,EAAAha,EAAAV,KAAAuC,IAAAmZ,GAAAhB,GACAL,EAAAY,YACA,MACA,kBASAO,EAAAd,GADAe,EAAA,KAAAf,GAEAY,EAAAtb,KAAAuC,IAAAmZ,EAAA1B,IAAAwB,EACAD,EAAAvb,KAAAwC,IAAAkZ,EAAA1B,IAAAwB,EACAnB,EAAAW,IAAAva,EAAA6a,EAAA5a,EAAA6a,EAAAE,EAAAC,EAAAxZ,EAAAwZ,EAAA3B,IACAM,EAAAW,IAAAva,EAAA8a,EAAA7a,EAAA4a,EAAAG,EAAAC,EAAA3B,GAAA2B,GACArB,EAAAW,IAAAva,EAAA6a,EAAA5a,EAAA6a,EAAAE,EAAAC,IAAA3B,IACAM,EAAAW,IAAAva,EAAA8a,EAAA7a,EAAA4a,EAAAG,EAAAC,EAAA3B,GAAA2B,EAAAxZ,GACAmY,EAAAY,YACA,MACA,WACA,IAAAI,EAAA,CACAG,EAAAxb,KAAA6b,QAAAnB,EACAL,EAAAa,KAAAza,EAAA+a,EAAA9a,EAAA8a,EAAA,EAAAA,EAAA,EAAAA,GACA,MAEAE,GAAA1B,GAEA,cACAsB,EAAAtb,KAAAuC,IAAAmZ,GAAAhB,EACAa,EAAAvb,KAAAwC,IAAAkZ,GAAAhB,EACAL,EAAAU,OAAAta,EAAA6a,EAAA5a,EAAA6a,GACAlB,EAAAuB,OAAAnb,EAAA8a,EAAA7a,EAAA4a,GACAjB,EAAAuB,OAAAnb,EAAA6a,EAAA5a,EAAA6a,GACAlB,EAAAuB,OAAAnb,EAAA8a,EAAA7a,EAAA4a,GACAjB,EAAAY,YACA,MACA,eACAS,GAAA1B,GAEA,YACAsB,EAAAtb,KAAAuC,IAAAmZ,GAAAhB,EACAa,EAAAvb,KAAAwC,IAAAkZ,GAAAhB,EACAL,EAAAU,OAAAta,EAAA6a,EAAA5a,EAAA6a,GACAlB,EAAAuB,OAAAnb,EAAA6a,EAAA5a,EAAA6a,GACAlB,EAAAU,OAAAta,EAAA8a,EAAA7a,EAAA4a,GACAjB,EAAAuB,OAAAnb,EAAA8a,EAAA7a,EAAA4a,GACA,MACA,WACAA,EAAAtb,KAAAuC,IAAAmZ,GAAAhB,EACAa,EAAAvb,KAAAwC,IAAAkZ,GAAAhB,EACAL,EAAAU,OAAAta,EAAA6a,EAAA5a,EAAA6a,GACAlB,EAAAuB,OAAAnb,EAAA6a,EAAA5a,EAAA6a,GACAlB,EAAAU,OAAAta,EAAA8a,EAAA7a,EAAA4a,GACAjB,EAAAuB,OAAAnb,EAAA8a,EAAA7a,EAAA4a,GACAI,GAAA1B,GACAsB,EAAAtb,KAAAuC,IAAAmZ,GAAAhB,EACAa,EAAAvb,KAAAwC,IAAAkZ,GAAAhB,EACAL,EAAAU,OAAAta,EAAA6a,EAAA5a,EAAA6a,GACAlB,EAAAuB,OAAAnb,EAAA6a,EAAA5a,EAAA6a,GACAlB,EAAAU,OAAAta,EAAA8a,EAAA7a,EAAA4a,GACAjB,EAAAuB,OAAAnb,EAAA8a,EAAA7a,EAAA4a,GACA,MACA,WACAA,EAAAtb,KAAAuC,IAAAmZ,GAAAhB,EACAa,EAAAvb,KAAAwC,IAAAkZ,GAAAhB,EACAL,EAAAU,OAAAta,EAAA6a,EAAA5a,EAAA6a,GACAlB,EAAAuB,OAAAnb,EAAA6a,EAAA5a,EAAA6a,GACA,MACA,WACAlB,EAAAU,OAAAta,EAAAC,GACA2Z,EAAAuB,OAAAnb,EAAAT,KAAAuC,IAAAmZ,GAAAhB,EAAAha,EAAAV,KAAAwC,IAAAkZ,GAAAhB,GAIAL,EAAAyB,OACAzB,EAAA0B,eAnGA1B,EAAA2B,UAAAZ,EAAA3a,EAAA2a,EAAAb,MAAA,EAAA7Z,EAAA0a,EAAAZ,OAAA,EAAAY,EAAAb,MAAAa,EAAAZ,SA6GAyB,eAAA,SAAAC,EAAAC,GAGA,OAAAD,EAAAzb,EAAA0b,EAAAxB,KAFA,MAEAuB,EAAAzb,EAAA0b,EAAAtB,MAFA,MAGAqB,EAAAxb,EAAAyb,EAAAvB,IAHA,MAGAsB,EAAAxb,EAAAyb,EAAArB,OAHA,MAMAsB,SAAA,SAAA/B,EAAA8B,GACA9B,EAAAgC,OACAhC,EAAAsB,YACAtB,EAAAa,KAAAiB,EAAAxB,KAAAwB,EAAAvB,IAAAuB,EAAAtB,MAAAsB,EAAAxB,KAAAwB,EAAArB,OAAAqB,EAAAvB,KACAP,EAAAiC,QAGAC,WAAA,SAAAlC,GACAA,EAAAmC,WAGAZ,OAAA,SAAAvB,EAAAoC,EAAAtJ,EAAAuJ,GACA,IAAAC,EAAAxJ,EAAAyJ,YACA,GAAAD,EAAA,CACA,cAAAA,EAAA,CACA,IAAAE,GAAAJ,EAAAhc,EAAA0S,EAAA1S,GAAA,EACA4Z,EAAAuB,OAAAiB,EAAAH,EAAAvJ,EAAAzS,EAAA+b,EAAA/b,GACA2Z,EAAAuB,OAAAiB,EAAAH,EAAAD,EAAA/b,EAAAyS,EAAAzS,OACI,UAAAic,IAAAD,GAAA,UAAAC,GAAAD,EACJrC,EAAAuB,OAAAa,EAAAhc,EAAA0S,EAAAzS,GAEA2Z,EAAAuB,OAAAzI,EAAA1S,EAAAgc,EAAA/b,GAEA2Z,EAAAuB,OAAAzI,EAAA1S,EAAA0S,EAAAzS,QAIAyS,EAAA2J,QAKAzC,EAAA0C,cACAL,EAAAD,EAAAO,sBAAAP,EAAAQ,kBACAP,EAAAD,EAAAS,sBAAAT,EAAAU,kBACAT,EAAAvJ,EAAA8J,kBAAA9J,EAAA6J,sBACAN,EAAAvJ,EAAAgK,kBAAAhK,EAAA+J,sBACA/J,EAAA1S,EACA0S,EAAAzS,GAVA2Z,EAAAuB,OAAAzI,EAAA1S,EAAA0S,EAAAzS,KAcA0c,GAAAlD,GAWAhD,EAAAiD,MAAAD,GAAAC,MASAjD,EAAAmG,qBAAA,SAAAhD,GACAA,EAAAsB,YACAzB,GAAAO,YAAAvF,MAAAgF,GAAA1N,YAGA,IAAA8Q,GAAA,CAIAC,KAAA,SAAAC,EAAArQ,GACA,OAAA+J,EAAAd,MAAAha,KAAAohB,KAAAphB,KAAAohB,GAAA,IAA4DrQ,KAI5DmQ,GAAAC,KAAA,UACAE,aAAA,kBACAC,iBAAA,OACAC,kBAAA,qDACAC,gBAAA,GACAC,iBAAA,SACAC,kBAAA,IACAC,WAAA,IAGA,IAAAC,GAAAV,GAEA1I,GAAAsC,EAAAtC,eAuBAqJ,GAAA,CASAC,aAAA,SAAAnO,EAAAyL,GACA,IAAA2C,GAAA,GAAApO,GAAAf,MAAA,wCACA,IAAAmP,GAAA,WAAAA,EAAA,GACA,WAAA3C,EAKA,OAFAzL,GAAAoO,EAAA,GAEAA,EAAA,IACA,SACA,OAAApO,EACA,QACAA,GAAA,IAMA,OAAAyL,EAAAzL,GAUAqO,UAAA,SAAArO,GACA,IAAAzO,EAAA1B,EAAAE,EAAAzC,EAWA,OATA6Z,EAAAzC,SAAA1E,IACAzO,GAAAyO,EAAA6K,KAAA,EACAhb,GAAAmQ,EAAA8K,OAAA,EACA/a,GAAAiQ,EAAA+K,QAAA,EACAzd,GAAA0S,EAAA4K,MAAA,GAEArZ,EAAA1B,EAAAE,EAAAzC,GAAA0S,GAAA,EAGA,CACA6K,IAAAtZ,EACAuZ,MAAAjb,EACAkb,OAAAhb,EACA6a,KAAAtd,EACAmd,OAAAlZ,EAAAxB,EACAya,MAAAld,EAAAuC,IAWAye,WAAA,SAAApI,GACA,IAAAqI,EAAAN,GAAAtiB,OACA8f,EAAA5G,GAAAqB,EAAAsI,SAAAD,EAAAV,iBACAY,EAAA,CACAC,OAAA7J,GAAAqB,EAAAyI,WAAAJ,EAAAX,mBACAgB,WAAAzH,EAAAjB,QAAAiI,aAAAtJ,GAAAqB,EAAA0I,WAAAL,EAAAR,mBAAAtC,GACAA,OACAJ,MAAAxG,GAAAqB,EAAA2I,UAAAN,EAAAT,kBACAlL,OAAA,KACA5E,OAAA,IAIA,OADAyQ,EAAAzQ,OA7FA,SAAAyQ,GACA,OAAAA,GAAAtH,EAAA7C,cAAAmK,EAAAhD,OAAAtE,EAAA7C,cAAAmK,EAAAC,QACA,MAGAD,EAAApD,MAAAoD,EAAApD,MAAA,SACAoD,EAAA7L,OAAA6L,EAAA7L,OAAA,QACA6L,EAAAhD,KAAA,MACAgD,EAAAC,OAqFAI,CAAAL,GACAA,GAYAM,QAAA,SAAAC,EAAAC,EAAAnL,GACA,IAAA7S,EAAA2U,EAAA5F,EAEA,IAAA/O,EAAA,EAAA2U,EAAAoJ,EAAAjS,OAAmC9L,EAAA2U,IAAU3U,EAE7C,QAAA6L,KADAkD,EAAAgP,EAAA/d,WAIA6L,IAAAmS,GAAA,mBAAAjP,IACAA,IAAAiP,SAEAnS,IAAAgH,GAAAqD,EAAA5C,QAAAvE,KACAA,IAAA8D,SAEAhH,IAAAkD,GACA,OAAAA,IAMAkP,GAAA/H,EAEAgI,GAAA9B,GACAnH,GAAAgI,GACAgB,GAAAE,OAHAxF,EAIAsF,GAAAC,UACAD,GAAAhJ,WAmDA,IAAAmJ,GAAA,SAAAC,GACAJ,GAAAxI,OAAAra,KAAAijB,GACAjjB,KAAAkjB,WAAApK,MAAA9Y,KAAAoQ,YAGAyS,GAAAxI,OAAA2I,GAAA/S,UAAA,CAEAiT,WAAA,WACAljB,KAAAmjB,QAAA,GAGAC,MAAA,WACA,IAAA3I,EAAAza,KAKA,OAJAya,EAAA4I,QACA5I,EAAA4I,MAAAR,GAAAlM,MAAA8D,EAAA6I,SAEA7I,EAAA8I,OAAA,GACA9I,GAGA+I,WAAA,SAAAC,GACA,IAAAhJ,EAAAza,KACA0jB,EAAAjJ,EAAA6I,OACAK,EAAAlJ,EAAA8I,OACAK,EAAAnJ,EAAA4I,MAGA,OAAAK,GAAA,IAAAD,GAMAG,IACAA,EAAAnJ,EAAA4I,MAAA,IAGAM,IACAA,EAAAlJ,EAAA8I,OAAA,IAvFA,SAAAI,EAAAC,EAAAF,EAAAD,GACA,IACA7e,EAAA2U,EAAA5J,EAAAkU,EAAAC,EAAA/M,EAAAH,EAAAmN,EAAAC,EADA7K,EAAAhB,OAAAgB,KAAAuK,GAGA,IAAA9e,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAgC9L,EAAA2U,IAAU3U,EAa1C,GAVAmS,EAAA2M,EAFA/T,EAAAwJ,EAAAvU,IAMAgf,EAAA3jB,eAAA0P,KACAiU,EAAAjU,GAAAoH,IAGA8M,EAAAD,EAAAjU,MAEAoH,GAAA,MAAApH,EAAA,IAYA,GARAgU,EAAA1jB,eAAA0P,KACAgU,EAAAhU,GAAAkU,IAKAjN,SAAAG,WAFA+M,EAAAH,EAAAhU,IAKA,cAAAiH,GAEA,IADAmN,EAAAlM,EAAAiM,IACArQ,QACAuQ,EAAAnM,EAAAd,IACAtD,MAAA,CACAmQ,EAAAjU,GAAAqU,EAAA3N,IAAA0N,EAAAN,GAAAtR,YACA,eAGI,GAAA0Q,GAAAvK,SAAAwL,IAAAjB,GAAAvK,SAAAvB,GAAA,CACJ6M,EAAAjU,GAAAmU,GAAA/M,EAAA+M,GAAAL,EACA,SAIAG,EAAAjU,GAAAoH,GA6CAkN,CAAAN,EAAAC,EAAAF,EAAAD,GAEAhJ,IAfAA,EAAA4I,MAAAK,EACAjJ,EAAA8I,OAAA,KACA9I,IAgBAyJ,gBAAA,WACA,OACA7f,EAAArE,KAAAsjB,OAAAjf,EACAC,EAAAtE,KAAAsjB,OAAAhf,IAIA6f,SAAA,WACA,OAAAtB,GAAAuB,SAAApkB,KAAAsjB,OAAAjf,IAAAwe,GAAAuB,SAAApkB,KAAAsjB,OAAAhf,MAIA0e,GAAA3I,OAAAwI,GAAAtI,SAEA,IAAA8J,GAAArB,GAEAsB,GAAAD,GAAAhK,OAAA,CACA2D,MAAA,KACAuG,YAAA,EACAC,SAAA,GACAzB,OAAA,GACA0B,OAAA,KAEAC,oBAAA,KACAC,oBAAA,OAGAC,GAAAN,GAUAnM,OAAA0M,eAAAP,GAAArU,UAAA,mBACA6U,IAAA,WACA,OAAA9kB,QAUAmY,OAAA0M,eAAAP,GAAArU,UAAA,iBACA6U,IAAA,WACA,OAAA9kB,KAAAge,OAEA+G,IAAA,SAAApR,GACA3T,KAAAge,MAAArK,KAIAiO,GAAAT,KAAA,UACA6D,UAAA,CACAC,SAAA,IACAlC,OAAA,eACAmC,WAAArC,GAAA9K,KACAoN,WAAAtC,GAAA9K,QAIA,IAAAqN,GAAA,CACAC,WAAA,GACAC,QAAA,KAQAC,aAAA,SAAAvH,EAAAgH,EAAAC,EAAAO,GACA,IACA5gB,EAAA2U,EADA8L,EAAArlB,KAAAqlB,WAWA,IARAL,EAAAhH,QACAgH,EAAAS,UAAAC,KAAAC,MACAX,EAAAC,WAEAO,IACAxH,EAAA4H,WAAA,GAGAhhB,EAAA,EAAA2U,EAAA8L,EAAA3U,OAAuC9L,EAAA2U,IAAU3U,EACjD,GAAAygB,EAAAzgB,GAAAoZ,UAEA,YADAqH,EAAAzgB,GAAAogB,GAKAK,EAAAQ,KAAAb,GAGA,IAAAK,EAAA3U,QACA1Q,KAAA8lB,yBAIAC,gBAAA,SAAA/H,GACA,IAAAvG,EAAAoL,GAAAmD,UAAAhmB,KAAAqlB,WAAA,SAAAL,GACA,OAAAA,EAAAhH,aAGA,IAAAvG,IACAzX,KAAAqlB,WAAAY,OAAAxO,EAAA,GACAuG,EAAA4H,WAAA,IAIAE,sBAAA,WACA,IAAArL,EAAAza,KACA,OAAAya,EAAA6K,UAIA7K,EAAA6K,QAAAzC,GAAAqD,iBAAA/V,KAAAwH,OAAA,WACA8C,EAAA6K,QAAA,KACA7K,EAAA0L,kBAQAA,YAAA,WACAnmB,KAEAomB,UAFApmB,KAKAqlB,WAAA3U,OAAA,GALA1Q,KAMA8lB,yBAOAM,QAAA,WAMA,IALA,IACApB,EAAAhH,EAAAwG,EAAA6B,EADAhB,EAAArlB,KAAAqlB,WAEAzgB,EAAA,EAGAA,EAAAygB,EAAA3U,QAEAsN,GADAgH,EAAAK,EAAAzgB,IACAoZ,MACAwG,EAAAQ,EAAAR,SAIA6B,EAAAziB,KAAAkB,OAAA4gB,KAAAC,MAAAX,EAAAS,WAAAT,EAAAC,SAAAT,GAAA,EACAQ,EAAAT,YAAA3gB,KAAAD,IAAA0iB,EAAA7B,GAEA3B,GAAAlK,SAAAqM,EAAAP,OAAA,CAAAzG,EAAAgH,GAAAhH,GACA6E,GAAAlK,SAAAqM,EAAAN,oBAAA,CAAAM,GAAAhH,GAEAgH,EAAAT,aAAAC,GACA3B,GAAAlK,SAAAqM,EAAAL,oBAAA,CAAAK,GAAAhH,GACAA,EAAA4H,WAAA,EACAP,EAAAY,OAAArhB,EAAA,MAEAA,IAMA8d,GAAAG,GAAAhJ,QAAA6I,QAEA4D,GAAA,0CAgDA,SAAAC,GAAAtL,EAAAuL,GACA,IAAAC,EAAAxL,EAAAyL,SACA,GAAAD,EAAA,CAIA,IAAAE,EAAAF,EAAAE,UACAlP,EAAAkP,EAAA3L,QAAAwL,IACA,IAAA/O,GACAkP,EAAAV,OAAAxO,EAAA,GAGAkP,EAAAjW,OAAA,IAIA4V,GAAAlV,QAAA,SAAAzB,UACAsL,EAAAtL,YAGAsL,EAAAyL,WAIA,IAAAE,GAAA,SAAA5I,EAAA6I,GACA7mB,KAAAkjB,WAAAlF,EAAA6I,IAGAhE,GAAAxI,OAAAuM,GAAA3W,UAAA,CAMA6W,mBAAA,KAMAC,gBAAA,KAEA7D,WAAA,SAAAlF,EAAA6I,GACA7mB,KACAge,QADAhe,KAEAyX,MAAAoP,EAFA7mB,KAGAgnB,aAHAhnB,KAIAinB,eAGAC,YAAA,SAAAL,GACA7mB,KAAAyX,MAAAoP,GAGAG,WAAA,WACA,IAAAvM,EAAAza,KACAmnB,EAAA1M,EAAA2M,UACAC,EAAA5M,EAAA6M,aAEA,OAAAH,EAAAI,SAAAJ,EAAAI,WAAA9M,EAAAuD,MAAAwJ,SACAL,EAAAI,QAAAF,EAAAE,SAAA9M,EAAAuD,MAAAnE,QAAA2N,OAAAC,MAAA,GAAA7P,IAEA,OAAAuP,EAAAO,SAAAP,EAAAO,WAAAjN,EAAAuD,MAAAwJ,SACAL,EAAAO,QAAAL,EAAAK,SAAAjN,EAAAuD,MAAAnE,QAAA2N,OAAAG,MAAA,GAAA/P,KAIA0P,WAAA,WACA,OAAAtnB,KAAAge,MAAA4J,KAAAC,SAAA7nB,KAAAyX,QAGA2P,QAAA,WACA,OAAApnB,KAAAge,MAAA8J,eAAA9nB,KAAAyX,QAGAsQ,cAAA,SAAAC,GACA,OAAAhoB,KAAAge,MAAAwJ,OAAAQ,IAMAC,iBAAA,WACA,OAAAjoB,KAAAonB,UAAAM,SAMAQ,iBAAA,WACA,OAAAloB,KAAAonB,UAAAG,SAMAY,eAAA,WACA,OAAAnoB,KAAA+nB,cAAA/nB,KAAAioB,qBAMAG,eAAA,WACA,OAAApoB,KAAA+nB,cAAA/nB,KAAAkoB,qBAGAG,MAAA,WACAroB,KAAAsoB,QAAA,IAMAC,QAAA,WACAvoB,KAAAwoB,OACAjC,GAAAvmB,KAAAwoB,MAAAxoB,OAIAyoB,kBAAA,WACA,IACA7R,EADA5W,KACA8mB,mBACA,OAAAlQ,GAAA,IAAAA,EAAA,CACA8R,OAHA1oB,KAGAge,MACA2K,cAJA3oB,KAIAyX,SAIAmR,eAAA,SAAAnR,GACA,IACAb,EADA5W,KACA+mB,gBACA,OAAAnQ,GAAA,IAAAA,EAAA,CACA8R,OAHA1oB,KAGAge,MACA2K,cAJA3oB,KAIAyX,MACAoR,OAAApR,KAIAwP,YAAA,WACA,IAIAriB,EAAA2U,EAHA4N,EADAnnB,KACAonB,UACAQ,EAFA5nB,KAEAsnB,aAAAM,MAAA,GACAkB,EAAA3B,EAAAS,KAGA,IAAAhjB,EAAA,EAAA2U,EAAAqO,EAAAlX,OAAiC9L,EAAA2U,IAAU3U,EAC3CkkB,EAAAlkB,GAAAkkB,EAAAlkB,IAPA5E,KAOA4oB,eAAAhkB,GAGAuiB,EAAAE,QAAAF,EAAAE,SAVArnB,KAUAyoB,qBAGAM,mBAAA,SAAAtR,GACA,IAAAuR,EAAAhpB,KAAA4oB,eAAAnR,GACAzX,KAAAonB,UAAAQ,KAAA3B,OAAAxO,EAAA,EAAAuR,GACAhpB,KAAAipB,cAAAD,EAAAvR,GAAA,IAGAyR,sBAAA,WACA,IAzMAjO,EAAAuL,EAyMA/L,EAAAza,KACAqnB,EAAA5M,EAAA6M,aACAM,EAAAP,EAAAO,OAAAP,EAAAO,KAAA,IAKAnN,EAAA+N,QAAAZ,IACAnN,EAAA+N,OAEAjC,GAAA9L,EAAA+N,MAAA/N,GAGAmN,GAAAzP,OAAAgR,aAAAvB,KAtNApB,EAuNA/L,GAvNAQ,EAuNA2M,GAtNAlB,SACAzL,EAAAyL,SAAAC,UAAAd,KAAAW,IAIArO,OAAA0M,eAAA5J,EAAA,YACAmO,cAAA,EACAC,YAAA,EACA1V,MAAA,CACAgT,UAAA,CAAAH,MAIAF,GAAAlV,QAAA,SAAAzB,GACA,IAAA2Z,EAAA,SAAA3Z,EAAA0H,OAAA,GAAAhE,cAAA1D,EAAAO,MAAA,GACAqZ,EAAAtO,EAAAtL,GAEAwI,OAAA0M,eAAA5J,EAAAtL,EAAA,CACAyZ,cAAA,EACAC,YAAA,EACA1V,MAAA,WACA,IAAAhT,EAAAqP,MAAAC,UAAAC,MAAAC,KAAAC,WACAoZ,EAAAD,EAAAzQ,MAAA9Y,KAAAW,GAQA,OANAkiB,GAAA9J,KAAAkC,EAAAyL,SAAAC,UAAA,SAAA8C,GACA,mBAAAA,EAAAH,IACAG,EAAAH,GAAAxQ,MAAA2Q,EAAA9oB,KAIA6oB,SA0LA/O,EAAA+N,MAAAZ,GAKAnN,EAAAiP,kBAGApB,OAAAzF,GAAA9K,KAEAyL,WAAA,SAAAmG,GAMA,IALA,IAAAxC,EAAAnnB,KAAAonB,UACAwC,EAAAzC,EAAAS,MAAA,GACArO,EAAAqQ,EAAAlZ,OACA9L,EAAA,EAEQA,EAAA2U,IAAU3U,EAClBglB,EAAAhlB,GAAA4e,WAAAmG,GAGAxC,EAAAE,SACAF,EAAAE,QAAA7D,WAAAmG,IAIAE,KAAA,WACA,IAAA1C,EAAAnnB,KAAAonB,UACAwC,EAAAzC,EAAAS,MAAA,GACArO,EAAAqQ,EAAAlZ,OACA9L,EAAA,EAMA,IAJAuiB,EAAAE,SACAF,EAAAE,QAAAwC,OAGQjlB,EAAA2U,IAAU3U,EAClBglB,EAAAhlB,GAAAilB,QAIAC,iBAAA,SAAAd,GACAnG,GAAA7I,MAAAgP,EAAA1F,OAAA0F,EAAAe,gBAAA,WACAf,EAAAe,gBAGAC,cAAA,SAAAhB,GACA,IAAA3B,EAAArnB,KAAAge,MAAA4J,KAAAC,SAAAmB,EAAAL,eACAlR,EAAAuR,EAAAH,OACAoB,EAAAjB,EAAAiB,QAAA,GACAvG,EAAAsF,EAAA1F,OACA4G,EAAArH,GAAAqH,cAEAlB,EAAAe,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,aAGA3G,EAAAyG,gBAAAzH,GAAA,CAAAuH,EAAAK,qBAAAjD,EAAAiD,qBAAAJ,EAAAxG,EAAAyG,uBAAA1Z,EAAAgH,GACAiM,EAAA0G,YAAA1H,GAAA,CAAAuH,EAAAM,iBAAAlD,EAAAkD,iBAAAL,EAAAxG,EAAA0G,mBAAA3Z,EAAAgH,GACAiM,EAAA2G,YAAA3H,GAAA,CAAAuH,EAAAO,iBAAAnD,EAAAmD,iBAAA9G,EAAA2G,kBAAA5Z,EAAAgH,IAMAiS,eAAA,WACA,IACAvC,EADAnnB,KACAonB,UACAQ,EAFA5nB,KAEAsnB,aAAAM,KACA6C,EAAAtD,EAAAS,KAAAlX,OACAga,EAAA9C,EAAAlX,OAEAga,EAAAD,EACAtD,EAAAS,KAAA3B,OAAAyE,EAAAD,EAAAC,GACGA,EAAAD,GARHzqB,KASA2qB,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAhH,EAAAiH,GACA,QAAAhmB,EAAA,EAAiBA,EAAAgmB,IAAWhmB,EAC5B5E,KAAA+oB,mBAAApF,EAAA/e,IAOAimB,WAAA,WACA,IAAAD,EAAAxa,UAAAM,OACA1Q,KAAA2qB,eAAA3qB,KAAAsnB,aAAAM,KAAAlX,OAAAka,MAMAE,UAAA,WACA9qB,KAAAonB,UAAAQ,KAAAmD,OAMAC,YAAA,WACAhrB,KAAAonB,UAAAQ,KAAAqD,SAMAC,aAAA,SAAAvH,EAAAiH,GACA5qB,KAAAonB,UAAAQ,KAAA3B,OAAAtC,EAAAiH,GACA5qB,KAAA2qB,eAAAhH,EAAAvT,UAAAM,OAAA,IAMAya,cAAA,WACAnrB,KAAA2qB,eAAA,EAAAva,UAAAM,WAIAkW,GAAAvM,OAAAwI,GAAAtI,SAEA,IAAA6Q,GAAAxE,GAEAhF,GAAAT,KAAA,UACAyI,SAAA,CACAhL,IAAA,CACAuL,gBAAAvI,GAAAtiB,OAAA+hB,aACA+I,YAAA,OACAC,YAAA,EACAgB,YAAA,aAKA,IAAAC,GAAAjH,GAAAhK,OAAA,CACAkR,aAAA,SAAAC,GACA,IAAAC,EAAAzrB,KAAAqjB,MAEA,QAAAoI,GACA7nB,KAAAO,IAAAqnB,EAAAC,EAAApnB,EAAA,GAAAT,KAAAO,IAAAsnB,EAAAnN,OAAAmN,EAAAC,YAAA,IAKAC,QAAA,SAAAC,EAAAC,GACA,IAAAJ,EAAAzrB,KAAAqjB,MAEA,GAAAoI,EAAA,CAQA,IAPA,IAAAK,EAAAjJ,GAAAkJ,kBAAAN,EAAA,CAAgEpnB,EAAAunB,EAAAtnB,EAAAunB,IAChEG,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SAGAC,EAAAT,EAAAS,WACAC,EAAAV,EAAAU,SACAA,EAAAD,GACAC,GAAA,EAAAvoB,KAAAkC,GAEA,KAAAkmB,EAAAG,GACAH,GAAA,EAAApoB,KAAAkC,GAEA,KAAAkmB,EAAAE,GACAF,GAAA,EAAApoB,KAAAkC,GAOA,OAHAkmB,GAAAE,GAAAF,GAAAG,GACAF,GAAAR,EAAAW,aAAAH,GAAAR,EAAAY,YAIA,UAGAC,eAAA,WACA,IAAAb,EAAAzrB,KAAAqjB,MACAkJ,GAAAd,EAAAS,WAAAT,EAAAU,UAAA,EACAK,GAAAf,EAAAW,YAAAX,EAAAY,aAAA,EACA,OACAhoB,EAAAonB,EAAApnB,EAAAT,KAAAuC,IAAAomB,GAAAC,EACAloB,EAAAmnB,EAAAnnB,EAAAV,KAAAwC,IAAAmmB,GAAAC,IAIAC,QAAA,WACA,IAAAhB,EAAAzrB,KAAAqjB,MACA,OAAAzf,KAAAkC,KAAA2lB,EAAAU,SAAAV,EAAAS,aAAA,EAAAtoB,KAAAkC,MAAAlC,KAAAO,IAAAsnB,EAAAY,YAAA,GAAAzoB,KAAAO,IAAAsnB,EAAAW,YAAA,KAGAlI,gBAAA,WACA,IAAAuH,EAAAzrB,KAAAqjB,MACAqJ,EAAAjB,EAAAS,YAAAT,EAAAU,SAAAV,EAAAS,YAAA,EACAS,GAAAlB,EAAAY,YAAAZ,EAAAW,aAAA,EAAAX,EAAAW,YAEA,OACA/nB,EAAAonB,EAAApnB,EAAAT,KAAAuC,IAAAumB,GAAAC,EACAroB,EAAAmnB,EAAAnnB,EAAAV,KAAAwC,IAAAsmB,GAAAC,IAIA9C,KAAA,WACA,IAKA+C,EALA3O,EAAAje,KAAA0oB,OAAAzK,IACAwN,EAAAzrB,KAAAqjB,MACAwJ,EAAApB,EAAAS,WACAY,EAAArB,EAAAU,SACAY,EAAA,UAAAtB,EAAAJ,YAAA,MAGApN,EAAAgC,OAEAhC,EAAAsB,YACAtB,EAAAW,IAAA6M,EAAApnB,EAAAonB,EAAAnnB,EAAAV,KAAAC,IAAA4nB,EAAAY,YAAAU,EAAA,GAAAF,EAAAC,GACA7O,EAAAW,IAAA6M,EAAApnB,EAAAonB,EAAAnnB,EAAAmnB,EAAAW,YAAAU,EAAAD,GAAA,GACA5O,EAAAY,YAEAZ,EAAA+O,UAAAvB,EAAAtB,gBACAlM,EAAAyB,OAEA+L,EAAApB,cACA,UAAAoB,EAAAJ,aAGApN,EAAAsB,YAEAtB,EAAAW,IAAA6M,EAAApnB,EAAAonB,EAAAnnB,EAAAmnB,EAAAY,YAAAQ,GADAD,EAAAG,EAAAtB,EAAAY,aACAS,EAAAF,GACAnB,EAAAW,YAAAW,EAEA9O,EAAAW,IAAA6M,EAAApnB,EAAAonB,EAAAnnB,EAAAmnB,EAAAW,YAAAW,EAAAD,GADAF,EAAAG,EAAAtB,EAAAW,aACAS,EAAAD,GAAA,GAEA3O,EAAAW,IAAA6M,EAAApnB,EAAAonB,EAAAnnB,EAAAyoB,EAAAD,EAAAlpB,KAAAkC,GAAA,EAAA+mB,EAAAjpB,KAAAkC,GAAA,GAEAmY,EAAAY,YACAZ,EAAAiC,OAEAjC,EAAAsB,YACAtB,EAAAW,IAAA6M,EAAApnB,EAAAonB,EAAAnnB,EAAAmnB,EAAAY,YAAAQ,EAAAC,GACA7O,EAAAW,IAAA6M,EAAApnB,EAAAonB,EAAAnnB,EAAAmnB,EAAAW,YAAAU,EAAAD,GAAA,GACA5O,EAAAY,YAEAZ,EAAAgP,UAAA,EAAAxB,EAAApB,YACApM,EAAAiP,SAAA,UAEAjP,EAAAgP,UAAAxB,EAAApB,YACApM,EAAAiP,SAAA,SAGAjP,EAAAkP,YAAA1B,EAAArB,YACAnM,EAAA0B,UAGA1B,EAAAmC,aAIAgN,GAAAvK,GAAArK,eAEA6I,GAAAO,GAAAtiB,OAAA+hB,aAEAO,GAAAT,KAAA,UACAyI,SAAA,CACAyD,KAAA,CACA3M,QAAA,GACAyJ,gBAAA9I,GACAgJ,YAAA,EACAD,YAAA/I,GACAiM,eAAA,OACAC,WAAA,GACAC,iBAAA,EACAC,gBAAA,QACAC,iBAAA,EACAhO,MAAA,MAKA,IAAAiO,GAAAtJ,GAAAhK,OAAA,CACAwP,KAAA,WACA,IAQApS,EAAAmW,EAAAvN,EAAAwN,EAPApC,EADAzrB,KACAqjB,MACApF,EAFAje,KAEA0oB,OAAAzK,IACA6P,EAAArC,EAAAqC,SACAC,EAJA/tB,KAIAguB,UAAA9d,QACAgS,EAAAN,GAAAtiB,OACA2uB,EAAA/L,EAAA0H,SAAAyD,KACAa,GAAA,EA2BA,IAlCAluB,KAWAmuB,OAAAJ,EAAArd,QACAqd,EAAAlI,KAAAkI,EAAA,IAGA9P,EAAAgC,OAGAhC,EAAAmQ,QAAA3C,EAAA6B,gBAAAW,EAAAX,eAGArP,EAAAoQ,aACApQ,EAAAoQ,YAAA5C,EAAA8B,YAAAU,EAAAV,YAGAtP,EAAAqQ,eAAAlB,GAAA3B,EAAA+B,iBAAAS,EAAAT,kBACAvP,EAAAiP,SAAAzB,EAAAgC,iBAAAQ,EAAAR,gBACAxP,EAAAgP,UAAAG,GAAA3B,EAAApB,YAAA4D,EAAA5D,aACApM,EAAAkP,YAAA1B,EAAArB,aAAAlI,EAAAb,aAGApD,EAAAsB,YACA2O,GAAA,EAEAzW,EAAA,EAAiBA,EAAAsW,EAAArd,SAAuB+G,EACxCmW,EAAAG,EAAAtW,GACA4I,EAAAwC,GAAA0L,aAAAR,EAAAtW,GACAoW,EAAAD,EAAAvK,MAGA,IAAA5L,EACAoW,EAAAW,OACAvQ,EAAAU,OAAAkP,EAAAxpB,EAAAwpB,EAAAvpB,GACA4pB,EAAAzW,IAGA4I,GAAA,IAAA6N,EAAA7N,EAAA0N,EAAAG,GAEAL,EAAAW,OACAN,IAAAzW,EAAA,IAAAqW,IAAA,IAAAI,EAEAjQ,EAAAU,OAAAkP,EAAAxpB,EAAAwpB,EAAAvpB,GAGAue,GAAAC,OAAAtD,OAAAvB,EAAAoC,EAAAgD,MAAAuK,EAAAvK,OAEA6K,EAAAzW,IAKAwG,EAAA0B,SACA1B,EAAAmC,aAIAqO,GAAA5L,GAAArK,eAEAkW,GAAA9M,GAAAtiB,OAAA+hB,aAkBA,SAAAsN,GAAAnD,GACA,IAAAC,EAAAzrB,KAAAqjB,MACA,QAAAoI,GAAA7nB,KAAAgrB,IAAApD,EAAAC,EAAApnB,GAAAonB,EAAAnN,OAAAmN,EAAAoD,UAlBAjN,GAAAT,KAAA,UACAyI,SAAA,CACA9J,MAAA,CACAxB,OAAA,EACAwQ,WAAA,SACA3E,gBAAAuE,GACAtE,YAAAsE,GACArE,YAAA,EAEAwE,UAAA,EACAnD,YAAA,EACAlB,iBAAA,MAeA,IAAAuE,GAAA1K,GAAAhK,OAAA,CACAsR,QAAA,SAAAH,EAAAwD,GACA,IAAAvD,EAAAzrB,KAAAqjB,MACA,QAAAoI,GAAA7nB,KAAAO,IAAAqnB,EAAAC,EAAApnB,EAAA,GAAAT,KAAAO,IAAA6qB,EAAAvD,EAAAnnB,EAAA,GAAAV,KAAAO,IAAAsnB,EAAAoD,UAAApD,EAAAnN,OAAA,IAGAiN,aAAAoD,GACAM,SAAAN,GACAO,SAbA,SAAAF,GACA,IAAAvD,EAAAzrB,KAAAqjB,MACA,QAAAoI,GAAA7nB,KAAAgrB,IAAAI,EAAAvD,EAAAnnB,GAAAmnB,EAAAnN,OAAAmN,EAAAoD,WAaAvC,eAAA,WACA,IAAAb,EAAAzrB,KAAAqjB,MACA,OACAhf,EAAAonB,EAAApnB,EACAC,EAAAmnB,EAAAnnB,IAIAmoB,QAAA,WACA,OAAA7oB,KAAAkC,GAAAlC,KAAAO,IAAAnE,KAAAqjB,MAAA/E,OAAA,IAGA4F,gBAAA,WACA,IAAAuH,EAAAzrB,KAAAqjB,MACA,OACAhf,EAAAonB,EAAApnB,EACAC,EAAAmnB,EAAAnnB,EACA6qB,QAAA1D,EAAAnN,OAAAmN,EAAApB,cAIAR,KAAA,SAAAuF,GACA,IAAA3D,EAAAzrB,KAAAqjB,MACApF,EAAAje,KAAA0oB,OAAAzK,IACA6Q,EAAArD,EAAAqD,WACA7P,EAAAwM,EAAAxM,SACAX,EAAAmN,EAAAnN,OACAja,EAAAonB,EAAApnB,EACAC,EAAAmnB,EAAAnnB,EACA4d,EAAAN,GAAAtiB,OACA+hB,EAAAa,EAAAb,aAEAoK,EAAA+C,YAKA/d,IAAA2e,GAAAvM,GAAAC,OAAAjD,eAAA4L,EAAA2D,MACAnR,EAAAkP,YAAA1B,EAAArB,aAAA/I,EACApD,EAAAgP,UAAAwB,GAAAhD,EAAApB,YAAAnI,EAAA0H,SAAA9J,MAAAuK,aACApM,EAAA+O,UAAAvB,EAAAtB,iBAAA9I,EACAwB,GAAAC,OAAA/D,UAAAd,EAAA6Q,EAAAxQ,EAAAja,EAAAC,EAAA2a,OAKAoQ,GAAAzN,GAAAtiB,OAAA+hB,aAaA,SAAAiO,GAAA7D,GACA,OAAAA,QAAAhb,IAAAgb,EAAAtN,MASA,SAAAoR,GAAA9D,GACA,IAAA+D,EAAAC,EAAAC,EAAA/pB,EAAAgqB,EAgBA,OAdAL,GAAA7D,IAEA+D,EAAA/D,EAAApnB,GADAsrB,EAAAlE,EAAAtN,MAAA,GAEAsR,EAAAhE,EAAApnB,EAAAsrB,EACAD,EAAA9rB,KAAAD,IAAA8nB,EAAAnnB,EAAAmnB,EAAAlC,MACA5jB,EAAA/B,KAAAC,IAAA4nB,EAAAnnB,EAAAmnB,EAAAlC,QAEAoG,EAAAlE,EAAArN,OAAA,EACAoR,EAAA5rB,KAAAD,IAAA8nB,EAAApnB,EAAAonB,EAAAlC,MACAkG,EAAA7rB,KAAAC,IAAA4nB,EAAApnB,EAAAonB,EAAAlC,MACAmG,EAAAjE,EAAAnnB,EAAAqrB,EACAhqB,EAAA8lB,EAAAnnB,EAAAqrB,GAGA,CACApR,KAAAiR,EACAhR,IAAAkR,EACAjR,MAAAgR,EACA/Q,OAAA/Y,GAIA,SAAAiqB,GAAAC,EAAApW,EAAAqW,GACA,OAAAD,IAAApW,EAAAqW,EAAAD,IAAAC,EAAArW,EAAAoW,EAmEA,SAAAlE,GAAAF,EAAApnB,EAAAC,GACA,IAAAyrB,EAAA,OAAA1rB,EACA2rB,EAAA,OAAA1rB,EACA2rB,KAAAxE,GAAAsE,GAAAC,IAAAT,GAAA9D,GAEA,OAAAwE,IACAF,GAAA1rB,GAAA4rB,EAAA1R,MAAAla,GAAA4rB,EAAAxR,SACAuR,GAAA1rB,GAAA2rB,EAAAzR,KAAAla,GAAA2rB,EAAAvR,QAzHAkD,GAAAT,KAAA,UACAyI,SAAA,CACAsG,UAAA,CACA/F,gBAAAkF,GACAjF,YAAAiF,GACAc,cAAA,SACA9F,YAAA,MAsHA,IAAA+F,GAAA/L,GAAAhK,OAAA,CACAwP,KAAA,WACA,IAAA5L,EAAAje,KAAA0oB,OAAAzK,IACAwN,EAAAzrB,KAAAqjB,MACAgN,EApCA,SAAA5E,GACA,IAAAwE,EAAAV,GAAA9D,GACAtN,EAAA8R,EAAAxR,MAAAwR,EAAA1R,KACAH,EAAA6R,EAAAvR,OAAAuR,EAAAzR,IACA8R,EA1BA,SAAA7E,EAAA8E,EAAAC,GACA,IAEAtrB,EAAA1B,EAAAE,EAAAzC,EAFA0S,EAAA8X,EAAApB,YACAmE,EAtBA,SAAA/C,GACA,IAAAgF,EAAAhF,EAAA0E,cACA3G,EAAA,GAEA,OAAAiH,GAIAhF,EAAAiF,WACAjF,EAAAlC,KAAAkC,EAAApnB,IACAosB,EAAAb,GAAAa,EAAA,iBAEEhF,EAAAlC,KAAAkC,EAAAnnB,IACFmsB,EAAAb,GAAAa,EAAA,iBAGAjH,EAAAiH,IAAA,EACAjH,GAZAA,EAiBAmH,CAAAlF,GAYA,OATA5I,GAAAxK,SAAA1E,IACAzO,GAAAyO,EAAA6K,KAAA,EACAhb,GAAAmQ,EAAA8K,OAAA,EACA/a,GAAAiQ,EAAA+K,QAAA,EACAzd,GAAA0S,EAAA4K,MAAA,GAEArZ,EAAA1B,EAAAE,EAAAzC,GAAA0S,GAAA,EAGA,CACAzO,EAAAspB,EAAAhQ,KAAAtZ,EAAA,IAAAA,EAAAsrB,IAAAtrB,EACA1B,EAAAgrB,EAAA/P,OAAAjb,EAAA,IAAAA,EAAA+sB,IAAA/sB,EACAE,EAAA8qB,EAAA9P,QAAAhb,EAAA,IAAAA,EAAA8sB,IAAA9sB,EACAzC,EAAAutB,EAAAjQ,MAAAtd,EAAA,IAAAA,EAAAsvB,IAAAtvB,GAQA2vB,CAAAnF,EAAAtN,EAAA,EAAAC,EAAA,GAEA,OACAyS,MAAA,CACAxsB,EAAA4rB,EAAA1R,KACAja,EAAA2rB,EAAAzR,IACA5K,EAAAuK,EACA5a,EAAA6a,GAEA0S,MAAA,CACAzsB,EAAA4rB,EAAA1R,KAAA+R,EAAArvB,EACAqD,EAAA2rB,EAAAzR,IAAA8R,EAAAprB,EACA0O,EAAAuK,EAAAmS,EAAArvB,EAAAqvB,EAAA9sB,EACAD,EAAA6a,EAAAkS,EAAAprB,EAAAorB,EAAA5sB,IAmBAqtB,CAAAtF,GACAoF,EAAAR,EAAAQ,MACAC,EAAAT,EAAAS,MAEA7S,EAAA+O,UAAAvB,EAAAtB,gBACAlM,EAAA+S,SAAAH,EAAAxsB,EAAAwsB,EAAAvsB,EAAAusB,EAAAjd,EAAAid,EAAAttB,GAEAstB,EAAAjd,IAAAkd,EAAAld,GAAAid,EAAAttB,IAAAutB,EAAAvtB,IAIA0a,EAAAgC,OACAhC,EAAAsB,YACAtB,EAAAa,KAAA+R,EAAAxsB,EAAAwsB,EAAAvsB,EAAAusB,EAAAjd,EAAAid,EAAAttB,GACA0a,EAAAiC,OACAjC,EAAA+O,UAAAvB,EAAArB,YACAnM,EAAAa,KAAAgS,EAAAzsB,EAAAysB,EAAAxsB,EAAAwsB,EAAAld,EAAAkd,EAAAvtB,GACA0a,EAAAyB,KAAA,WACAzB,EAAAmC,YAGAhC,OAAA,WACA,IAAAqN,EAAAzrB,KAAAqjB,MACA,OAAAoI,EAAAlC,KAAAkC,EAAAnnB,GAGAqnB,QAAA,SAAAH,EAAAwD,GACA,OAAArD,GAAA3rB,KAAAqjB,MAAAmI,EAAAwD,IAGAzD,aAAA,SAAAC,EAAAwD,GACA,IAAAvD,EAAAzrB,KAAAqjB,MACA,OAAAiM,GAAA7D,GACAE,GAAAF,EAAAD,EAAA,MACAG,GAAAF,EAAA,KAAAuD,IAGAC,SAAA,SAAAzD,GACA,OAAAG,GAAA3rB,KAAAqjB,MAAAmI,EAAA,OAGA0D,SAAA,SAAAF,GACA,OAAArD,GAAA3rB,KAAAqjB,MAAA,KAAA2L,IAGA1C,eAAA,WACA,IACAjoB,EAAAC,EADAmnB,EAAAzrB,KAAAqjB,MAUA,OARAiM,GAAA7D,IACApnB,EAAAonB,EAAApnB,EACAC,GAAAmnB,EAAAnnB,EAAAmnB,EAAAlC,MAAA,IAEAllB,GAAAonB,EAAApnB,EAAAonB,EAAAlC,MAAA,EACAjlB,EAAAmnB,EAAAnnB,GAGA,CAAUD,IAAAC,MAGVmoB,QAAA,WACA,IAAAhB,EAAAzrB,KAAAqjB,MAEA,OAAAiM,GAAA7D,GACAA,EAAAtN,MAAAva,KAAAgrB,IAAAnD,EAAAnnB,EAAAmnB,EAAAlC,MACAkC,EAAArN,OAAAxa,KAAAgrB,IAAAnD,EAAApnB,EAAAonB,EAAAlC,OAGArF,gBAAA,WACA,IAAAuH,EAAAzrB,KAAAqjB,MACA,OACAhf,EAAAonB,EAAApnB,EACAC,EAAAmnB,EAAAnnB,MAKAslB,GAAA,GAEAqH,GAAAtD,GACAuD,GAAAnC,GACAoC,GAAAf,GACAxG,GAAAwH,IAJA9F,GAKA1B,GAAAqH,QACArH,GAAAsH,SACAtH,GAAAuH,aAEA,IAAAE,GAAAxO,GAAAhJ,QAAA6I,QAEAd,GAAAT,KAAA,OACAmQ,MAAA,CACAC,KAAA,SAGA/J,OAAA,CACAC,MAAA,EACA7Q,KAAA,WACA4a,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,KAIAjK,MAAA,EACA/Q,KAAA,cA4FA,IAAAib,GAAAzG,GAAA/Q,OAAA,CAEA0M,gBAAA6C,GAAAuH,UAEAjO,WAAA,WACA,IACAiE,EADA1M,EAAAza,KAGAorB,GAAAnb,UAAAiT,WAAApK,MAAA2B,EAAArK,YAEA+W,EAAA1M,EAAA2M,WACA0K,MAAArX,EAAA6M,aAAAwK,MACA3K,EAAA4K,KAAA,GAGAzJ,OAAA,SAAAD,GACA,IAEAzjB,EAAA2U,EADA8W,EADArwB,KACAonB,UAAAQ,KAKA,IANA5nB,KAIAgyB,OAJAhyB,KAIAiyB,WAEArtB,EAAA,EAAA2U,EAAA8W,EAAA3f,OAAkC9L,EAAA2U,IAAU3U,EAN5C5E,KAOAipB,cAAAoH,EAAAzrB,KAAAyjB,IAIAY,cAAA,SAAAiH,EAAAzY,EAAA4Q,GACA,IAAA5N,EAAAza,KACAmnB,EAAA1M,EAAA2M,UACAC,EAAA5M,EAAA6M,aACAzN,EAAAY,EAAAyX,uBAAAhC,EAAAzY,GAEAyY,EAAAiC,QAAA1X,EAAAsN,cAAAZ,EAAAI,SACA2I,EAAAkC,QAAA3X,EAAAsN,cAAAZ,EAAAO,SACAwI,EAAAvH,cAAAlO,EAAAhD,MACAyY,EAAArH,OAAApR,EACAyY,EAAA5M,OAAA,CACA6G,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACA+F,cAAAtW,EAAAsW,cACA9F,YAAAxQ,EAAAwQ,YACAgI,aAAAhL,EAAAiL,MACAA,MAAA7X,EAAAuD,MAAA4J,KAAA2K,OAAA9a,IAGAgD,EAAA+X,uBAAAtC,EAAAzY,EAAA4Q,GAEA6H,EAAA9M,SAMAoP,uBAAA,SAAAtC,EAAAzY,EAAA4Q,GACA,IAAA5N,EAAAza,KACA0jB,EAAAwM,EAAA5M,OACAmP,EAAAhY,EAAA0N,iBACAoB,EAAAkJ,EAAAC,eACAhC,EAAA+B,EAAAE,eACAC,EAAAnY,EAAAuX,QAAAvX,EAAAwX,WACAY,EAAApY,EAAAqY,wBAAArY,EAAAhD,SACAsb,EAAAtY,EAAAuY,wBAAAvY,EAAAhD,QAAAmb,GAEAlP,EAAAgN,aACAhN,EAAA6F,KAAAlB,EAAAkB,EAAAsJ,EAAAtJ,KACA7F,EAAArf,EAAAqsB,EAAArI,EAAAkB,EAAAsJ,EAAAI,KAAAF,EAAAG,OACAxP,EAAApf,EAAAosB,EAAAqC,EAAAG,OAAA7K,EAAAkB,EAAAsJ,EAAAI,KACAvP,EAAAtF,OAAAsS,EAAAqC,EAAA3T,UAAA3O,EACAiT,EAAAvF,MAAAuS,OAAAjgB,EAAAsiB,EAAA3T,MASA+T,WAAA,SAAAC,GACA,IAMAxuB,EAAAuiB,EALAnJ,EADAhe,KACAge,MAEAqV,EAHArzB,KAEAooB,iBACAvO,QAAAwZ,QACA9Z,OAAA9I,IAAA2iB,EAAApV,EAAA4J,KAAAC,SAAAnX,OAAA0iB,EAAA,EACAE,EAAA,GAGA,IAAA1uB,EAAA,EAAaA,EAAA2U,IAAU3U,GACvBuiB,EAAAnJ,EAAA8J,eAAAljB,IACAmtB,KAAA/T,EAAAuV,iBAAA3uB,MACA,IAAAyuB,IACA,IAAAA,IAAA,IAAAC,EAAAtY,QAAAmM,EAAA2K,aACArhB,IAAA4iB,SAAA5iB,IAAA0W,EAAA2K,QAAA,IAAAwB,EAAAtY,QAAAmM,EAAA2K,UACAwB,EAAAzN,KAAAsB,EAAA2K,OAIA,OAAAwB,GAOAE,cAAA,WACA,OAAAxzB,KAAAmzB,aAAAziB,QAUA+iB,cAAA,SAAA5M,EAAAvT,GACA,IAAAggB,EAAAtzB,KAAAmzB,WAAAtM,GACApP,OAAAhH,IAAA6C,EACAggB,EAAAtY,QAAA1H,IACA,EAEA,WAAAmE,EACA6b,EAAA5iB,OAAA,EACA+G,GAMAwa,SAAA,WACA,IAQArtB,EAAA2U,EAPAvG,EADAhT,KACAooB,iBACAsL,EAFA1zB,KAEAwzB,gBACA3M,EAHA7mB,KAGAyX,MACAkb,EAAA3f,EAAA2f,eACAhP,EAAAgP,EAAA3f,EAAAuL,KAAAvL,EAAAwL,IACAmV,EAAAhQ,GAAAgP,EAAA3f,EAAAmL,MAAAnL,EAAAoL,QACAwV,EAAA,GAGA,IAAAhvB,EAAA,EAAA2U,EAVAvZ,KAUAonB,UAAAQ,KAAAlX,OAA8C9L,EAAA2U,IAAU3U,EACxDgvB,EAAA/N,KAAA7S,EAAA6gB,iBAAA,KAAAjvB,EAAAiiB,IAOA,OACAljB,IALAkf,GAAA5K,cAAAjF,EAAA6G,QAAAia,cAnOA,SAAA9gB,EAAA4gB,GACA,IAEAG,EAAAC,EAAApvB,EAAA2U,EAFA5V,EAAAqP,EAAA2f,eAAA3f,EAAAmL,MAAAnL,EAAAoL,OACA6V,EAAAjhB,EAAAkhB,WAGA,IAAAtvB,EAAA,EAAA2U,EAAAqa,EAAAljB,OAAkC9L,EAAA2U,IAAU3U,EAC5CjB,EAAAC,KAAAD,MAAAC,KAAAgrB,IAAAgF,EAAAhvB,GAAAgvB,EAAAhvB,EAAA,KAGA,IAAAA,EAAA,EAAA2U,EAAA0a,EAAAvjB,OAAiC9L,EAAA2U,IAAU3U,EAC3CovB,EAAAhhB,EAAAmhB,gBAAAvvB,GACAjB,EAAAiB,EAAA,EAAAhB,KAAAD,MAAAqwB,EAAAD,GAAApwB,EACAowB,EAAAC,EAGA,OAAArwB,EAqNAywB,CAAAphB,EAAA4gB,IACA,EAIAA,SACAjQ,QACAgQ,MACAD,aACA1gB,UAQA8f,wBAAA,SAAAjM,EAAApP,GACA,IAWA7S,EAAAyvB,EAAAC,EAAA/K,EAAA0J,EAAA7T,EAVApB,EADAhe,KACAge,MACAmJ,EAFAnnB,KAEAonB,UACApU,EAHAhT,KAGAmoB,iBACAwK,EAAA3f,EAAA2f,eACA9K,EAAA7J,EAAA4J,KAAAC,SACAlU,GAAAX,EAAAuhB,cAAA1M,EAAAhB,GAAAe,KAAAnQ,IACA+c,EAAAxhB,EAAA6G,QAAA2a,aACAnB,EAAArgB,EAAA6G,QAAAwZ,QACAvB,EAAA3K,EAAA2K,MACAnO,EAAA,EAGA,GAAA0P,QAAA5iB,IAAA4iB,QAAA5iB,IAAAqhB,EACA,IAAAltB,EAAA,EAAcA,EAAAiiB,IAAkBjiB,GAChCyvB,EAAArW,EAAA8J,eAAAljB,IAEAmtB,KACAsC,EAAAvC,WACAuC,EAAAI,WAAAxM,qBAAAjV,EAAA4E,IACAoG,EAAAuV,iBAAA3uB,KAEA0vB,GAAAthB,EAAAuhB,cAAA1M,EAAAjjB,GAAAgjB,KAAAnQ,KACA9D,EAAA,GAAA2gB,EAAA,GAAA3gB,GAAA,GAAA2gB,EAAA,KACA3Q,GAAA2Q,IAmBA,OAbA/K,EAAAvW,EAAA6gB,iBAAAlQ,GAEAvE,GADA6T,EAAAjgB,EAAA6gB,iBAAAlQ,EAAAhQ,IACA4V,OAEA9Y,IAAA+jB,GAAA5wB,KAAAgrB,IAAAxP,GAAAoV,IACApV,EAAAoV,EAEAvB,EADAtf,GAAA,IAAAgf,GAAAhf,EAAA,GAAAgf,EACApJ,EAAAiL,EAEAjL,EAAAiL,GAIA,CACApV,OACAmK,OACA0J,OACAC,OAAAD,EAAA7T,EAAA,IAOA4T,wBAAA,SAAAnM,EAAApP,EAAAmb,GACA,IACA/Y,EAAA+Y,EAAA5f,MAAA6G,QACA6a,EAAA,SAAA7a,EAAAia,aAzPA,SAAArc,EAAAmb,EAAA/Y,GACA,IAKA8J,EALAiQ,EAAAhB,EAAAgB,OACAI,EAAAJ,EAAAnc,GACAsc,EAAAtc,EAAA,EAAAmc,EAAAnc,EAAA,QACAkd,EAAAld,EAAAmc,EAAAljB,OAAA,EAAAkjB,EAAAnc,EAAA,QACAmd,EAAA/a,EAAA2X,mBAiBA,OAdA,OAAAuC,IAGAA,EAAAC,GAAA,OAAAW,EAAA/B,EAAAe,IAAAf,EAAAjP,MAAAgR,EAAAX,IAGA,OAAAW,IAEAA,EAAAX,IAAAD,GAGApQ,EAAAqQ,KAAApwB,KAAAD,IAAAowB,EAAAY,IAAA,EAAAC,EAGA,CACAC,MAHAjxB,KAAAgrB,IAAA+F,EAAAZ,GAAA,EAAAa,EAGAhC,EAAAc,WACAnuB,MAAAsU,EAAA4X,cACA9N,SAiOAmR,CAAArd,EAAAmb,EAAA/Y,GAxRA,SAAApC,EAAAmb,EAAA/Y,GACA,IAGAuF,EAAA7Z,EAHAwvB,EAAAlb,EAAAia,aACAlJ,EAAAgI,EAAAc,WACAM,EAAApB,EAAAgB,OAAAnc,GAcA,OAXAoL,GAAA5K,cAAA8c,IACA3V,EAAAwT,EAAAjvB,IAAAkW,EAAA2X,mBACAjsB,EAAAsU,EAAA4X,gBAKArS,EAAA2V,EAAAnK,EACArlB,EAAA,GAGA,CACAsvB,MAAAzV,EAAAwL,EACArlB,QACAoe,MAAAqQ,EAAA5U,EAAA,GAqQA4V,CAAAvd,EAAAmb,EAAA/Y,GAEAob,EANAj1B,KAMAyzB,cAAA5M,EANA7mB,KAMAonB,UAAA0K,OACAoB,EAAAwB,EAAA/Q,MAAA+Q,EAAAG,MAAAI,EAAAP,EAAAG,MAAA,EACAzV,EAAAxb,KAAAD,IACAkf,GAAArK,eAAAqB,EAAAqb,gBAAAC,KACAT,EAAAG,MAAAH,EAAAnvB,OAEA,OACAgkB,KAAA2J,EAAA9T,EAAA,EACA6T,KAAAC,EAAA9T,EAAA,EACA8T,SACA9T,SAIAyK,KAAA,WACA,IACA7L,EADAhe,KACAge,MACAhL,EAFAhT,KAEAmoB,iBACAkI,EAHArwB,KAGAonB,UAAAQ,KACAP,EAJArnB,KAIAsnB,aACA/N,EAAA8W,EAAA3f,OACA9L,EAAA,EAIA,IAFAie,GAAAC,OAAA9C,SAAAhC,EAAAC,IAAAD,EAAAoR,WAEQxqB,EAAA2U,IAAU3U,EAClBqO,MAAAD,EAAAuhB,cAAAlN,EAAAO,KAAAhjB,MACAyrB,EAAAzrB,GAAAilB,OAIAhH,GAAAC,OAAA3C,WAAAnC,EAAAC,MAMAiU,uBAAA,SAAAhC,EAAAzY,GACA,IAOA7S,EAAA2U,EAAA5J,EANAqO,EADAhe,KACAge,MAEAqJ,EADArJ,EAAA4J,KAAAC,SAFA7nB,KAGAyX,OACAwS,EAAAiG,EAAAjG,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAAsG,UACAnf,EAAA,GAIA6R,EAAA,CACA5E,QACAoX,UAAA3d,EACA4P,UACAR,aAdA7mB,KAcAyX,OAGA0B,EAAA,CACA,kBACA,cACA,gBACA,eAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CmM,EADApB,EAAAwJ,EAAAvU,IACAysB,GAAA,CACApH,EAAAta,GACA0X,EAAA1X,GACAkK,EAAAlK,IACAiT,EAAAnL,GAGA,OAAA1G,KAIAskB,GAAAxS,GAAArK,eACA8c,GAAAzS,GAAAhJ,QAAA6I,QAEAd,GAAAT,KAAA,UACAmQ,MAAA,CACAC,KAAA,UAGA/J,OAAA,CACAC,MAAA,EACA7Q,KAAA,SACA2e,SAAA,SACA3d,GAAA,aAEA+P,MAAA,EACA/Q,KAAA,SACA2e,SAAA,OACA3d,GAAA,cAIA4d,SAAA,CACAC,UAAA,CACAC,MAAA,WAEA,UAEApD,MAAA,SAAApX,EAAA0M,GAGA,OAFAA,EAAAC,SAAA3M,EAAA2L,cAAAyL,OAAA,IAEA,MAAApX,EAAAya,OAAA,KAAAza,EAAA0a,OAAA,KADAhO,EAAAC,SAAA3M,EAAA2L,cAAAe,KAAA1M,EAAAzD,OACAjU,EAAA,SAMA,IAAAqyB,GAAAzK,GAAA/Q,OAAA,CAIA0M,gBAAA6C,GAAAsH,MAKA5I,OAAA,SAAAD,GACA,IAAA5N,EAAAza,KACAmnB,EAAA1M,EAAA2M,UAIAvE,GAAA9J,KAHAoO,EAAAS,KAGA,SAAA9H,EAAArI,GACAgD,EAAAwO,cAAAnJ,EAAArI,EAAA4Q,MAOAY,cAAA,SAAAnJ,EAAArI,EAAA4Q,GACA,IAAA5N,EAAAza,KACAmnB,EAAA1M,EAAA2M,UACA6C,EAAAnK,EAAAmK,QAAA,GACA6L,EAAArb,EAAAsN,cAAAZ,EAAAI,SACAwO,EAAAtb,EAAAsN,cAAAZ,EAAAO,SACA7N,EAAAY,EAAAyX,uBAAApS,EAAArI,GACAmQ,EAAAnN,EAAA6M,aAAAM,KAAAnQ,GACAue,EAAAvb,EAAAhD,MAEApT,EAAAgkB,EAAAyN,EAAAG,mBAAA,IAAAH,EAAAjC,iBAAA,iBAAAjM,IAAAsO,IAAAze,EAAAue,GACA1xB,EAAA+jB,EAAA0N,EAAArD,eAAAqD,EAAAlC,iBAAAjM,EAAAnQ,EAAAue,GAEAlW,EAAAqS,QAAA2D,EACAhW,EAAAsS,QAAA2D,EACAjW,EAAAqW,SAAAtc,EACAiG,EAAA6I,cAAAqN,EACAlW,EAAA+I,OAAApR,EACAqI,EAAAwD,OAAA,CACA6G,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAC,YAAAxQ,EAAAwQ,YACAwE,UAAAhV,EAAAgV,UACAC,WAAAjV,EAAAiV,WACA7P,SAAApF,EAAAoF,SACAX,OAAA+J,EAAA,EAAAxO,EAAAyE,OACAkQ,KAAAvE,EAAAuE,MAAAvb,MAAA5O,IAAA4O,MAAA3O,GACAD,IACAC,KAGAwb,EAAAsD,SAMA4G,cAAA,SAAAlK,GACA,IAAA4D,EAAA5D,EAAAwD,OACAzJ,EAAAiG,EAAAqW,SACAjM,EAAArH,GAAAqH,cAEApK,EAAAiK,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,YACA/L,OAAAoF,EAAApF,QAGAoF,EAAAyG,gBAAAkL,GAAAxb,EAAAyQ,qBAAAJ,EAAArQ,EAAAsQ,kBACAzG,EAAA0G,YAAAiL,GAAAxb,EAAA0Q,iBAAAL,EAAArQ,EAAAuQ,cACA1G,EAAA2G,YAAAgL,GAAAxb,EAAA2Q,iBAAA3Q,EAAAwQ,aACA3G,EAAApF,OAAAzE,EAAAyE,OAAAzE,EAAA6R,aAMAwG,uBAAA,SAAApS,EAAArI,GACA,IAQA7S,EAAA2U,EAAA5J,EAPAqO,EADAhe,KACAge,MAEAqJ,EADArJ,EAAA4J,KAAAC,SAFA7nB,KAGAyX,OACAwS,EAAAnK,EAAAmK,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAA9J,MACA8H,EAAAP,EAAAO,KAAAnQ,GACA1G,EAAA,GAIA6R,EAAA,CACA5E,QACAoX,UAAA3d,EACA4P,UACAR,aAfA7mB,KAeAyX,OAGA0B,EAAA,CACA,kBACA,cACA,cACA,uBACA,mBACA,mBACA,cACA,YACA,aACA,YAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CmM,EADApB,EAAAwJ,EAAAvU,IACA0wB,GAAA,CACArL,EAAAta,GACA0X,EAAA1X,GACAkK,EAAAlK,IACAiT,EAAAnL,GAWA,OAPA1G,EAAAuN,OAAAgX,GAAA,CACArL,EAAA3L,OACAsJ,IAAApkB,OAAAiN,EACA4W,EAAA/I,OACAzE,EAAAyE,QACAsE,EAAAnL,GAEA1G,KAIAqlB,GAAAvT,GAAAhJ,QAAA6I,QACA2T,GAAAxT,GAAArK,eAEAoJ,GAAAT,KAAA,YACA6D,UAAA,CAEAsR,eAAA,EAEAC,cAAA,GAEAjF,MAAA,CACAC,KAAA,UAEAiF,eAAA,SAAAxY,GACA,IAAAyY,EAAA,GACAA,EAAA5Q,KAAA,cAAA7H,EAAApG,GAAA,aAEA,IAAAgQ,EAAA5J,EAAA4J,KACAC,EAAAD,EAAAC,SACA0K,EAAA3K,EAAA2K,OAEA,GAAA1K,EAAAnX,OACA,QAAA9L,EAAA,EAAkBA,EAAAijB,EAAA,GAAAD,KAAAlX,SAA6B9L,EAC/C6xB,EAAA5Q,KAAA,qCAAAgC,EAAA,GAAAsC,gBAAAvlB,GAAA,aACA2tB,EAAA3tB,IACA6xB,EAAA5Q,KAAA0M,EAAA3tB,IAEA6xB,EAAA5Q,KAAA,SAKA,OADA4Q,EAAA5Q,KAAA,SACA4Q,EAAAC,KAAA,KAEAC,OAAA,CACApE,OAAA,CACAqE,eAAA,SAAA5Y,GACA,IAAA4J,EAAA5J,EAAA4J,KACA,OAAAA,EAAA2K,OAAA7hB,QAAAkX,EAAAC,SAAAnX,OACAkX,EAAA2K,OAAA7Y,IAAA,SAAA4Y,EAAA1tB,GACA,IAAAuiB,EAAAnJ,EAAA8J,eAAA,GACA+O,EAAAjP,EAAAC,SAAA,GACAjJ,EAAAuI,EAAAS,KAAAhjB,GACAqlB,EAAArL,KAAAqL,QAAA,GACA6M,EAAA9Y,EAAAnE,QAAA+P,SAAAhL,IAKA,OACA6X,KAAAnE,EACAtF,UANAoJ,GAAA,CAAAnM,EAAAE,gBAAA0M,EAAA1M,gBAAA2M,EAAA3M,sBAAA1Z,EAAA7L,GAOAuoB,YANAiJ,GAAA,CAAAnM,EAAAG,YAAAyM,EAAAzM,YAAA0M,EAAA1M,kBAAA3Z,EAAA7L,GAOAqoB,UANAmJ,GAAA,CAAAnM,EAAAI,YAAAwM,EAAAxM,YAAAyM,EAAAzM,kBAAA5Z,EAAA7L,GAOAue,OAAAlQ,MAAA4jB,EAAAjP,KAAAhjB,KAAAuiB,EAAAS,KAAAhjB,GAAAue,OAGA1L,MAAA7S,KAIA,KAIAmyB,QAAA,SAAAp3B,EAAAq3B,GACA,IAEApyB,EAAA2U,EAAA4N,EAFA1P,EAAAuf,EAAAvf,MACAuG,EAAAhe,KAAAge,MAGA,IAAApZ,EAAA,EAAA2U,GAAAyE,EAAA4J,KAAAC,UAAA,IAAAnX,OAAyD9L,EAAA2U,IAAU3U,GACnEuiB,EAAAnJ,EAAA8J,eAAAljB,IAEAgjB,KAAAnQ,KACA0P,EAAAS,KAAAnQ,GAAA0L,QAAAgE,EAAAS,KAAAnQ,GAAA0L,QAIAnF,EAAAsK,WAKA2O,iBAAA,GAGAhY,UAAA,GAAArb,KAAAkC,GAGAoxB,cAAA,EAAAtzB,KAAAkC,GAGA0vB,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEApD,MAAA,SAAA6E,EAAAvP,GACA,IAAAwP,EAAAxP,EAAA2K,OAAA4E,EAAA1f,OACA9D,EAAA,KAAAiU,EAAAC,SAAAsP,EAAAtQ,cAAAe,KAAAuP,EAAA1f,OAWA,OATAoL,GAAA3K,QAAAkf,IAGAA,IAAAlnB,SACA,IAAAyD,EAEAyjB,GAAAzjB,EAGAyjB,OAMA,IAAAC,GAAAjM,GAAA/Q,OAAA,CAEA0M,gBAAA6C,GAAAwH,IAEApK,WAAAnE,GAAA9K,KAGAuf,aAAA,SAAAzQ,GAGA,IAFA,IAAA0Q,EAAA,EAEAC,EAAA,EAAiBA,EAAA3Q,IAAkB2Q,EACnCx3B,KAAAge,MAAAuV,iBAAAiE,MACAD,EAIA,OAAAA,GAGAjP,OAAA,SAAAD,GACA,IAaAzjB,EAAA2U,EAbAkB,EAAAza,KACAge,EAAAvD,EAAAuD,MACAoR,EAAApR,EAAAoR,UACAqI,EAAAzZ,EAAAnE,QACA6d,EAAAtI,EAAA3Q,MAAA2Q,EAAA7Q,KACAoZ,EAAAvI,EAAA1Q,OAAA0Q,EAAA5Q,IACAoZ,EAAAh0B,KAAAD,IAAA+zB,EAAAC,GACAjG,EAAA,CAAgBrtB,EAAA,EAAAC,EAAA,GAChB6iB,EAAA1M,EAAA2M,UACAyQ,EAAA1Q,EAAAS,KACAqP,EAAAQ,EAAAR,iBACAC,EAAAO,EAAAP,cACAY,EAAArd,EAAAsd,eAAAtd,EAAAhD,OAIA,GAAAyf,EAAA,EAAAtzB,KAAAkC,GAAA,CACA,IAAAomB,EAAAuL,EAAAxY,UAAA,EAAArb,KAAAkC,IAEAqmB,GADAD,GAAA,EAAAtoB,KAAAkC,IAAAomB,GAAAtoB,KAAAkC,IAAA,EAAAomB,GAAAtoB,KAAAkC,GAAA,MACAoxB,EACAvT,EAAA,CAAgBtf,EAAAT,KAAAuC,IAAA+lB,GAAA5nB,EAAAV,KAAAwC,IAAA8lB,IAChByH,EAAA,CAActvB,EAAAT,KAAAuC,IAAAgmB,GAAA7nB,EAAAV,KAAAwC,IAAA+lB,IACd6L,EAAA9L,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAAtoB,KAAAkC,IAAA,EAAAlC,KAAAkC,IAAAqmB,EACA8L,EAAA/L,GAAA,GAAAtoB,KAAAkC,IAAA,GAAAlC,KAAAkC,IAAAqmB,GAAAD,GAAA,IAAAtoB,KAAAkC,IAAA,IAAAlC,KAAAkC,IAAAqmB,EACA+L,EAAAhM,IAAAtoB,KAAAkC,KAAAlC,KAAAkC,IAAAqmB,GAAAD,GAAAtoB,KAAAkC,IAAAlC,KAAAkC,IAAAqmB,EACAgM,EAAAjM,GAAA,IAAAtoB,KAAAkC,IAAA,IAAAlC,KAAAkC,IAAAqmB,GAAAD,GAAA,IAAAtoB,KAAAkC,IAAA,IAAAlC,KAAAkC,IAAAqmB,EACAiM,EAAAnB,EAAA,IACAtzB,EAAA,CAAcU,EAAA6zB,GAAA,EAAAt0B,KAAAD,IAAAggB,EAAAtf,GAAAsf,EAAAtf,EAAA,IAAA+zB,GAAAzE,EAAAtvB,GAAAsvB,EAAAtvB,EAAA,IAAA+zB,IAAA9zB,EAAA6zB,GAAA,EAAAv0B,KAAAD,IAAAggB,EAAArf,GAAAqf,EAAArf,EAAA,IAAA8zB,GAAAzE,EAAArvB,GAAAqvB,EAAArvB,EAAA,IAAA8zB,KACdv0B,EAAA,CAAcQ,EAAA2zB,EAAA,EAAAp0B,KAAAC,IAAA8f,EAAAtf,GAAAsf,EAAAtf,EAAA,IAAA+zB,GAAAzE,EAAAtvB,GAAAsvB,EAAAtvB,EAAA,IAAA+zB,IAAA9zB,EAAA2zB,EAAA,EAAAr0B,KAAAC,IAAA8f,EAAArf,GAAAqf,EAAArf,EAAA,IAAA8zB,GAAAzE,EAAArvB,GAAAqvB,EAAArvB,EAAA,IAAA8zB,KACdhZ,EAAA,CAAejB,MAAA,IAAAta,EAAAQ,EAAAV,EAAAU,GAAA+Z,OAAA,IAAAva,EAAAS,EAAAX,EAAAW,IACfszB,EAAAh0B,KAAAD,IAAA+zB,EAAAtY,EAAAjB,MAAAwZ,EAAAvY,EAAAhB,QACAsT,EAAA,CAAartB,GAAA,IAAAR,EAAAQ,EAAAV,EAAAU,GAAAC,GAAA,IAAAT,EAAAS,EAAAX,EAAAW,IAGb,IAAAM,EAAA,EAAA2U,EAAAse,EAAAnnB,OAAiC9L,EAAA2U,IAAU3U,EAC3CizB,EAAAjzB,GAAAuxB,SAAA1b,EAAAyX,uBAAA2F,EAAAjzB,MAeA,IAZAoZ,EAAAqM,YAAA5P,EAAA4d,oBACAra,EAAAqO,YAAAzoB,KAAAC,KAAA+zB,EAAA5Z,EAAAqM,aAAA,KACArM,EAAAoO,YAAAxoB,KAAAC,IAAAozB,EAAAjZ,EAAAqO,YAAA,WACArO,EAAAsa,cAAAta,EAAAqO,YAAArO,EAAAoO,cAAA3R,EAAA8d,iCAAA,GACAva,EAAAwa,QAAA9G,EAAArtB,EAAA2Z,EAAAqO,YACArO,EAAAya,QAAA/G,EAAAptB,EAAA0Z,EAAAqO,YAEAlF,EAAAuR,MAAAje,EAAAke,iBAEAle,EAAA4R,YAAArO,EAAAqO,YAAArO,EAAAsa,aAAA7d,EAAAme,qBAAAne,EAAAhD,OACAgD,EAAA2R,YAAAxoB,KAAAC,IAAA4W,EAAA4R,YAAArO,EAAAsa,aAAAR,EAAA,GAEAlzB,EAAA,EAAA2U,EAAAse,EAAAnnB,OAAiC9L,EAAA2U,IAAU3U,EAC3C6V,EAAAwO,cAAA4O,EAAAjzB,KAAAyjB,IAIAY,cAAA,SAAArK,EAAAnH,EAAA4Q,GACA,IAAA5N,EAAAza,KACAge,EAAAvD,EAAAuD,MACAoR,EAAApR,EAAAoR,UACAqI,EAAAzZ,EAAAnE,QACAgf,EAAApB,EAAAzS,UACA8T,GAAA1J,EAAA7Q,KAAA6Q,EAAA3Q,OAAA,EACAsa,GAAA3J,EAAA5Q,IAAA4Q,EAAA1Q,QAAA,EACAwN,EAAAuL,EAAAxY,SACAkN,EAAAsL,EAAAxY,SACAoI,EAAA5M,EAAA6M,aACA4P,EAAA7O,GAAAwQ,EAAAvC,cAAA,EAAA1X,EAAAuE,OAAA,EAAA1I,EAAAue,uBAAA3R,EAAAO,KAAAnQ,KAAAggB,EAAAP,eAAA,EAAAtzB,KAAAkC,KAGA+T,EAAA+E,EAAAuX,UAAA,GAEAtT,GAAAxI,OAAAuE,EAAA,CAEA+J,cAAAlO,EAAAhD,MACAoR,OAAApR,EAGA6L,OAAA,CACA6G,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAC,YAAAxQ,EAAAwQ,YACAgB,YAAAxR,EAAAwR,YACAhnB,EAAAy0B,EAAA9a,EAAAwa,QACAl0B,EAAAy0B,EAAA/a,EAAAya,QACAvM,aACAC,WACA+K,gBACA7K,YAnBAhE,GAAAwQ,EAAAtC,aAAA,EAAA9b,EAAA4R,YAoBAD,YArBA/D,GAAAwQ,EAAAtC,aAAA,EAAA9b,EAAA2R,YAsBAkG,MAAAzP,GAAAnK,sBAAA2O,EAAAiL,MAAA7a,EAAAuG,EAAA4J,KAAA2K,OAAA9a,OAIA,IAAAiM,EAAA9E,EAAA0E,OAGA+E,GAAAwQ,EAAAvC,gBAEA5S,EAAAwI,WADA,IAAAzU,EACAggB,EAAAxY,SAEAxE,EAAA2M,UAAAQ,KAAAnQ,EAAA,GAAA6L,OAAA6I,SAGAzI,EAAAyI,SAAAzI,EAAAwI,WAAAxI,EAAAwT,eAGAtY,EAAAwE,SAGAuV,eAAA,WACA,IAGAhlB,EAHA0T,EAAArnB,KAAAsnB,aACAH,EAAAnnB,KAAAonB,UACAsR,EAAA,EAcA,OAXA7V,GAAA9J,KAAAoO,EAAAS,KAAA,SAAAoB,EAAAvR,GACA9D,EAAA0T,EAAAO,KAAAnQ,GACAxE,MAAAU,IAAAqV,EAAA7F,SACAuV,GAAA90B,KAAAgrB,IAAAjb,MAQA+kB,GAGAM,uBAAA,SAAArlB,GACA,IAAA+kB,EAAA14B,KAAAonB,UAAAsR,MACA,OAAAA,EAAA,IAAAzlB,MAAAU,GACA,EAAA/P,KAAAkC,IAAAlC,KAAAgrB,IAAAjb,GAAA+kB,GAEA,GAIAL,kBAAA,SAAAR,GACA,IAGAjzB,EAAA2U,EAAA4N,EAAAvI,EAAA6V,EAAA5a,EAAAwQ,EAAA4O,EAFAp1B,EAAA,EACAma,EAFAhe,KAEAge,MAGA,IAAA6Z,EAEA,IAAAjzB,EAAA,EAAA2U,EAAAyE,EAAA4J,KAAAC,SAAAnX,OAAiD9L,EAAA2U,IAAU3U,EAC3D,GAAAoZ,EAAAuV,iBAAA3uB,GAAA,CAEAizB,GADA1Q,EAAAnJ,EAAA8J,eAAAljB,IACAgjB,KACAhjB,IAXA5E,KAWAyX,QACAgd,EAAAtN,EAAAsN,YAEA,MAKA,IAAAoD,EACA,SAGA,IAAAjzB,EAAA,EAAA2U,EAAAse,EAAAnnB,OAAiC9L,EAAA2U,IAAU3U,EAC3Cga,EAAAiZ,EAAAjzB,GAEA,WADAiV,EAAA4a,IAAAvC,uBAAAtT,EAAAha,GAAAga,EAAAuX,UACA9K,cAKAxnB,GAHAo1B,EAAApf,EAAA2Q,mBAEA3mB,GAHAwmB,EAAAxQ,EAAAwQ,aAGAxmB,EAAAwmB,EAAAxmB,GACAo1B,EAAAp1B,GAGA,OAAAA,GAMAmmB,cAAA,SAAApL,GACA,IAAA8E,EAAA9E,EAAA0E,OACAzJ,EAAA+E,EAAAuX,SACAjM,EAAArH,GAAAqH,cAEAtL,EAAAmL,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,aAGA3G,EAAAyG,gBAAAkM,GAAAxc,EAAAyQ,qBAAAJ,EAAArQ,EAAAsQ,kBACAzG,EAAA0G,YAAAiM,GAAAxc,EAAA0Q,iBAAAL,EAAArQ,EAAAuQ,cACA1G,EAAA2G,YAAAgM,GAAAxc,EAAA2Q,iBAAA3Q,EAAAwQ,cAMA6H,uBAAA,SAAAtT,EAAAnH,GACA,IAMA7S,EAAA2U,EAAA5J,EALAqO,EADAhe,KACAge,MACAqJ,EAFArnB,KAEAsnB,aACA2C,EAAArL,EAAAqL,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAAhL,IACA7N,EAAA,GAIA6R,EAAA,CACA5E,QACAoX,UAAA3d,EACA4P,UACAR,aAbA7mB,KAaAyX,OAGA0B,EAAA,CACA,kBACA,cACA,cACA,cACA,uBACA,mBACA,oBAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CmM,EADApB,EAAAwJ,EAAAvU,IACAwxB,GAAA,CACAnM,EAAAta,GACA0X,EAAA1X,GACAkK,EAAAlK,IACAiT,EAAAnL,GAGA,OAAA1G,GAOA6nB,qBAAA,SAAA/R,GAGA,IAFA,IAAAqS,EAAA,EAEAt0B,EAAA,EAAiBA,EAAAiiB,IAAkBjiB,EACnC5E,KAAAge,MAAAuV,iBAAA3uB,KACAs0B,GAAAl5B,KAAA+3B,eAAAnzB,IAIA,OAAAs0B,GAMAnB,eAAA,SAAAoB,GACA,OAAAv1B,KAAAC,IAAAwyB,GAAAr2B,KAAAge,MAAA4J,KAAAC,SAAAsR,GAAA5iB,OAAA,OAOAgiB,8BAAA,WACA,OAAAv4B,KAAA44B,qBAAA54B,KAAAge,MAAA4J,KAAAC,SAAAnX,WAIAkR,GAAAT,KAAA,iBACAmQ,MAAA,CACAC,KAAA,QACA6H,KAAA,KAGA5R,OAAA,CACAC,MAAA,EACA7Q,KAAA,SACA2e,SAAA,WAGA5N,MAAA,EACA/Q,KAAA,WACA2e,SAAA,OACA/D,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,MAKAhI,SAAA,CACAsG,UAAA,CACAC,cAAA,SAIAqF,SAAA,CACAjE,KAAA,QACA6H,KAAA,OAIA,IAAAC,GAAAxH,GAAAxX,OAAA,CAIA4N,iBAAA,WACA,OAAAjoB,KAAAonB,UAAAG,SAMAW,iBAAA,WACA,OAAAloB,KAAAonB,UAAAM,WAIA4R,GAAAzW,GAAArK,eACA+gB,GAAA1W,GAAAhJ,QAAA6I,QACA8W,GAAA3W,GAAAC,OAAAjD,eAsBA,SAAA4Z,GAAApS,EAAAxN,GACA,OAAAyf,GAAAjS,EAAAqS,SAAA7f,EAAA8H,WArBAC,GAAAT,KAAA,QACAQ,WAAA,EACAmM,UAAA,EAEAwD,MAAA,CACAC,KAAA,SAGA/J,OAAA,CACAC,MAAA,EACA7Q,KAAA,WACAgB,GAAA,aAEA+P,MAAA,EACA/Q,KAAA,SACAgB,GAAA,gBASA,IAAA+hB,GAAAvO,GAAA/Q,OAAA,CAEAyM,mBAAA8C,GAAAqH,KAEAlK,gBAAA6C,GAAAsH,MAEA5I,OAAA,SAAAD,GACA,IAOAzjB,EAAA2U,EAPAkB,EAAAza,KACAmnB,EAAA1M,EAAA2M,UACAiG,EAAAlG,EAAAE,QACA0G,EAAA5G,EAAAS,MAAA,GACA5U,EAAAyH,EAAAsN,cAAAZ,EAAAO,SACAL,EAAA5M,EAAA6M,aACAoS,EAAAD,GAAApS,EAAA5M,EAAAuD,MAAAnE,SAsBA,IAlBA6f,SAEAjpB,IAAA4W,EAAA3G,cAAAjQ,IAAA4W,EAAAuS,cACAvS,EAAAuS,YAAAvS,EAAA3G,SAIA2M,EAAAwM,OAAA7mB,EACAqa,EAAA1E,cAAAlO,EAAAhD,MAEA4V,EAAAW,UAAAD,EAEAV,EAAA/J,OAAA7I,EAAAqf,oBAAAzM,GAEAA,EAAAjK,SAIAxe,EAAA,EAAA2U,EAAAwU,EAAArd,OAAmC9L,EAAA2U,IAAU3U,EAC7C6V,EAAAwO,cAAA8E,EAAAnpB,KAAAyjB,GAQA,IALAqR,GAAA,IAAArM,EAAA/J,OAAA5C,SACAjG,EAAAsf,4BAIAn1B,EAAA,EAAA2U,EAAAwU,EAAArd,OAAmC9L,EAAA2U,IAAU3U,EAC7CmpB,EAAAnpB,GAAAwe,SAIA6F,cAAA,SAAAnJ,EAAArI,EAAA4Q,GACA,IASAhkB,EAAAC,EATAmW,EAAAza,KACAmnB,EAAA1M,EAAA2M,UACA6C,EAAAnK,EAAAmK,QAAA,GACA5C,EAAA5M,EAAA6M,aACAT,EAAApM,EAAAhD,MACA9D,EAAA0T,EAAAO,KAAAnQ,GACAse,EAAAtb,EAAAsN,cAAAZ,EAAAO,SACAoO,EAAArb,EAAAsN,cAAAZ,EAAAI,SACAyS,EAAA7S,EAAAE,QAAA/D,OAGAzJ,EAAAY,EAAAwf,qBAAAna,EAAArI,GAEApT,EAAAyxB,EAAAjC,iBAAA,iBAAAlgB,IAAAuiB,IAAAze,EAAAoP,GACAviB,EAAA+jB,EAAA0N,EAAArD,eAAAjY,EAAAyf,gBAAAvmB,EAAA8D,EAAAoP,GAGA/G,EAAAqS,QAAA2D,EACAhW,EAAAsS,QAAA2D,EACAjW,EAAAqW,SAAAtc,EACAiG,EAAA6I,cAAA9B,EACA/G,EAAA+I,OAAApR,EAGAqI,EAAAwD,OAAA,CACAjf,IACAC,IACAkqB,KAAAvE,EAAAuE,MAAAvb,MAAA5O,IAAA4O,MAAA3O,GAEAga,OAAAzE,EAAAyE,OACAwQ,WAAAjV,EAAAiV,WACA7P,SAAApF,EAAAoF,SACAkL,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAC,YAAAxQ,EAAAwQ,YACA3J,QAAA4Y,GAAArP,EAAAvJ,QAAAsZ,IAAAtZ,QAAA,GACAF,cAAAwZ,KAAAxZ,YAEAqO,UAAAhV,EAAAgV,YAOAoL,qBAAA,SAAAjR,EAAAvR,GACA,IAMA7S,EAAA2U,EAAA5J,EALAqO,EADAhe,KACAge,MACAqJ,EAAArJ,EAAA4J,KAAAC,SAFA7nB,KAEAyX,OACAwS,EAAAjB,EAAAiB,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAA9J,MACA/O,EAAA,GAIA6R,EAAA,CACA5E,QACAoX,UAAA3d,EACA4P,UACAR,aAbA7mB,KAaAyX,OAGA0iB,EAAA,CACAhQ,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACAwE,UAAA,iBACAvE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAoD,WAAA,aACAxQ,OAAA,cACAW,SAAA,iBAEA9F,EAAAhB,OAAAgB,KAAAghB,GAEA,IAAAv1B,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CmM,EADApB,EAAAwJ,EAAAvU,IACA20B,GAAA,CACAtP,EAAAta,GACA0X,EAAA8S,EAAAxqB,IACA0X,EAAA1X,GACAkK,EAAAlK,IACAiT,EAAAnL,GAGA,OAAA1G,GAMA+oB,oBAAA,SAAA9Q,GACA,IAOApkB,EAAA2U,EAAA5J,EANAqO,EADAhe,KACAge,MACAqJ,EAAArJ,EAAA4J,KAAAC,SAFA7nB,KAEAyX,OACAwS,EAAAjB,EAAAiB,QAAA,GACApQ,EAAAmE,EAAAnE,QACAugB,EAAAvgB,EAAA+P,SAAAyD,KACAtc,EAAA,GAGAoI,EAAA,CACA,kBACA,cACA,cACA,iBACA,aACA,mBACA,kBACA,OACA,0BAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CmM,EADApB,EAAAwJ,EAAAvU,IACA20B,GAAA,CACAtP,EAAAta,GACA0X,EAAA1X,GACAyqB,EAAAzqB,KAWA,OAJAoB,EAAA+c,SAAAwL,GAAAjS,EAAAyG,SAAAjU,EAAAiU,UACA/c,EAAA2P,QAAA4Y,GAAAjS,EAAAuS,YAAAQ,EAAA1Z,SACA3P,EAAAyP,YAAA+Y,GAAA,CAAAtP,EAAAzJ,YAAA6G,EAAA7G,YAAA4Z,EAAA7Z,UAEAxP,GAGAmpB,gBAAA,SAAAvmB,EAAA8D,EAAAoP,GACA,IAMAjiB,EAAAiyB,EAAAwD,EALArc,EADAhe,KACAge,MACAmJ,EAFAnnB,KAEAonB,UACA2O,EAHA/1B,KAGA+nB,cAAAZ,EAAAO,SACA4S,EAAA,EACAC,EAAA,EAGA,GAAAxE,EAAAlc,QAAAwZ,QAAA,CACA,IAAAzuB,EAAA,EAAcA,EAAAiiB,EAAkBjiB,IAGhC,GAFAiyB,EAAA7Y,EAAA4J,KAAAC,SAAAjjB,GAEA,UADAy1B,EAAArc,EAAA8J,eAAAljB,IACAgS,MAAAyjB,EAAA3S,UAAAqO,EAAAne,IAAAoG,EAAAuV,iBAAA3uB,GAAA,CACA,IAAA41B,EAAAjiB,OAAAwd,EAAAxB,cAAAsC,EAAAjP,KAAAnQ,KACA+iB,EAAA,EACAD,GAAAC,GAAA,EAEAF,GAAAE,GAAA,EAKA,IAAAC,EAAAliB,OAAAwd,EAAAxB,cAAA5gB,IACA,OACAoiB,EAAAlC,iBADA4G,EAAA,EACAF,EAAAE,EAEAH,EAAAG,GAGA,OAAA1E,EAAAlC,iBAAAlgB,IAGAomB,0BAAA,WACA,IAMAn1B,EAAA2U,EAAAmK,EAAAgX,EALA1c,EADAhe,KACAge,MACAmJ,EAFAnnB,KAEAonB,UACA4S,EAAA7S,EAAAE,QAAA/D,OACAvD,EAAA/B,EAAAoR,UACArB,EAAA5G,EAAAS,MAAA,GAUA,SAAA+S,EAAAC,EAAAj3B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAAi3B,EAAA/2B,GAAAF,GAGA,GAVAq2B,EAAAlM,WACAC,IAAA8M,OAAA,SAAAD,GACA,OAAAA,EAAAtX,OAAAkL,QAQA,aAAAwL,EAAAc,uBACAjY,GAAAkY,oBAAAhN,QAEA,IAAAnpB,EAAA,EAAA2U,EAAAwU,EAAArd,OAAoC9L,EAAA2U,IAAU3U,EAC9C8e,EAAAqK,EAAAnpB,GAAA0e,OACAoX,EAAA7X,GAAAmY,YACAnY,GAAA0L,aAAAR,EAAAnpB,GAAA0e,OACAI,EACAb,GAAAoY,SAAAlN,EAAAnpB,GAAA0e,OACA0W,EAAAtZ,SAEAgD,EAAA9C,sBAAA8Z,EAAAra,SAAAhc,EACAqf,EAAA5C,sBAAA4Z,EAAAra,SAAA/b,EACAof,EAAA7C,kBAAA6Z,EAAA/F,KAAAtwB,EACAqf,EAAA3C,kBAAA2Z,EAAA/F,KAAArwB,EAIA,GAAA0Z,EAAAnE,QAAA+P,SAAAyD,KAAAK,gBACA,IAAA9oB,EAAA,EAAA2U,EAAAwU,EAAArd,OAAoC9L,EAAA2U,IAAU3U,EAE9C40B,GADA9V,EAAAqK,EAAAnpB,GAAA0e,OACAvD,KACAnb,EAAA,GAAA40B,GAAAzL,EAAAnpB,EAAA,GAAA0e,OAAAvD,KACA2D,EAAA9C,sBAAA+Z,EAAAjX,EAAA9C,sBAAAb,EAAAxB,KAAAwB,EAAAtB,OACAiF,EAAA5C,sBAAA6Z,EAAAjX,EAAA5C,sBAAAf,EAAAvB,IAAAuB,EAAArB,SAEA9Z,EAAAmpB,EAAArd,OAAA,GAAA8oB,GAAAzL,EAAAnpB,EAAA,GAAA0e,OAAAvD,KACA2D,EAAA7C,kBAAA8Z,EAAAjX,EAAA7C,kBAAAd,EAAAxB,KAAAwB,EAAAtB,OACAiF,EAAA3C,kBAAA4Z,EAAAjX,EAAA3C,kBAAAhB,EAAAvB,IAAAuB,EAAArB,WAOAmL,KAAA,WACA,IAMAqR,EALAld,EADAhe,KACAge,MACAmJ,EAFAnnB,KAEAonB,UACA2G,EAAA5G,EAAAS,MAAA,GACA7H,EAAA/B,EAAAoR,UACA7V,EAAAwU,EAAArd,OAEA9L,EAAA,EAkBA,IAhBA60B,GATAz5B,KASAsnB,aAAAtJ,EAAAnE,WAGAgJ,GAAAC,OAAA9C,SAAAhC,EAAAC,IAAA,CACAM,KAAAwB,EAAAxB,KACAE,MAAAsB,EAAAtB,MACAD,IAAAuB,EAAAvB,KALA0c,GAAA/T,EAAAE,QAAA/D,OAAA+G,aAAA,MAMA3L,OAAAqB,EAAArB,OAAAwc,IAGA/T,EAAAE,QAAAwC,OAEAhH,GAAAC,OAAA3C,WAAAnC,EAAAC,MAIQrZ,EAAA2U,IAAU3U,EAClBmpB,EAAAnpB,GAAAilB,KAAA9J,IAOAiK,cAAA,SAAAlK,GACA,IAAA4D,EAAA5D,EAAAwD,OACAzJ,EAAAiG,EAAAqW,SACAjM,EAAArH,GAAAqH,cAEApK,EAAAiK,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,YACA/L,OAAAoF,EAAApF,QAGAoF,EAAAyG,gBAAAmP,GAAAzf,EAAAyQ,qBAAAJ,EAAArQ,EAAAsQ,kBACAzG,EAAA0G,YAAAkP,GAAAzf,EAAA0Q,iBAAAL,EAAArQ,EAAAuQ,cACA1G,EAAA2G,YAAAiP,GAAAzf,EAAA2Q,iBAAA3Q,EAAAwQ,aACA3G,EAAApF,OAAAgb,GAAAzf,EAAA6R,YAAA7R,EAAAyE,WAIA6c,GAAAtY,GAAAhJ,QAAA6I,QAEAd,GAAAT,KAAA,aACAnO,MAAA,CACA4D,KAAA,eACAwkB,WAAA,CACAC,SAAA,GAEA1J,UAAA,CACA2J,UAAA,GAEAC,YAAA,CACAF,SAAA,GAEApH,MAAA,CACAuH,aAAA,IAKAxW,UAAA,CACAsR,eAAA,EACAC,cAAA,GAGArK,YAAA,GAAAtoB,KAAAkC,GACA0wB,eAAA,SAAAxY,GACA,IAAAyY,EAAA,GACAA,EAAA5Q,KAAA,cAAA7H,EAAApG,GAAA,aAEA,IAAAgQ,EAAA5J,EAAA4J,KACAC,EAAAD,EAAAC,SACA0K,EAAA3K,EAAA2K,OAEA,GAAA1K,EAAAnX,OACA,QAAA9L,EAAA,EAAkBA,EAAAijB,EAAA,GAAAD,KAAAlX,SAA6B9L,EAC/C6xB,EAAA5Q,KAAA,qCAAAgC,EAAA,GAAAsC,gBAAAvlB,GAAA,aACA2tB,EAAA3tB,IACA6xB,EAAA5Q,KAAA0M,EAAA3tB,IAEA6xB,EAAA5Q,KAAA,SAKA,OADA4Q,EAAA5Q,KAAA,SACA4Q,EAAAC,KAAA,KAEAC,OAAA,CACApE,OAAA,CACAqE,eAAA,SAAA5Y,GACA,IAAA4J,EAAA5J,EAAA4J,KACA,OAAAA,EAAA2K,OAAA7hB,QAAAkX,EAAAC,SAAAnX,OACAkX,EAAA2K,OAAA7Y,IAAA,SAAA4Y,EAAA1tB,GACA,IAAAuiB,EAAAnJ,EAAA8J,eAAA,GACA+O,EAAAjP,EAAAC,SAAA,GAEAoC,EADA9C,EAAAS,KAAAhjB,GACAqlB,QAAA,GACA6M,EAAA9Y,EAAAnE,QAAA+P,SAAAhL,IAKA,OACA6X,KAAAnE,EACAtF,UANAmO,GAAA,CAAAlR,EAAAE,gBAAA0M,EAAA1M,gBAAA2M,EAAA3M,sBAAA1Z,EAAA7L,GAOAuoB,YANAgO,GAAA,CAAAlR,EAAAG,YAAAyM,EAAAzM,YAAA0M,EAAA1M,kBAAA3Z,EAAA7L,GAOAqoB,UANAkO,GAAA,CAAAlR,EAAAI,YAAAwM,EAAAxM,YAAAyM,EAAAzM,kBAAA5Z,EAAA7L,GAOAue,OAAAlQ,MAAA4jB,EAAAjP,KAAAhjB,KAAAuiB,EAAAS,KAAAhjB,GAAAue,OAGA1L,MAAA7S,KAIA,KAIAmyB,QAAA,SAAAp3B,EAAAq3B,GACA,IAEApyB,EAAA2U,EAAA4N,EAFA1P,EAAAuf,EAAAvf,MACAuG,EAAAhe,KAAAge,MAGA,IAAApZ,EAAA,EAAA2U,GAAAyE,EAAA4J,KAAAC,UAAA,IAAAnX,OAAyD9L,EAAA2U,IAAU3U,GACnEuiB,EAAAnJ,EAAA8J,eAAAljB,IACAgjB,KAAAnQ,GAAA0L,QAAAgE,EAAAS,KAAAnQ,GAAA0L,OAGAnF,EAAAsK,WAKAkN,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEApD,MAAA,SAAApX,EAAA0M,GACA,OAAAA,EAAA2K,OAAArX,EAAAzD,OAAA,KAAAyD,EAAA0a,YAMA,IAAA6F,GAAArQ,GAAA/Q,OAAA,CAEA0M,gBAAA6C,GAAAwH,IAEApK,WAAAnE,GAAA9K,KAEAuQ,OAAA,SAAAD,GACA,IAOAzjB,EAAA2U,EAAAyS,EAPAvR,EAAAza,KACAqnB,EAAA5M,EAAA6M,aACAH,EAAA1M,EAAA2M,UACAzD,EAAAlJ,EAAAuD,MAAAnE,QAAAqS,YAAA,EACAwP,EAAAjhB,EAAAkhB,QAAA,GACAC,EAAAnhB,EAAAohB,QAAA,GACAhE,EAAA1Q,EAAAS,KAOA,IAJAnN,EAAAqhB,gBAEA3U,EAAAyD,MAAAnQ,EAAAshB,uBAEAn3B,EAAA,EAAA2U,EAAA8N,EAAAO,KAAAlX,OAAyC9L,EAAA2U,EAAU3U,IACnD82B,EAAA92B,GAAA+e,EACAqI,EAAAvR,EAAAuhB,cAAAp3B,GACAg3B,EAAAh3B,GAAAonB,EACArI,GAAAqI,EAGA,IAAApnB,EAAA,EAAA2U,EAAAse,EAAAnnB,OAAiC9L,EAAA2U,IAAU3U,EAC3CizB,EAAAjzB,GAAAuxB,SAAA1b,EAAAyX,uBAAA2F,EAAAjzB,MACA6V,EAAAwO,cAAA4O,EAAAjzB,KAAAyjB,IAOAyT,cAAA,WACA,IAAArhB,EAAAza,KACAge,EAAAvD,EAAAuD,MACAoR,EAAApR,EAAAoR,UACAqI,EAAAzZ,EAAAnE,QACA+d,EAAAh0B,KAAAD,IAAAyrB,EAAA3Q,MAAA2Q,EAAA7Q,KAAA6Q,EAAA1Q,OAAA0Q,EAAA5Q,KAEAR,EAAAqO,YAAAzoB,KAAAC,IAAA+zB,EAAA,KACA5Z,EAAAoO,YAAAxoB,KAAAC,IAAA4zB,EAAAR,iBAAAjZ,EAAAqO,YAAA,IAAAoL,EAAA,sBACAzZ,EAAAsa,cAAAta,EAAAqO,YAAArO,EAAAoO,aAAApO,EAAAie,yBAEAxhB,EAAA4R,YAAArO,EAAAqO,YAAArO,EAAAsa,aAAA7d,EAAAhD,MACAgD,EAAA2R,YAAA3R,EAAA4R,YAAArO,EAAAsa,cAGArP,cAAA,SAAArK,EAAAnH,EAAA4Q,GACA,IAAA5N,EAAAza,KACAge,EAAAvD,EAAAuD,MACAqJ,EAAA5M,EAAA6M,aACAmQ,EAAAzZ,EAAAnE,QACAgf,EAAApB,EAAAzS,UACAhS,EAAAgL,EAAAhL,MACAuf,EAAAvU,EAAA4J,KAAA2K,OAEAuG,EAAA9lB,EAAAkpB,QACAnD,EAAA/lB,EAAAmpB,QAGAC,EAAA3E,EAAAvL,WACAD,EAAArN,EAAAuE,OAAA,EAAAnQ,EAAAqpB,8BAAAhV,EAAAO,KAAAnQ,IACAyU,EAAAzR,EAAAkhB,QAAAlkB,GACA0U,EAAAD,GAAAtN,EAAAuE,OAAA,EAAA1I,EAAAohB,QAAApkB,IAEA6kB,EAAAzD,EAAAtC,aAAA,EAAAvjB,EAAAqpB,8BAAAhV,EAAAO,KAAAnQ,IACAoC,EAAA+E,EAAAuX,UAAA,GAEAtT,GAAAxI,OAAAuE,EAAA,CAEA+J,cAAAlO,EAAAhD,MACAoR,OAAApR,EACAoiB,OAAA7mB,EAGAsQ,OAAA,CACA6G,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAC,YAAAxQ,EAAAwQ,YACAgB,YAAAxR,EAAAwR,YACAhnB,EAAAy0B,EACAx0B,EAAAy0B,EACA3M,YAAA,EACAC,YAAAhE,EAAAiU,EAAArQ,EACAC,WAAA7D,GAAAwQ,EAAAvC,cAAA8F,EAAAlQ,EACAC,SAAA9D,GAAAwQ,EAAAvC,cAAA8F,EAAAjQ,EACAmG,MAAAzP,GAAAnK,sBAAA6Z,EAAA9a,EAAA8a,EAAA9a,OAIAmH,EAAAwE,SAGA2Y,qBAAA,WACA,IAAA1U,EAAArnB,KAAAsnB,aACAH,EAAAnnB,KAAAonB,UACAwD,EAAA,EAQA,OANA/H,GAAA9J,KAAAoO,EAAAS,KAAA,SAAAoB,EAAAvR,GACAxE,MAAAoU,EAAAO,KAAAnQ,KAAAuR,EAAA7F,QACAyH,MAIAA,GAMAZ,cAAA,SAAApL,GACA,IAAA8E,EAAA9E,EAAA0E,OACAzJ,EAAA+E,EAAAuX,SACAjM,EAAArH,GAAAqH,cACA1R,EAAAqK,GAAArK,eAEAoG,EAAAmL,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,aAGA3G,EAAAyG,gBAAA3R,EAAAqB,EAAAyQ,qBAAAJ,EAAArQ,EAAAsQ,kBACAzG,EAAA0G,YAAA5R,EAAAqB,EAAA0Q,iBAAAL,EAAArQ,EAAAuQ,cACA1G,EAAA2G,YAAA7R,EAAAqB,EAAA2Q,iBAAA3Q,EAAAwQ,cAMA6H,uBAAA,SAAAtT,EAAAnH,GACA,IAMA7S,EAAA2U,EAAA5J,EALAqO,EADAhe,KACAge,MACAqJ,EAFArnB,KAEAsnB,aACA2C,EAAArL,EAAAqL,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAAhL,IACA7N,EAAA,GAIA6R,EAAA,CACA5E,QACAoX,UAAA3d,EACA4P,UACAR,aAbA7mB,KAaAyX,OAGA0B,EAAA,CACA,kBACA,cACA,cACA,cACA,uBACA,mBACA,oBAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CmM,EADApB,EAAAwJ,EAAAvU,IACAu2B,GAAA,CACAlR,EAAAta,GACA0X,EAAA1X,GACAkK,EAAAlK,IACAiT,EAAAnL,GAGA,OAAA1G,GAMAirB,cAAA,SAAAvkB,GACA,IAAAgD,EAAAza,KACA4qB,EAAA5qB,KAAAonB,UAAAwD,MACAvD,EAAA5M,EAAA6M,aACAH,EAAA1M,EAAA2M,UAEA,OAAAnU,MAAAoU,EAAAO,KAAAnQ,KAAA0P,EAAAS,KAAAnQ,GAAA0L,OACA,EAWAgY,GAAA,CACA1gB,EAAAuD,MAAAnE,QAAA+P,SAAAhL,IAAAoN,MACA,EAAApoB,KAAAkC,GAAA8kB,GATA,CACA5M,MAAAvD,EAAAuD,MACAoX,UAAA3d,EACA4P,UACAR,aAAApM,EAAAhD,OAMAA,MAIAmK,GAAAT,KAAA,MAAA0B,GAAAlM,MAAAiL,GAAA2a,WACA3a,GAAAT,KAAA,OACA8V,iBAAA,IAIA,IAAAuF,GAAAnF,GAEAoF,GAAA5Z,GAAArK,eACAkkB,GAAA7Z,GAAAhJ,QAAA6I,QAEAd,GAAAT,KAAA,SACAnO,MAAA,CACA4D,KAAA,gBAEAgT,SAAA,CACAyD,KAAA,CACA3M,QAAA,MAKA,IAAAic,GAAAvR,GAAA/Q,OAAA,CAEAyM,mBAAA8C,GAAAqH,KAEAlK,gBAAA6C,GAAAsH,MAEAlK,WAAAnE,GAAA9K,KAEAuQ,OAAA,SAAAD,GACA,IAMAzjB,EAAA2U,EANAkB,EAAAza,KACAmnB,EAAA1M,EAAA2M,UACAiG,EAAAlG,EAAAE,QACA0G,EAAA5G,EAAAS,MAAA,GACA5U,EAAAyH,EAAAuD,MAAAhL,MACAqU,EAAA5M,EAAA6M,aAoBA,SAhBA7W,IAAA4W,EAAA3G,cAAAjQ,IAAA4W,EAAAuS,cACAvS,EAAAuS,YAAAvS,EAAA3G,SAIA2M,EAAAwM,OAAA7mB,EACAqa,EAAA1E,cAAAlO,EAAAhD,MAEA4V,EAAAW,UAAAD,EACAV,EAAAc,OAAA,EAEAd,EAAA/J,OAAA7I,EAAAqf,oBAAAzM,GAEAA,EAAAjK,QAGAxe,EAAA,EAAA2U,EAAAwU,EAAArd,OAAmC9L,EAAA2U,IAAU3U,EAC7C6V,EAAAwO,cAAA8E,EAAAnpB,KAAAyjB,GAOA,IAHA5N,EAAAsf,4BAGAn1B,EAAA,EAAA2U,EAAAwU,EAAArd,OAAmC9L,EAAA2U,IAAU3U,EAC7CmpB,EAAAnpB,GAAAwe,SAIA6F,cAAA,SAAAnJ,EAAArI,EAAA4Q,GACA,IAAA5N,EAAAza,KACAiqB,EAAAnK,EAAAmK,QAAA,GACA5C,EAAA5M,EAAA6M,aACAtU,EAAAyH,EAAAuD,MAAAhL,MACA4pB,EAAA5pB,EAAA6pB,yBAAAplB,EAAA4P,EAAAO,KAAAnQ,IACAoC,EAAAY,EAAAwf,qBAAAna,EAAArI,GACAuiB,EAAAvf,EAAA2M,UAAAC,QAAA/D,OACAjf,EAAAgkB,EAAArV,EAAAkpB,QAAAU,EAAAv4B,EACAC,EAAA+jB,EAAArV,EAAAmpB,QAAAS,EAAAt4B,EAGAwb,EAAA+Z,OAAA7mB,EACA8M,EAAAqW,SAAAtc,EACAiG,EAAA6I,cAAAlO,EAAAhD,MACAqI,EAAA+I,OAAApR,EAGAqI,EAAAwD,OAAA,CACAjf,IACAC,IACAkqB,KAAAvE,EAAAuE,MAAAvb,MAAA5O,IAAA4O,MAAA3O,GAEAga,OAAAzE,EAAAyE,OACAwQ,WAAAjV,EAAAiV,WACA7P,SAAApF,EAAAoF,SACAkL,gBAAAtQ,EAAAsQ,gBACAC,YAAAvQ,EAAAuQ,YACAC,YAAAxQ,EAAAwQ,YACA3J,QAAA+b,GAAAxS,EAAAvJ,QAAAsZ,IAAAtZ,QAAA,GAGAmO,UAAAhV,EAAAgV,YAOAoL,qBAAA,SAAAjR,EAAAvR,GACA,IAMA7S,EAAA2U,EAAA5J,EALAqO,EADAhe,KACAge,MACAqJ,EAAArJ,EAAA4J,KAAAC,SAFA7nB,KAEAyX,OACAwS,EAAAjB,EAAAiB,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAA9J,MACA/O,EAAA,GAIA6R,EAAA,CACA5E,QACAoX,UAAA3d,EACA4P,UACAR,aAbA7mB,KAaAyX,OAGA0iB,EAAA,CACAhQ,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACAwE,UAAA,iBACAvE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAoD,WAAA,aACAxQ,OAAA,cACAW,SAAA,iBAEA9F,EAAAhB,OAAAgB,KAAAghB,GAEA,IAAAv1B,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CmM,EADApB,EAAAwJ,EAAAvU,IACA83B,GAAA,CACAzS,EAAAta,GACA0X,EAAA8S,EAAAxqB,IACA0X,EAAA1X,GACAkK,EAAAlK,IACAiT,EAAAnL,GAGA,OAAA1G,GAMA+oB,oBAAA,SAAA9Q,GACA,IAMApkB,EAAA2U,EAAA5J,EALAqO,EADAhe,KACAge,MACAqJ,EAAArJ,EAAA4J,KAAAC,SAFA7nB,KAEAyX,OACAwS,EAAAjB,EAAAiB,QAAA,GACApQ,EAAAmE,EAAAnE,QAAA+P,SAAAyD,KACAtc,EAAA,GAGAoI,EAAA,CACA,kBACA,cACA,cACA,iBACA,aACA,mBACA,kBACA,QAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CmM,EADApB,EAAAwJ,EAAAvU,IACA83B,GAAA,CACAzS,EAAAta,GACA0X,EAAA1X,GACAkK,EAAAlK,KAMA,OAFAoB,EAAA2P,QAAA+b,GAAApV,EAAAuS,YAAA/f,EAAA6G,SAEA3P,GAGAgpB,0BAAA,WACA,IAIAn1B,EAAA2U,EAAAmK,EAAAgX,EAHAvT,EADAnnB,KACAonB,UACArH,EAFA/f,KAEAge,MAAAoR,UACArB,EAAA5G,EAAAS,MAAA,GAGA,SAAA+S,EAAAC,EAAAj3B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAAi3B,EAAA/2B,GAAAF,GAGA,IAAAiB,EAAA,EAAA2U,EAAAwU,EAAArd,OAAmC9L,EAAA2U,IAAU3U,EAC7C8e,EAAAqK,EAAAnpB,GAAA0e,OACAoX,EAAA7X,GAAAmY,YACAnY,GAAA0L,aAAAR,EAAAnpB,GAAA,GAAA0e,OACAI,EACAb,GAAAoY,SAAAlN,EAAAnpB,GAAA,GAAA0e,OACAI,EAAAhD,SAIAgD,EAAA9C,sBAAA+Z,EAAAD,EAAAra,SAAAhc,EAAA0b,EAAAxB,KAAAwB,EAAAtB,OACAiF,EAAA5C,sBAAA6Z,EAAAD,EAAAra,SAAA/b,EAAAyb,EAAAvB,IAAAuB,EAAArB,QACAgF,EAAA7C,kBAAA8Z,EAAAD,EAAA/F,KAAAtwB,EAAA0b,EAAAxB,KAAAwB,EAAAtB,OACAiF,EAAA3C,kBAAA4Z,EAAAD,EAAA/F,KAAArwB,EAAAyb,EAAAvB,IAAAuB,EAAArB,SAIAsL,cAAA,SAAAlK,GACA,IAAA4D,EAAA5D,EAAAwD,OACAzJ,EAAAiG,EAAAqW,SACAjM,EAAArH,GAAAqH,cAEApK,EAAAiK,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,YACA/L,OAAAoF,EAAApF,QAGAoF,EAAAyG,gBAAAsS,GAAA5iB,EAAAyQ,qBAAAJ,EAAArQ,EAAAsQ,kBACAzG,EAAA0G,YAAAqS,GAAA5iB,EAAA0Q,iBAAAL,EAAArQ,EAAAuQ,cACA1G,EAAA2G,YAAAoS,GAAA5iB,EAAA2Q,iBAAA3Q,EAAAwQ,aACA3G,EAAApF,OAAAme,GAAA5iB,EAAA6R,YAAA7R,EAAAyE,WAIAsD,GAAAT,KAAA,WACAmQ,MAAA,CACAC,KAAA,UAGA/J,OAAA,CACAC,MAAA,EACA7P,GAAA,WACAhB,KAAA,SACA2e,SAAA,WAEA5N,MAAA,EACA/P,GAAA,WACAhB,KAAA,SACA2e,SAAA,UAIA5T,WAAA,EAEA6T,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEApD,MAAA,SAAApX,GACA,UAAAA,EAAAya,OAAA,KAAAza,EAAA0a,OAAA,SAOA,IAMAkH,GAAA,CACA/K,IAAAF,GACAkL,OAAAlH,GACA0G,SAAAlF,GACA2F,cAAA3D,GACAhM,KAAAsM,GACAsD,UAAAxB,GACAyB,IAAAV,GACAW,MAAAR,GACAS,QAfAzD,IAwBA,SAAA0D,GAAA19B,EAAAqe,GACA,OAAAre,EAAA29B,OACA,CACAj5B,EAAA1E,EAAA0E,EACAC,EAAA3E,EAAA2E,GAIAue,GAAAwa,oBAAA19B,EAAAqe,GAQA,SAAAuf,GAAAvf,EAAAwf,GACA,IACArW,EAAAviB,EAAA4yB,EAAAje,EAAAkkB,EAEA,IAAA74B,EAAA,EAAA2U,EAHAyE,EAAA4J,KAAAC,SAGAnX,OAAoC9L,EAAA2U,IAAU3U,EAC9C,GAAAoZ,EAAAuV,iBAAA3uB,GAKA,IAAA4yB,EAAA,EAAAiG,GADAtW,EAAAnJ,EAAA8J,eAAAljB,IACAgjB,KAAAlX,OAAsC8mB,EAAAiG,IAAUjG,EAAA,CAChD,IAAAxO,EAAA7B,EAAAS,KAAA4P,GACAxO,EAAA3F,MAAAmL,MACAgP,EAAAxU,IAYA,SAAA0U,GAAA1f,EAAAuX,GACA,IAAA3L,EAAA,GAQA,OANA2T,GAAAvf,EAAA,SAAAgL,GACAA,EAAA2C,QAAA4J,EAAAlxB,EAAAkxB,EAAAjxB,IACAslB,EAAA/D,KAAAmD,KAIAY,EAWA,SAAA+T,GAAA3f,EAAAuX,EAAAqI,EAAAC,GACA,IAAAC,EAAAvlB,OAAAwlB,kBACAC,EAAA,GAkBA,OAhBAT,GAAAvf,EAAA,SAAAgL,GACA,IAAA4U,GAAA5U,EAAA2C,QAAA4J,EAAAlxB,EAAAkxB,EAAAjxB,GAAA,CAIA,IAAA4uB,EAAAlK,EAAAsD,iBACAL,EAAA4R,EAAAtI,EAAArC,GACAjH,EAAA6R,GACAE,EAAA,CAAAhV,GACA8U,EAAA7R,GACGA,IAAA6R,GAEHE,EAAAnY,KAAAmD,MAIAgV,EAQA,SAAAC,GAAA7E,GACA,IAAA8E,GAAA,IAAA9E,EAAApe,QAAA,KACAmjB,GAAA,IAAA/E,EAAApe,QAAA,KAEA,gBAAAojB,EAAAC,GACA,IAAAC,EAAAJ,EAAAt6B,KAAAgrB,IAAAwP,EAAA/5B,EAAAg6B,EAAAh6B,GAAA,EACAk6B,EAAAJ,EAAAv6B,KAAAgrB,IAAAwP,EAAA95B,EAAA+5B,EAAA/5B,GAAA,EACA,OAAAV,KAAAmC,KAAAnC,KAAAO,IAAAm6B,EAAA,GAAA16B,KAAAO,IAAAo6B,EAAA,KAIA,SAAAC,GAAAxgB,EAAAre,EAAAka,GACA,IAAA0b,EAAA8H,GAAA19B,EAAAqe,GAEAnE,EAAAuf,KAAAvf,EAAAuf,MAAA,IACA,IAAAyE,EAAAI,GAAApkB,EAAAuf,MACAqF,EAAA5kB,EAAA+jB,UAAAF,GAAA1f,EAAAuX,GAAAoI,GAAA3f,EAAAuX,GAAA,EAAAsI,GACAjU,EAAA,GAEA,OAAA6U,EAAA/tB,QAIAsN,EAAA4J,KAAAC,SAAAzW,QAAA,SAAAiW,EAAAR,GACA,GAAA7I,EAAAuV,iBAAA1M,GAAA,CACA,IACAmC,EADAhL,EAAA8J,eAAAjB,GACAe,KAAA6W,EAAA,GAAA5V,QAGAG,MAAA3F,MAAAmL,MACA5E,EAAA/D,KAAAmD,MAKAY,GAfA,GA+BA,IAAA8U,GAAA,CAEAC,MAAA,CACAC,OAAA,SAAA5gB,EAAAre,GACA,IAAA41B,EAAA8H,GAAA19B,EAAAqe,GACA4L,EAAA,GASA,OAPA2T,GAAAvf,EAAA,SAAAgL,GACA,GAAAA,EAAA2C,QAAA4J,EAAAlxB,EAAAkxB,EAAAjxB,GAEA,OADAslB,EAAA/D,KAAAmD,GACAY,IAIAA,EAAA1Z,MAAA,MASAoiB,MAAAkM,GAYA/mB,MAAA+mB,GAWAnX,QAAA,SAAArJ,EAAAre,EAAAka,GACA,IAAA0b,EAAA8H,GAAA19B,EAAAqe,GACAnE,EAAAuf,KAAAvf,EAAAuf,MAAA,KACA,IAAAyE,EAAAI,GAAApkB,EAAAuf,MACAqF,EAAA5kB,EAAA+jB,UAAAF,GAAA1f,EAAAuX,GAAAoI,GAAA3f,EAAAuX,GAAA,EAAAsI,GAMA,OAJAY,EAAA/tB,OAAA,IACA+tB,EAAAzgB,EAAA8J,eAAA2W,EAAA,GAAA9V,eAAAf,MAGA6W,GASAI,SAAA,SAAA7gB,EAAAre,GACA,OAAA6+B,GAAAxgB,EAAAre,EAAA,CAA+Bi+B,WAAA,KAW/B9d,MAAA,SAAA9B,EAAAre,GAEA,OAAA+9B,GAAA1f,EADAqf,GAAA19B,EAAAqe,KAYA8gB,QAAA,SAAA9gB,EAAAre,EAAAka,GACA,IAAA0b,EAAA8H,GAAA19B,EAAAqe,GACAnE,EAAAuf,KAAAvf,EAAAuf,MAAA,KACA,IAAAyE,EAAAI,GAAApkB,EAAAuf,MACA,OAAAuE,GAAA3f,EAAAuX,EAAA1b,EAAA+jB,UAAAC,IAWAx5B,EAAA,SAAA2Z,EAAAre,EAAAka,GACA,IAAA0b,EAAA8H,GAAA19B,EAAAqe,GACAygB,EAAA,GACAM,GAAA,EAiBA,OAfAxB,GAAAvf,EAAA,SAAAgL,GACAA,EAAAiG,SAAAsG,EAAAlxB,IACAo6B,EAAA5Y,KAAAmD,GAGAA,EAAA2C,QAAA4J,EAAAlxB,EAAAkxB,EAAAjxB,KACAy6B,GAAA,KAMAllB,EAAA+jB,YAAAmB,IACAN,EAAA,IAEAA,GAWAn6B,EAAA,SAAA0Z,EAAAre,EAAAka,GACA,IAAA0b,EAAA8H,GAAA19B,EAAAqe,GACAygB,EAAA,GACAM,GAAA,EAiBA,OAfAxB,GAAAvf,EAAA,SAAAgL,GACAA,EAAAkG,SAAAqG,EAAAjxB,IACAm6B,EAAA5Y,KAAAmD,GAGAA,EAAA2C,QAAA4J,EAAAlxB,EAAAkxB,EAAAjxB,KACAy6B,GAAA,KAMAllB,EAAA+jB,YAAAmB,IACAN,EAAA,IAEAA,KAKA,SAAAO,GAAA/jB,EAAAsa,GACA,OAAA1S,GAAAoc,MAAAhkB,EAAA,SAAAxZ,GACA,OAAAA,EAAA8zB,eAIA,SAAA2J,GAAAjkB,EAAAhC,GACAgC,EAAA7J,QAAA,SAAA3P,EAAAmD,GAEA,OADAnD,EAAA09B,WAAAv6B,EACAnD,IAEAwZ,EAAAmkB,KAAA,SAAAx5B,EAAAlC,GACA,IAAA8V,EAAAP,EAAAvV,EAAAkC,EACA6T,EAAAR,EAAArT,EAAAlC,EACA,OAAA8V,EAAAjD,SAAAkD,EAAAlD,OACAiD,EAAA2lB,WAAA1lB,EAAA0lB,WACA3lB,EAAAjD,OAAAkD,EAAAlD,SAEA0E,EAAA7J,QAAA,SAAA3P,UACAA,EAAA09B,aA0BA,SAAAE,GAAAC,EAAAlgB,GACAyD,GAAA9J,KAAAumB,EAAA,SAAAC,GACAngB,EAAAmgB,EAAAhK,WAAAgK,EAAA5M,eAAA4M,EAAAnhB,OAAAmhB,EAAAphB,QAIAyD,GAAAT,KAAA,UACAqe,OAAA,CACArQ,QAAA,CACA3Q,IAAA,EACAC,MAAA,EACAC,OAAA,EACAH,KAAA,MAyBA,IAgVAnZ,GAhVAq6B,GAAA,CACAve,SAAA,GAQAwe,OAAA,SAAA1hB,EAAA9C,GACA8C,EAAAshB,QACAthB,EAAAshB,MAAA,IAIApkB,EAAAykB,UAAAzkB,EAAAykB,YAAA,EACAzkB,EAAAqa,SAAAra,EAAAqa,UAAA,MACAra,EAAA3E,OAAA2E,EAAA3E,QAAA,EAEAyH,EAAAshB,MAAAzZ,KAAA3K,IAQA0kB,UAAA,SAAA5hB,EAAA6hB,GACA,IAAApoB,EAAAuG,EAAAshB,MAAAthB,EAAAshB,MAAAtkB,QAAA6kB,IAAA,GACA,IAAApoB,GACAuG,EAAAshB,MAAArZ,OAAAxO,EAAA,IAUAqoB,UAAA,SAAA9hB,EAAA9C,EAAArB,GAMA,IALA,IAGA7C,EAHA+oB,EAAA,kCACAxmB,EAAAwmB,EAAArvB,OACA9L,EAAA,EAGQA,EAAA2U,IAAU3U,EAElBiV,EAAA5Z,eADA+W,EAAA+oB,EAAAn7B,MAEAsW,EAAAlE,GAAA6C,EAAA7C,KAYAsR,OAAA,SAAAtK,EAAAG,EAAAC,GACA,GAAAJ,EAAA,CAIA,IACAmR,EAAAtM,GAAAhJ,QAAAmI,WADAhE,EAAAnE,QAAA2lB,QAAA,IACArQ,SACA6Q,EAAA7Q,EAAA5Q,KACA0hB,EAAA9Q,EAAA1Q,MACAyhB,EAAA/Q,EAAA3Q,IACA2hB,EAAAhR,EAAAzQ,OAEA0hB,EAAApB,GAAAhhB,EAAAshB,MAAA,QACAe,EAAArB,GAAAhhB,EAAAshB,MAAA,SACAgB,EAAAtB,GAAAhhB,EAAAshB,MAAA,OACAiB,EAAAvB,GAAAhhB,EAAAshB,MAAA,UACAkB,EAAAxB,GAAAhhB,EAAAshB,MAAA,aAGAJ,GAAAkB,GAAA,GACAlB,GAAAmB,GAAA,GACAnB,GAAAoB,GAAA,GACApB,GAAAqB,GAAA,GAEA,IA0DAE,EA1DAC,EAAAN,EAAAhsB,OAAAisB,GACAM,EAAAL,EAAAlsB,OAAAmsB,GACAK,EAAAF,EAAAtsB,OAAAusB,GAwCAE,EAAA1iB,EAAA6hB,EAAAC,EACAa,EAAA1iB,EAAA8hB,EAAAC,EAIAY,GAAA5iB,EAHA0iB,EAAA,GAGAH,EAAAhwB,OAOAswB,EAAAH,EACAI,EAAAH,EACAI,EAAA,CAAuB1iB,IAAA0hB,EAAA3hB,KAAAyhB,EAAAthB,OAAAyhB,EAAA1hB,MAAAwhB,GACvBkB,EAAA,GAsBAte,GAAA9J,KAAA6nB,EAnBA,SAAArB,GACA,IAAA3H,EACAjF,EAAA4M,EAAA5M,eAEAA,GACAiF,EAAA2H,EAAAjX,OAAAiX,EAAAI,UAAAkB,EAAAG,EAAAF,EAAA,GACAG,GAAArJ,EAAAxZ,SAEAwZ,EAAA2H,EAAAjX,OAAAyY,EAAAE,GACAD,GAAApJ,EAAAzZ,OAGAgjB,EAAAtb,KAAA,CACA6K,WAAAiC,EACAxU,MAAAyZ,EAAAzZ,MACAohB,UAOAkB,EAlOA,SAAAnB,GACA,IAAA9gB,EAAA,EACAD,EAAA,EACAG,EAAA,EACAD,EAAA,EAUA,OATAoE,GAAA9J,KA6NA6nB,EA7NA,SAAArB,GACA,GAAAA,EAAA6B,WAAA,CACA,IAAAC,EAAA9B,EAAA6B,aACA5iB,EAAA5a,KAAAC,IAAA2a,EAAA6iB,EAAA7iB,KACAD,EAAA3a,KAAAC,IAAA0a,EAAA8iB,EAAA9iB,MACAG,EAAA9a,KAAAC,IAAA6a,EAAA2iB,EAAA3iB,QACAD,EAAA7a,KAAAC,IAAA4a,EAAA4iB,EAAA5iB,UAGA,CACAD,MACAD,OACAG,SACAD,SAgNA6iB,GA+BAze,GAAA9J,KAAA2nB,EAAAa,GACAlC,GAAAqB,EAAAQ,GAGAre,GAAA9J,KAAA4nB,EAAAY,GACAlC,GAAAsB,EAAAO,GAoBAre,GAAA9J,KAAA2nB,EAlBA,SAAAnB,GACA,IAAAiC,EAAA3e,GAAA4e,cAAAN,EAAA,SAAAvJ,GACA,OAAAA,EAAA2H,UAUAiC,GACAjC,EAAAjX,OAAAkZ,EAAArjB,MAAA8iB,EARA,CACA1iB,KAAA,EACAE,MAAA,EACAD,IAAA0iB,EAAA1iB,IACAE,OAAAwiB,EAAAxiB,WAaA2gB,GAAAuB,EADAM,EAAA,CAAmB1iB,IAAA0hB,EAAA3hB,KAAAyhB,EAAAthB,OAAAyhB,EAAA1hB,MAAAwhB,IAInB,IAAAyB,EAAA99B,KAAAC,IAAA48B,EAAAliB,KAAA2iB,EAAA3iB,KAAA,GACA2iB,EAAA3iB,MAAAmjB,EACAR,EAAAziB,OAAA7a,KAAAC,IAAA48B,EAAAhiB,MAAAyiB,EAAAziB,MAAA,GAEA,IAAAkjB,EAAA/9B,KAAAC,IAAA48B,EAAAjiB,IAAA0iB,EAAA1iB,IAAA,GACA0iB,EAAA1iB,KAAAmjB,EACAT,EAAAxiB,QAAA9a,KAAAC,IAAA48B,EAAA/hB,OAAAwiB,EAAAxiB,OAAA,GAKA,IAAAkjB,EAAAxjB,EAAA8iB,EAAA1iB,IAAA0iB,EAAAxiB,OACAmjB,EAAA1jB,EAAA+iB,EAAA3iB,KAAA2iB,EAAAziB,MAEAojB,IAAAb,GAAAY,IAAAX,IACApe,GAAA9J,KAAA2nB,EAAA,SAAAnB,GACAA,EAAAnhB,OAAAwjB,IAGA/e,GAAA9J,KAAA4nB,EAAA,SAAApB,GACAA,EAAAI,YACAJ,EAAAphB,MAAA0jB,KAIAZ,EAAAW,EACAZ,EAAAa,GAIA,IAAAtjB,EAAAyhB,EAAA0B,EACAljB,EAAA0hB,EAAAyB,EAwBA9e,GAAA9J,KAAAqnB,EAAAhsB,OAAAksB,GAAAwB,GAGAvjB,GAAAyiB,EACAxiB,GAAAyiB,EAEApe,GAAA9J,KAAAsnB,EAAAyB,GACAjf,GAAA9J,KAAAwnB,EAAAuB,GAGA9jB,EAAAoR,UAAA,CACA7Q,KAAA2iB,EAAA3iB,KACAC,IAAA0iB,EAAA1iB,IACAC,MAAAyiB,EAAA3iB,KAAAyiB,EACAtiB,OAAAwiB,EAAA1iB,IAAAyiB,GAIApe,GAAA9J,KAAAynB,EAAA,SAAAjB,GACAA,EAAAhhB,KAAAP,EAAAoR,UAAA7Q,KACAghB,EAAA/gB,IAAAR,EAAAoR,UAAA5Q,IACA+gB,EAAA9gB,MAAAT,EAAAoR,UAAA3Q,MACA8gB,EAAA7gB,OAAAV,EAAAoR,UAAA1Q,OAEA6gB,EAAAjX,OAAA0Y,EAAAC,KAvIA,SAAAM,EAAAhC,GACA,IAAAiC,EAAA3e,GAAA4e,cAAAN,EAAA,SAAAY,GACA,OAAAA,EAAAxC,UAGA,GAAAiC,EACA,GAAAA,EAAA9Q,WAAA,CACA,IAAAsR,EAAA,CACAzjB,KAAA3a,KAAAC,IAAAq9B,EAAA3iB,KAAAkiB,EAAAliB,MACAE,MAAA7a,KAAAC,IAAAq9B,EAAAziB,MAAAgiB,EAAAhiB,OACAD,IAAA,EACAE,OAAA,GAKA6gB,EAAAjX,OAAAiX,EAAAI,UAAAkB,EAAAG,EAAAF,EAAA,EAAAkB,QAEAzC,EAAAjX,OAAAkZ,EAAArjB,MAAA8iB,GAuEA,SAAAa,EAAAvC,GACAA,EAAA5M,gBACA4M,EAAAhhB,KAAAghB,EAAAI,UAAAK,EAAAkB,EAAA3iB,KACAghB,EAAA9gB,MAAA8gB,EAAAI,UAAAxhB,EAAA8hB,EAAAiB,EAAA3iB,KAAAyiB,EACAzB,EAAA/gB,MACA+gB,EAAA7gB,OAAAF,EAAA+gB,EAAAnhB,OAGAI,EAAA+gB,EAAA7gB,SAIA6gB,EAAAhhB,OACAghB,EAAA9gB,MAAAF,EAAAghB,EAAAphB,MACAohB,EAAA/gB,IAAA0iB,EAAA1iB,IACA+gB,EAAA7gB,OAAAwiB,EAAA1iB,IAAAyiB,EAGA1iB,EAAAghB,EAAA9gB,UA2DAwjB,IAJA78B,GAJA+S,OAAA+pB,OAAA,CACAC,QAHA,w3BAOA/8B,GAAA+8B,SAAA/8B,GAUAg9B,GAAA,0CAOAC,GAAA,CACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,GAAA/Z,EAAAga,GACA,IAAArvB,EAAAkP,GAAAogB,SAAAja,EAAAga,GACAjhB,EAAApO,KAAAf,MAAA,qBACA,OAAAmP,EAAAxJ,OAAAwJ,EAAA,SAAAtR,EA+DA,IAkBAyyB,KAlBA,WACA,IAAAC,GAAA,EACA,IACA,IAAAtpB,EAAA1B,OAAA0M,eAAA,GAAwC,WAExCC,IAAA,WACAqe,GAAA,KAGAxrB,OAAAyrB,iBAAA,SAAAvpB,GACE,MAAAla,IAGF,OAAAwjC,EAbA,IAkBA,CAA2DE,SAAA,GAE3D,SAAAC,GAAAC,EAAA3sB,EAAA4P,GACA+c,EAAAH,iBAAAxsB,EAAA4P,EAAA0c,IAGA,SAAAM,GAAAD,EAAA3sB,EAAA4P,GACA+c,EAAAE,oBAAA7sB,EAAA4P,EAAA0c,IAGA,SAAAQ,GAAA9sB,EAAAoH,EAAA3Z,EAAAC,EAAAq/B,GACA,OACA/sB,OACAoH,QACAsf,OAAAqG,GAAA,KACAt/B,OAAAoM,IAAApM,IAAA,KACAC,OAAAmM,IAAAnM,IAAA,MA4BA,SAAAs/B,GAAAC,GACA,IAAAC,EAAAC,SAAAC,cAAA,OAEA,OADAF,EAAAG,UAAAJ,GAAA,GACAC,EAwIA,IAAAI,GAAA,CAQAC,qBAAA,EAOAC,SAAA,oBAAAzsB,QAAA,oBAAAosB,SAKAM,cAAA,WACArkC,KAAAskC,UAIAtkC,KAAAskC,SAAA,EAGAtkC,KAAAmkC,qBAzCA,SAAAI,EAAAC,GAEA,IAAAxlB,EAAAulB,EAAAE,QAAAV,SAAAC,cAAA,SACAO,EAAAE,SACAF,EAAAE,OAAAzlB,EACAwlB,EAAA,mBAAAA,EACAxlB,EAAA0lB,aAAA,mBACAX,SAAAY,qBAAA,WAAAC,YAAA5lB,IAGAA,EAAA4lB,YAAAb,SAAAc,eAAAL,IAgCAM,CAAA9kC,KAAAiiC,MAIA8C,eAAA,SAAA7pB,EAAA8pB,GACA,iBAAA9pB,EACAA,EAAA6oB,SAAAkB,eAAA/pB,GACGA,EAAAxK,SAEHwK,IAAA,IAGAA,KAAA4H,SAEA5H,IAAA4H,QAMA,IAAAF,EAAA1H,KAAAgqB,YAAAhqB,EAAAgqB,WAAA,MAaA,OATAllC,KAAAqkC,gBASAzhB,KAAAE,SAAA5H,GA9TA,SAAA4H,EAAAkiB,GACA,IAAAhmB,EAAA8D,EAAA9D,MAIAmmB,EAAAriB,EAAAsiB,aAAA,UACAC,EAAAviB,EAAAsiB,aAAA,SAoBA,GAjBAtiB,EAAA,UACAwiB,QAAA,CACAlnB,OAAA+mB,EACAhnB,MAAAknB,EACArmB,MAAA,CACAqc,QAAArc,EAAAqc,QACAjd,OAAAY,EAAAZ,OACAD,MAAAa,EAAAb,SAQAa,EAAAqc,QAAArc,EAAAqc,SAAA,QAEA,OAAAgK,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAAxC,GAAAjgB,EAAA,cACArS,IAAA80B,IACAziB,EAAA3E,MAAAonB,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAAriB,EAAA9D,MAAAZ,OAIA0E,EAAA1E,OAAA0E,EAAA3E,OAAA6mB,EAAAnrB,QAAA2rB,aAAA,OACG,CACH,IAAAC,EAAA1C,GAAAjgB,EAAA,eACArS,IAAA80B,IACAziB,EAAA1E,OAAAqnB,IAqRAC,CAAAxqB,EAAA8pB,GACApiB,GAGA,MAGA+iB,eAAA,SAAA/iB,GACA,IAAAE,EAAAF,EAAAE,OACA,GAAAA,EAAA,UAIA,IAAAwiB,EAAAxiB,EAAA,SAAAwiB,QACA,mBAAAl0B,QAAA,SAAA4F,GACA,IAAArD,EAAA2xB,EAAAtuB,GACA6L,GAAA5K,cAAAtE,GACAmP,EAAA8iB,gBAAA5uB,GAEA8L,EAAA4hB,aAAA1tB,EAAArD,KAIAkP,GAAA9J,KAAAusB,EAAAtmB,OAAA,GAAoC,SAAArL,EAAAhE,GACpCmT,EAAA9D,MAAArP,GAAAgE,IAQAmP,EAAA3E,MAAA2E,EAAA3E,aAEA2E,EAAA,WAGAsgB,iBAAA,SAAAplB,EAAApH,EAAA4P,GACA,IAAA1D,EAAA9E,EAAA8E,OACA,cAAAlM,EAAA,CAMA,IAAAivB,EAAArf,EAAA,WAAAA,EAAA,aAMA8c,GAAAxgB,EAAAlM,GALAivB,EAAAC,UAAAD,EAAAC,QAAA,KACA9nB,EAAApG,GAAA,IAAAhB,GAAA,SAAAmvB,GACAvf,EAlRA,SAAAuf,EAAA/nB,GACA,IAAApH,EAAAyrB,GAAA0D,EAAAnvB,OAAAmvB,EAAAnvB,KACAovB,EAAAnjB,GAAAwa,oBAAA0I,EAAA/nB,GACA,OAAA0lB,GAAA9sB,EAAAoH,EAAAgoB,EAAA3hC,EAAA2hC,EAAA1hC,EAAAyhC,GA+QAE,CAAAF,EAAA/nB,WA7KA,SAAAulB,EAAA/c,EAAAxI,GACA,IAhGApF,EAAAC,EACAqtB,EACAvlC,EA8FAklC,EAAAtC,EAAA,WAAAA,EAAA,aAGA4C,EAAAN,EAAAM,QA1EA,SAAA3I,GACA,IAIA2I,EAAAvC,GA3KAwC,wBA4KAC,EAAAzC,GAAA0C,+BACAC,EAAA3C,GAAA0C,+BAEAD,EAAAzB,YAAAhB,MACA2C,EAAA3B,YAAAhB,MAEAuC,EAAAvB,YAAAyB,GACAF,EAAAvB,YAAA2B,GACAJ,EAAAK,OAAA,WACAH,EAAAI,WAdA,IAeAJ,EAAAK,UAfA,IAgBAH,EAAAE,WAhBA,IAiBAF,EAAAG,UAjBA,KAoBA,IAAAC,EAAA,WACAR,EAAAK,SACAhJ,KAMA,OAHA8F,GAAA+C,EAAA,SAAAM,EAAAC,KAAAP,EAAA,WACA/C,GAAAiD,EAAA,SAAAI,EAAAC,KAAAL,EAAA,WAEAJ,EA6CAU,EAnGAjuB,EAmGA,WACA,GAAAitB,EAAAM,QAAA,CACA,IAAAW,EAAA9oB,EAAAnE,QAAAktB,qBAAAxD,EAAAyD,WACApzB,EAAAkzB,IAAAG,YAAA,EACAzgB,EAAAkd,GAAA,SAAA1lB,IACA8oB,KAAAG,YAAArzB,GAAAoK,EAAA8E,QAQA0D,EAAAkd,GAAA,SAAA1lB,MA/GAkoB,GAAA,EACAvlC,EAAA,GAEA,WACAA,EAAAqP,MAAAC,UAAAC,MAAAC,KAAAC,WACAyI,KAAA7Y,KAEAkmC,IACAA,GAAA,EACArjB,GAAAqD,iBAAA/V,KAAAwH,OAAA,WACAuuB,GAAA,EACAttB,EAAAE,MAAAD,EAAAlY,UA8CA,SAAA4iC,EAAA/F,GACA,IAAAqI,EAAAtC,EAAA,WAAAA,EAAA,aACA2D,EAAArB,EAAAsB,YAAA,SAAAxnC,GAvMAymC,6BAwMAzmC,EAAAynC,eACA5J,KAIA3a,GAAA9J,KAAAqpB,GAAA,SAAAxrB,GACA0sB,GAAAC,EAAA3sB,EAAAswB,KAQArB,EAAAwB,SAAA9D,EAAA+D,aAEA/D,EAAAgE,UAAAC,IAzNApB,0BAmQAqB,CAAAlE,EAAA,WACA,GAAAsC,EAAAM,QAAA,CACA,IAAAW,EAAAvD,EAAAyD,WACAF,OAAAX,EAAAa,YACAF,EAAAY,aAAAvB,EAAAW,EAAAa,YAIAxB,EAAAK,YAsIAoB,CAAA9kB,EAAA0D,EAAAxI,IAaAylB,oBAAA,SAAAzlB,EAAApH,EAAA4P,GACA,IA/IA+c,EACAsC,EACAM,EA6IArjB,EAAA9E,EAAA8E,OACA,cAAAlM,EAAA,CAMA,IAEAswB,IAFA1gB,EAAA,cACAsf,SAAA,IACA9nB,EAAApG,GAAA,IAAAhB,GACAswB,GAIA1D,GAAA1gB,EAAAlM,EAAAswB,QA3JAf,GADAN,GADAtC,EAkJAzgB,GAjJA,cACAqjB,eAEAN,EAAAM,QAxDA,SAAA5C,GACA,IAAAsC,EAAAtC,EAAA,aACA2D,EAAArB,EAAAsB,YAEAD,IACArkB,GAAA9J,KAAAqpB,GAAA,SAAAxrB,GACA4sB,GAAAD,EAAA3sB,EAAAswB,YAGArB,EAAAsB,aAGA5D,EAAAgE,UAAAM,OAxOAzB,0BAqRA0B,CAAAvE,GAEA4C,KAAAa,YACAb,EAAAa,WAAAe,YAAA5B,KAoKAtjB,GAAAmlB,SAAA1E,GAWAzgB,GAAAolB,YAAAzE,GAGA,IAOAe,GAAA1hB,GAAAxI,OAAA,CAIA6I,WAAA,aASA6hB,eAAA,aAQAY,eAAA,aASAvC,iBAAA,aAQAK,oBAAA,cA7CAS,GAAAE,SAAAF,GApeA,CACAa,eAAA,SAAA7pB,GAMA,OALAA,KAAA4H,SAEA5H,IAAA4H,QAGA5H,KAAAgqB,WAAA,eA8gBAtjB,GAAAT,KAAA,UACA+mB,QAAA,KAQA,IAAAC,GAAA,CAKAC,SAAA,GAQAC,SAAA,EAMAC,SAAA,SAAAJ,GACA,IAAAljC,EAAAhF,KAAAooC,SACA,GAAAh0B,OAAA8zB,GAAA92B,QAAA,SAAAm3B,IACA,IAAAvjC,EAAAgW,QAAAutB,IACAvjC,EAAA6gB,KAAA0iB,KAIAvoC,KAAAqoC,YAOAG,WAAA,SAAAN,GACA,IAAAljC,EAAAhF,KAAAooC,SACA,GAAAh0B,OAAA8zB,GAAA92B,QAAA,SAAAm3B,GACA,IAAAE,EAAAzjC,EAAAgW,QAAAutB,IACA,IAAAE,GACAzjC,EAAAihB,OAAAwiB,EAAA,KAIAzoC,KAAAqoC,YAOAtqB,MAAA,WACA/d,KAAAooC,SAAA,GACApoC,KAAAqoC,YAQAzd,MAAA,WACA,OAAA5qB,KAAAooC,SAAA13B,QAQAg4B,OAAA,WACA,OAAA1oC,KAAAooC,UAYAO,OAAA,SAAA3qB,EAAA4qB,EAAAjoC,GACA,IAEAiE,EAAAikC,EAAAN,EAAAO,EAAAxf,EAFAyf,EAAA/oC,KAAA+oC,YAAA/qB,GACAzE,EAAAwvB,EAAAr4B,OAGA,IAAA9L,EAAA,EAAaA,EAAA2U,IAAU3U,EAIvB,sBADA0kB,GADAif,GADAM,EAAAE,EAAAnkC,IACA2jC,QACAK,OAEAE,EAAA,CAAA9qB,GAAA5J,OAAAzT,GAAA,KACAklB,KAAAgjB,EAAAhvB,UACA,IAAAyP,EAAAxQ,MAAAyvB,EAAAO,IACA,SAKA,UAQAC,YAAA,SAAA/qB,GACA,IAAAgrB,EAAAhrB,EAAAirB,WAAAjrB,EAAAirB,SAAA,IACA,GAAAD,EAAApxB,KAAA5X,KAAAqoC,SACA,OAAAW,EAAAD,YAGA,IAAAb,EAAA,GACAa,EAAA,GACA/D,EAAAhnB,KAAAgnB,QAAA,GACAnrB,EAAAmrB,EAAAnrB,SAAAmrB,EAAAnrB,QAAAquB,SAAA,GA2BA,OAzBAloC,KAAAooC,SAAAh0B,OAAA4wB,EAAAkD,SAAA,IAAA92B,QAAA,SAAAm3B,GAEA,QADAL,EAAAltB,QAAAutB,GACA,CAIA,IAAA3wB,EAAA2wB,EAAA3wB,GACA6f,EAAA5d,EAAAjC,IACA,IAAA6f,KAIA,IAAAA,IACAA,EAAA5U,GAAAlM,MAAAiL,GAAAtiB,OAAA4oC,QAAAtwB,KAGAswB,EAAAriB,KAAA0iB,GACAQ,EAAAljB,KAAA,CACA0iB,SACA1uB,QAAA4d,GAAA,SAIAuR,EAAAD,cACAC,EAAApxB,GAAA5X,KAAAqoC,SACAU,GASAG,YAAA,SAAAlrB,UACAA,EAAAirB,WAIAE,GAAA,CAGAC,aAAA,GAKAloB,SAAA,GACAmoB,kBAAA,SAAAzyB,EAAA0yB,EAAAC,GACAvpC,KAAAopC,aAAAxyB,GAAA0yB,EACAtpC,KAAAkhB,SAAAtK,GAAAiM,GAAAlM,MAAA4yB,IAEAC,oBAAA,SAAA5yB,GACA,OAAA5W,KAAAopC,aAAAnpC,eAAA2W,GAAA5W,KAAAopC,aAAAxyB,QAAAnG,GAEAg5B,iBAAA,SAAA7yB,GAEA,OAAA5W,KAAAkhB,SAAAjhB,eAAA2W,GAAAiM,GAAA7I,MAAA,GAAgE,CAAA4H,GAAA5O,MAAAhT,KAAAkhB,SAAAtK,KAAA,IAEhE8yB,oBAAA,SAAA9yB,EAAA+yB,GACA3pC,KACAkhB,SAAAjhB,eAAA2W,KADA5W,KAEAkhB,SAAAtK,GAAAiM,GAAAxI,OAFAra,KAEAkhB,SAAAtK,GAAA+yB,KAGAC,kBAAA,SAAA5rB,GAEA6E,GAAA9J,KAAAiF,EAAAwJ,OAAA,SAAAxU,GAEAA,EAAA2sB,UAAA3sB,EAAA6G,QAAA8lB,UACA3sB,EAAAuiB,SAAAviB,EAAA6G,QAAA0b,SACAviB,EAAAuD,OAAAvD,EAAA6G,QAAAtD,OACAkpB,GAAAC,OAAA1hB,EAAAhL,OAKA62B,GAAAhnB,GAAArK,eAEAoJ,GAAAT,KAAA,UACAqU,SAAA,CACAsU,SAAA,EACA7f,OAAA,KACAsH,KAAA,UACAgE,SAAA,UACAqI,WAAA,EACAzT,gBAAA,kBACA4f,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACA1rB,aAAA,EACA2rB,mBAAA,OACAC,eAAA,EACA7gB,YAAA,gBACAC,YAAA,EACAoL,UAAA,CAEAyV,YAAAroB,GAAA9K,KACA2d,MAAA,SAAAyV,EAAAvjB,GACA,IAAA8N,EAAA,GACAnD,EAAA3K,EAAA2K,OACA6Y,EAAA7Y,IAAA7hB,OAAA,EAEA,GAAAy6B,EAAAz6B,OAAA,GACA,IAAAwK,EAAAiwB,EAAA,GACAjwB,EAAAoX,MACAoD,EAAAxa,EAAAoX,MACMpX,EAAAya,OACND,EAAAxa,EAAAya,OACMyV,EAAA,GAAAlwB,EAAAzD,MAAA2zB,IACN1V,EAAAnD,EAAArX,EAAAzD,QAIA,OAAAie,GAEA2V,WAAAxoB,GAAA9K,KAGAuzB,WAAAzoB,GAAA9K,KAGAwzB,YAAA1oB,GAAA9K,KACAua,MAAA,SAAA6E,EAAAvP,GACA,IAAA0K,EAAA1K,EAAAC,SAAAsP,EAAAtQ,cAAAyL,OAAA,GAUA,OARAA,IACAA,GAAA,MAEAzP,GAAA5K,cAAAkf,EAAAxjB,OAGA2e,GAAA6E,EAAAvB,OAFAtD,GAAA6E,EAAAxjB,MAIA2e,GAEAkZ,WAAA,SAAArU,EAAAnZ,GACA,IAEA4F,EAFA5F,EAAA8J,eAAAqP,EAAAtQ,cACAe,KAAAuP,EAAA1f,OACA4L,MACA,OACA+G,YAAAxG,EAAAwG,YACAD,gBAAAvG,EAAAuG,kBAGAshB,eAAA,WACA,OAAAzrC,KAAAm2B,SAAAkU,eAEAqB,WAAA7oB,GAAA9K,KAGA4zB,UAAA9oB,GAAA9K,KAGA6zB,aAAA/oB,GAAA9K,KACA8zB,OAAAhpB,GAAA9K,KACA+zB,YAAAjpB,GAAA9K,SAKA,IAAAg0B,GAAA,CAOAC,QAAA,SAAApiB,GACA,IAAAA,EAAAlZ,OACA,SAGA,IAAA9L,EAAAsU,EACA7U,EAAA,EACAC,EAAA,EACAsmB,EAAA,EAEA,IAAAhmB,EAAA,EAAAsU,EAAA0Q,EAAAlZ,OAAoC9L,EAAAsU,IAAStU,EAAA,CAC7C,IAAAk/B,EAAAla,EAAAhlB,GACA,GAAAk/B,KAAA3f,WAAA,CACA,IAAA6hB,EAAAlC,EAAA5f,kBACA7f,GAAA2hC,EAAA3hC,EACAC,GAAA0hC,EAAA1hC,IACAsmB,GAIA,OACAvmB,IAAAumB,EACAtmB,IAAAsmB,IAWAkU,QAAA,SAAAlV,EAAAqiB,GACA,IAGArnC,EAAAsU,EAAAgzB,EAHA7nC,EAAA4nC,EAAA5nC,EACAC,EAAA2nC,EAAA3nC,EACAw5B,EAAAvlB,OAAAwlB,kBAGA,IAAAn5B,EAAA,EAAAsU,EAAA0Q,EAAAlZ,OAAoC9L,EAAAsU,IAAStU,EAAA,CAC7C,IAAAk/B,EAAAla,EAAAhlB,GACA,GAAAk/B,KAAA3f,WAAA,CACA,IAAA+O,EAAA4Q,EAAAxX,iBACA6f,EAAAtpB,GAAAupB,sBAAAH,EAAA/Y,GAEAiZ,EAAArO,IACAA,EAAAqO,EACAD,EAAApI,IAKA,GAAAoI,EAAA,CACA,IAAAG,EAAAH,EAAAhoB,kBACA7f,EAAAgoC,EAAAhoC,EACAC,EAAA+nC,EAAA/nC,EAGA,OACAD,IACAC,OAMA,SAAAgoC,GAAA/iB,EAAAgjB,GAUA,OATAA,IACA1pB,GAAA3K,QAAAq0B,GAEAv8B,MAAAC,UAAA4V,KAAA/M,MAAAyQ,EAAAgjB,GAEAhjB,EAAA1D,KAAA0mB,IAIAhjB,EASA,SAAAijB,GAAAr5B,GACA,wBAAAA,gBAAAs5B,SAAAt5B,EAAA6H,QAAA,SACA7H,EAAAu5B,MAAA,MAEAv5B,EAkCA,SAAAw5B,GAAAC,GACA,IAAA1qB,EAAAN,GAAAtiB,OAEA,OAEAurC,SAAA+B,EAAA/B,SACAD,SAAAgC,EAAAhC,SACAiC,OAAAD,EAAAC,OACAC,OAAAF,EAAAE,OAGAzC,cAAAuC,EAAAvC,cACA0C,gBAAAlD,GAAA+C,EAAAI,eAAA9qB,EAAAX,mBACA0rB,eAAApD,GAAA+C,EAAAM,cAAAhrB,EAAAT,kBACA0rB,WAAAP,EAAAtC,UACA8C,aAAAvD,GAAA+C,EAAAQ,aAAAlrB,EAAAV,iBACA4oB,YAAAwC,EAAAxC,YAGAF,eAAA0C,EAAA1C,eACAmD,iBAAAxD,GAAA+C,EAAAU,gBAAAprB,EAAAX,mBACAgsB,gBAAA1D,GAAA+C,EAAA7C,eAAA7nB,EAAAT,kBACA+rB,cAAA3D,GAAA+C,EAAAY,cAAAtrB,EAAAV,iBACAisB,YAAAb,EAAAzC,WACAH,aAAA4C,EAAA5C,aACAC,kBAAA2C,EAAA3C,kBAGAS,gBAAAkC,EAAAlC,gBACAgD,kBAAA7D,GAAA+C,EAAAe,iBAAAzrB,EAAAX,mBACAqsB,iBAAA/D,GAAA+C,EAAArC,gBAAAroB,EAAAT,kBACAosB,eAAAhE,GAAA+C,EAAAiB,eAAA3rB,EAAAV,iBACAssB,aAAAlB,EAAAjC,YACAH,cAAAoC,EAAApC,cACAC,gBAAAmC,EAAAnC,gBAGAM,UAAA6B,EAAA7B,UACA1rB,aAAAutB,EAAAvtB,aACA8K,gBAAAyiB,EAAAziB,gBACA4jB,QAAA,EACAC,sBAAApB,EAAA5B,mBACAC,cAAA2B,EAAA3B,cACA7gB,YAAAwiB,EAAAxiB,YACAC,YAAAuiB,EAAAviB,aAuMA,SAAA4jB,GAAAxiB,EAAAyiB,GACA,iBAAAA,EACAziB,EAAApnB,EAAAonB,EAAAtN,MAAA,EACA,UAAA+vB,EACAziB,EAAApnB,EAAAonB,EAAAtN,MAAAsN,EAAAof,SACApf,EAAApnB,EAAAonB,EAAAof,SAMA,SAAAsD,GAAAx1B,GACA,OAAA2zB,GAAA,GAAAE,GAAA7zB,IAGA,IA4fAy1B,GA5fA/pB,GAAAhK,OAAA,CACA6I,WAAA,WACAljB,KAAAsjB,OAAAqpB,GAAA3sC,KAAAm2B,UACAn2B,KAAAquC,YAAA,IAKAC,SAAA,WACA,IAAA7zB,EAAAza,KACAy3B,EAAAhd,EAAA0b,SACAV,EAAAgC,EAAAhC,UAEAyV,EAAAzV,EAAAyV,YAAApyB,MAAA2B,EAAArK,WACAslB,EAAAD,EAAAC,MAAA5c,MAAA2B,EAAArK,WACAi7B,EAAA5V,EAAA4V,WAAAvyB,MAAA2B,EAAArK,WAEAm+B,EAAA,GAKA,OAJAA,EAAAjC,GAAAiC,EAAA/B,GAAAtB,IACAqD,EAAAjC,GAAAiC,EAAA/B,GAAA9W,IACA4W,GAAAiC,EAAA/B,GAAAnB,KAMAmD,cAAA,WACA,OAAAL,GAAAnuC,KAAAm2B,SAAAV,UAAA6V,WAAAxyB,MAAA9Y,KAAAoQ,aAIAq+B,QAAA,SAAAtD,EAAAvjB,GACA,IAAAnN,EAAAza,KACAy1B,EAAAhb,EAAA0b,SAAAV,UACAiZ,EAAA,GAeA,OAbA7rB,GAAA9J,KAAAoyB,EAAA,SAAAhU,GACA,IAAAwX,EAAA,CACAC,OAAA,GACAL,MAAA,GACAM,MAAA,IAEAvC,GAAAqC,EAAAC,OAAApC,GAAA/W,EAAA8V,YAAAp7B,KAAAsK,EAAA0c,EAAAvP,KACA0kB,GAAAqC,EAAAJ,MAAA9Y,EAAAnD,MAAAniB,KAAAsK,EAAA0c,EAAAvP,IACA0kB,GAAAqC,EAAAE,MAAArC,GAAA/W,EAAAiW,WAAAv7B,KAAAsK,EAAA0c,EAAAvP,KAEA8mB,EAAA7oB,KAAA8oB,KAGAD,GAIAI,aAAA,WACA,OAAAX,GAAAnuC,KAAAm2B,SAAAV,UAAAkW,UAAA7yB,MAAA9Y,KAAAoQ,aAKA2+B,UAAA,WACA,IAAAt0B,EAAAza,KACAy1B,EAAAhb,EAAA0b,SAAAV,UAEAmW,EAAAnW,EAAAmW,aAAA9yB,MAAA2B,EAAArK,WACAy7B,EAAApW,EAAAoW,OAAA/yB,MAAA2B,EAAArK,WACA07B,EAAArW,EAAAqW,YAAAhzB,MAAA2B,EAAArK,WAEAm+B,EAAA,GAKA,OAJAA,EAAAjC,GAAAiC,EAAA/B,GAAAZ,IACA2C,EAAAjC,GAAAiC,EAAA/B,GAAAX,IACAS,GAAAiC,EAAA/B,GAAAV,KAKAxjB,OAAA,SAAA0mB,GACA,IA8BApqC,EAAAsU,EArYA8P,EACA8M,EACAC,EACAte,EACAoP,EACA4N,EACAwa,EACAC,EAgWAz0B,EAAAza,KACAy3B,EAAAhd,EAAA0b,SAKAgZ,EAAA10B,EAAA6I,OACAI,EAAAjJ,EAAA6I,OAAAqpB,GAAAlV,GACA2X,EAAA30B,EAAA40B,QAEAznB,EAAAnN,EAAA+N,MAGA8mB,EAAA,CACAzC,OAAAsC,EAAAtC,OACAC,OAAAqC,EAAArC,QAEAyC,EAAA,CACAlrC,EAAA8qC,EAAA9qC,EACAC,EAAA6qC,EAAA7qC,GAEAkrC,EAAA,CACArxB,MAAAgxB,EAAAhxB,MACAC,OAAA+wB,EAAA/wB,QAEA8F,EAAA,CACA7f,EAAA8qC,EAAAM,OACAnrC,EAAA6qC,EAAAO,QAKA,GAAAN,EAAA1+B,OAAA,CACAgT,EAAAqqB,QAAA,EAEA,IAAA4B,EAAA,GACAC,EAAA,GACA1rB,EAAA6nB,GAAAtU,EAAAlC,UAAAplB,KAAAsK,EAAA20B,EAAA30B,EAAAo1B,gBAEA,IAAA1E,EAAA,GACA,IAAAvmC,EAAA,EAAAsU,EAAAk2B,EAAA1+B,OAAmC9L,EAAAsU,IAAStU,EAC5CumC,EAAAtlB,MA/YAiQ,SACAC,SAGAtB,SACAwa,SACAC,SANApZ,GADA9M,EAgZAomB,EAAAxqC,IA/YAutB,QACA4D,EAAA/M,EAAAoJ,SAAApJ,EAAA6Q,OACApiB,EAAAuR,EAAAH,OAGAomB,GADAxa,EAAAzL,EAAAN,OAAAZ,eADAjB,EAAAmC,EAAAL,eACA8L,YACArM,iBACA8mB,EAAAza,EAAAtM,iBAEA,CACAwN,OAAAG,IAAAga,iBAAAr4B,EAAAoP,GAAA,GACA+O,OAAAG,IAAA+Z,iBAAAr4B,EAAAoP,GAAA,GACAyL,MAAA2c,EAAA,GAAAA,EAAAa,iBAAAr4B,EAAAoP,GAAA,GACAlT,MAAAu7B,EAAA,GAAAA,EAAAY,iBAAAr4B,EAAAoP,GAAA,GACApP,QACAoP,eACAxiB,EAAA2kB,EAAA1F,OAAAjf,EACAC,EAAA0kB,EAAA1F,OAAAhf,KAmYAmzB,EAAAoD,SACAsQ,IAAAtQ,OAAA,SAAAj1B,GACA,OAAA6xB,EAAAoD,OAAAj1B,EAAAgiB,MAKA6P,EAAAsY,WACA5E,IAAA/L,KAAA,SAAAx5B,EAAAlC,GACA,OAAA+zB,EAAAsY,SAAAnqC,EAAAlC,EAAAkkB,MAKA/E,GAAA9J,KAAAoyB,EAAA,SAAAhU,GACAwY,EAAA9pB,KAAA4R,EAAAhC,UAAA+V,WAAAr7B,KAAAsK,EAAA0c,EAAA1c,EAAAiO,SACAknB,EAAA/pB,KAAA4R,EAAAhC,UAAAgW,eAAAt7B,KAAAsK,EAAA0c,EAAA1c,EAAAiO,WAKAhF,EAAAgS,MAAAjb,EAAA6zB,SAAAnD,EAAAvjB,GACAlE,EAAA4nB,WAAA7wB,EAAA+zB,cAAArD,EAAAvjB,GACAlE,EAAAssB,KAAAv1B,EAAAg0B,QAAAtD,EAAAvjB,GACAlE,EAAAioB,UAAAlxB,EAAAq0B,aAAA3D,EAAAvjB,GACAlE,EAAAmoB,OAAApxB,EAAAs0B,UAAA5D,EAAAvjB,GAGAlE,EAAArf,EAAA6f,EAAA7f,EACAqf,EAAApf,EAAA4f,EAAA5f,EACAof,EAAAonB,aAAArT,EAAAqT,aACApnB,EAAAisB,cACAjsB,EAAAksB,kBAGAlsB,EAAAusB,WAAA9E,EAGAqE,EA9WA,SAAAU,EAAAxsB,GACA,IAAAzF,EAAAiyB,EAAAxnB,OAAAzK,IAEAG,EAAA,EAAAsF,EAAAknB,SACAzsB,EAAA,EAGA6xB,EAAAtsB,EAAAssB,KACAG,EAAAH,EAAAI,OAAA,SAAAxlB,EAAA+jB,GACA,OAAA/jB,EAAA+jB,EAAAC,OAAAl+B,OAAAi+B,EAAAJ,MAAA79B,OAAAi+B,EAAAE,MAAAn+B,QACE,GAGF2/B,EAAA3sB,EAAAgS,MAAAhlB,OACA4/B,EAAA5sB,EAAAmoB,OAAAn7B,OACA88B,EAAA9pB,EAAA8pB,cACAJ,EAAA1pB,EAAA0pB,aACAS,EAAAnqB,EAAAmqB,eAEAzvB,GAAAiyB,EAAA7C,EACApvB,GAAAiyB,KAAA,GAAA3sB,EAAAsmB,aAAA,EACA5rB,GAAAiyB,EAAA3sB,EAAAumB,kBAAA,EACA7rB,IAXA+xB,GAAAzsB,EAAA4nB,WAAA56B,OAAAgT,EAAAioB,UAAAj7B,QAWA08B,EACAhvB,GAAA+xB,KAAA,GAAAzsB,EAAA0mB,YAAA,EACAhsB,GAAAkyB,EAAA5sB,EAAA+mB,gBAAA,EACArsB,GAAAkyB,EAAA,EACAlyB,GAAAkyB,KAAA,GAAA5sB,EAAA8mB,cAAA,EAGA,IAAA+F,EAAA,EACAC,EAAA,SAAAnjB,GACAlP,EAAAva,KAAAC,IAAAsa,EAAAF,EAAAwyB,YAAApjB,GAAAlP,MAAAoyB,IA4BA,OAzBAtyB,EAAAmE,KAAAS,GAAA6tB,WAAAlD,EAAA9pB,EAAA6pB,gBAAA7pB,EAAA2pB,kBACAxqB,GAAA9J,KAAA2K,EAAAgS,MAAA8a,GAGAvyB,EAAAmE,KAAAS,GAAA6tB,WAAAtD,EAAA1pB,EAAAupB,eAAAvpB,EAAAqpB,iBACAlqB,GAAA9J,KAAA2K,EAAA4nB,WAAAl3B,OAAAsP,EAAAioB,WAAA6E,GAGAD,EAAA7sB,EAAAunB,cAAAmC,EAAA,IACAvqB,GAAA9J,KAAAi3B,EAAA,SAAArB,GACA9rB,GAAA9J,KAAA41B,EAAAC,OAAA4B,GACA3tB,GAAA9J,KAAA41B,EAAAJ,MAAAiC,GACA3tB,GAAA9J,KAAA41B,EAAAE,MAAA2B,KAIAD,EAAA,EAGAtyB,EAAAmE,KAAAS,GAAA6tB,WAAA7C,EAAAnqB,EAAAkqB,iBAAAlqB,EAAAgqB,mBACA7qB,GAAA9J,KAAA2K,EAAAmoB,OAAA2E,GAKA,CACAryB,MAHAA,GAAA,EAAAuF,EAAAmnB,SAIAzsB,UAiTAuyB,CAAA3wC,KAAA0jB,GAGA6rB,EApOA,SAAA9jB,EAAArM,EAAAkwB,EAAAtxB,GAEA,IAAA3Z,EAAAonB,EAAApnB,EACAC,EAAAmnB,EAAAnnB,EAGAwmC,EAAArf,EAAAqf,aAEA+B,EAAAyC,EAAAzC,OACAC,EAAAwC,EAAAxC,OACA8D,EALAnlB,EAAAsf,UAKAD,EACA+F,EAJAplB,EAAApM,aAIAyrB,EAkCA,MAhCA,UAAA+B,EACAxoC,GAAA+a,EAAAjB,MACE,WAAA0uB,KACFxoC,GAAA+a,EAAAjB,MAAA,GACAiB,EAAAjB,MAAAH,EAAAG,QACA9Z,EAAA2Z,EAAAG,MAAAiB,EAAAjB,OAEA9Z,EAAA,IACAA,EAAA,IAIA,QAAAyoC,EACAxoC,GAAAssC,EAEAtsC,GADE,WAAAwoC,EACF1tB,EAAAhB,OAAAwyB,EAEAxxB,EAAAhB,OAAA,EAGA,WAAA0uB,EACA,SAAAD,EACAxoC,GAAAusC,EACG,UAAA/D,IACHxoC,GAAAusC,GAEE,SAAA/D,EACFxoC,GAAAwsC,EACE,UAAAhE,IACFxoC,GAAAwsC,GAGA,CACAxsC,IACAC,KAqLAwsC,CAAAptB,EAAA8rB,EAFAF,EA3SA,SAAAY,EAAA9wB,GACA,IAYA2xB,EAAAC,EACAC,EAAAC,EACAC,EAdAztB,EAAAwsB,EAAA5sB,OACAtF,EAAAkyB,EAAAxnB,OACA0G,EAAA8gB,EAAAxnB,OAAA0G,UACAyd,EAAA,SACAC,EAAA,SAEAppB,EAAApf,EAAA8a,EAAAhB,OACA0uB,EAAA,MACEppB,EAAApf,EAAA0Z,EAAAI,OAAAgB,EAAAhB,SACF0uB,EAAA,UAMA,IAAAsE,GAAAhiB,EAAA7Q,KAAA6Q,EAAA3Q,OAAA,EACA4yB,GAAAjiB,EAAA5Q,IAAA4Q,EAAA1Q,QAAA,EAEA,WAAAouB,GACAiE,EAAA,SAAA1sC,GACA,OAAAA,GAAA+sC,GAEAJ,EAAA,SAAA3sC,GACA,OAAAA,EAAA+sC,KAGAL,EAAA,SAAA1sC,GACA,OAAAA,GAAA+a,EAAAjB,MAAA,GAEA6yB,EAAA,SAAA3sC,GACA,OAAAA,GAAA2Z,EAAAG,MAAAiB,EAAAjB,MAAA,IAIA8yB,EAAA,SAAA5sC,GACA,OAAAA,EAAA+a,EAAAjB,MAAAuF,EAAAqnB,UAAArnB,EAAAonB,aAAA9sB,EAAAG,OAEA+yB,EAAA,SAAA7sC,GACA,OAAAA,EAAA+a,EAAAjB,MAAAuF,EAAAqnB,UAAArnB,EAAAonB,aAAA,GAEAqG,EAAA,SAAA7sC,GACA,OAAAA,GAAA+sC,EAAA,gBAGAN,EAAArtB,EAAArf,IACAwoC,EAAA,OAGAoE,EAAAvtB,EAAArf,KACAwoC,EAAA,SACAC,EAAAqE,EAAAztB,EAAApf,KAEE0sC,EAAAttB,EAAArf,KACFwoC,EAAA,QAGAqE,EAAAxtB,EAAArf,KACAwoC,EAAA,SACAC,EAAAqE,EAAAztB,EAAApf,KAIA,IAAAmzB,EAAAyY,EAAA/Z,SACA,OACA0W,OAAApV,EAAAoV,OAAApV,EAAAoV,SACAC,OAAArV,EAAAqV,OAAArV,EAAAqV,UAyOAwE,CAAAtxC,KAAAwvC,GAEA/0B,EAAAiO,aAEAhF,EAAAqqB,QAAA,EAoBA,OAjBArqB,EAAAmpB,OAAAyC,EAAAzC,OACAnpB,EAAAopB,OAAAwC,EAAAxC,OACAppB,EAAArf,EAAAkrC,EAAAlrC,EACAqf,EAAApf,EAAAirC,EAAAjrC,EACAof,EAAAvF,MAAAqxB,EAAArxB,MACAuF,EAAAtF,OAAAoxB,EAAApxB,OAGAsF,EAAA+rB,OAAAvrB,EAAA7f,EACAqf,EAAAgsB,OAAAxrB,EAAA5f,EAEAmW,EAAA6I,OAAAI,EAEAsrB,GAAAvX,EAAAxN,QACAwN,EAAAxN,OAAA9Z,KAAAsK,EAAAiJ,GAGAjJ,GAGA82B,UAAA,SAAAC,EAAApyB,GACA,IAAAnB,EAAAje,KAAA0oB,OAAAzK,IAEAwzB,EAAAzxC,KAAA0xC,iBAAAF,EAAApyB,EADApf,KAAAqjB,OAGApF,EAAAuB,OAAAiyB,EAAAjiB,GAAAiiB,EAAA/hB,IACAzR,EAAAuB,OAAAiyB,EAAAhiB,GAAAgiB,EAAA9rC,IACAsY,EAAAuB,OAAAiyB,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAApyB,EAAAqM,GACA,IAAA+D,EAAAC,EAAAkiB,EAAAjiB,EAAA/pB,EAAAisC,EACA7G,EAAAtf,EAAAsf,UACA1rB,EAAAoM,EAAApM,aACAwtB,EAAAphB,EAAAohB,OACAC,EAAArhB,EAAAqhB,OACA+E,EAAAL,EAAAntC,EACAytC,EAAAN,EAAAltC,EACA6Z,EAAAiB,EAAAjB,MACAC,EAAAgB,EAAAhB,OAEA,cAAA0uB,EACAnnC,EAAAmsC,EAAA1zB,EAAA,EAEA,SAAAyuB,GAEApd,GADAD,EAAAqiB,GACA9G,EACA4G,EAAAniB,EAEAE,EAAA/pB,EAAAolC,EACA6G,EAAAjsC,EAAAolC,IAGAtb,GADAD,EAAAqiB,EAAA1zB,GACA4sB,EACA4G,EAAAniB,EAEAE,EAAA/pB,EAAAolC,EACA6G,EAAAjsC,EAAAolC,QAgBA,GAbA,SAAA8B,GAEArd,GADAC,EAAAoiB,EAAAxyB,EAAA,GACA0rB,EACA4G,EAAAliB,EAAAsb,GACI,UAAA8B,GAEJrd,GADAC,EAAAoiB,EAAA1zB,EAAAkB,EAAA0rB,GACAA,EACA4G,EAAAliB,EAAAsb,IAGAvb,GADAC,EAAAhE,EAAAgkB,QACA1E,EACA4G,EAAAliB,EAAAsb,GAEA,QAAA+B,EAEAnnC,GADA+pB,EAAAoiB,GACA/G,EACA6G,EAAAliB,MACI,CAEJ/pB,GADA+pB,EAAAoiB,EAAA1zB,GACA2sB,EACA6G,EAAAliB,EAEA,IAAAqiB,EAAAJ,EACAA,EAAAniB,EACAA,EAAAuiB,EAGA,OAAUviB,KAAAC,KAAAkiB,KAAAjiB,KAAA/pB,KAAAisC,OAGVI,UAAA,SAAApX,EAAAnP,EAAAxN,GACA,IAAAyX,EAAAjK,EAAAiK,MAEA,GAAAA,EAAAhlB,OAAA,CACAkqB,EAAAv2B,EAAA4pC,GAAAxiB,IAAAgiB,aAEAxvB,EAAAg0B,UAAAxmB,EAAAgiB,YACAxvB,EAAAi0B,aAAA,MAEA,IAMAttC,EAAAsU,EANAs0B,EAAA/hB,EAAA+hB,cACAxD,EAAAve,EAAAue,aAMA,IAJA/rB,EAAA+O,UAAAvB,EAAAye,eACAjsB,EAAAmE,KAAAS,GAAA6tB,WAAAlD,EAAA/hB,EAAA8hB,gBAAA9hB,EAAA4hB,kBAGAzoC,EAAA,EAAAsU,EAAAwc,EAAAhlB,OAAkC9L,EAAAsU,IAAStU,EAC3CqZ,EAAAk0B,SAAAzc,EAAA9wB,GAAAg2B,EAAAv2B,EAAAu2B,EAAAt2B,GACAs2B,EAAAt2B,GAAAkpC,EAAAxD,EAEAplC,EAAA,IAAA8wB,EAAAhlB,SACAkqB,EAAAt2B,GAAAmnB,EAAAwe,kBAAAD,KAMAoI,SAAA,SAAAxX,EAAAnP,EAAAxN,GACA,IAQAo0B,EARAjF,EAAA3hB,EAAA2hB,aACAhD,EAAA3e,EAAA2e,YACAE,EAAA7e,EAAA0hB,WACA6C,EAAAvkB,EAAAukB,KACAsC,EAAA7mB,EAAAwf,cACA0E,EAAAlkB,EAAAkkB,YACA4C,EAAA,EACAC,EAAAF,EAAArE,GAAAxiB,EAAA,UAGAxN,EAAAg0B,UAAA3H,EACArsB,EAAAi0B,aAAA,MACAj0B,EAAAmE,KAAAS,GAAA6tB,WAAAtD,EAAA3hB,EAAAwhB,eAAAxhB,EAAAshB,iBAEAnS,EAAAv2B,EAAA4pC,GAAAxiB,EAAA6e,GAGA,IAAAmI,EAAA,SAAAplB,GACApP,EAAAk0B,SAAA9kB,EAAAuN,EAAAv2B,EAAAkuC,EAAA3X,EAAAt2B,GACAs2B,EAAAt2B,GAAA8oC,EAAAhD,GAIAnsB,EAAA+O,UAAAvB,EAAA4e,cACAxnB,GAAA9J,KAAA0S,EAAA6f,WAAAmH,GAEAF,EAAAD,GAAA,UAAAhI,EACA,WAAAA,EAAA8C,EAAA,IAAAA,EAAA,EACA,EAGAvqB,GAAA9J,KAAAi3B,EAAA,SAAArB,EAAA/pC,GAEAqZ,EAAA+O,UADAqlB,EAAA5mB,EAAAmkB,gBAAAhrC,GAEAie,GAAA9J,KAAA41B,EAAAC,OAAA6D,GAEA5vB,GAAA9J,KAAA41B,EAAAJ,MAAA,SAAAlhB,GAEAilB,IAEAr0B,EAAA+O,UAAAvB,EAAAuiB,sBACA/vB,EAAA+S,SAAAwhB,EAAA5X,EAAAt2B,EAAA8oC,KAGAnvB,EAAAgP,UAAA,EACAhP,EAAAkP,YAAAwiB,EAAA/qC,GAAAwlB,YACAnM,EAAAy0B,WAAAF,EAAA5X,EAAAt2B,EAAA8oC,KAGAnvB,EAAA+O,UAAA2iB,EAAA/qC,GAAAulB,gBACAlM,EAAA+S,SAAAwhB,EAAA,EAAA5X,EAAAt2B,EAAA,EAAA8oC,EAAA,EAAAA,EAAA,GACAnvB,EAAA+O,UAAAqlB,GAGAI,EAAAplB,KAGAxK,GAAA9J,KAAA41B,EAAAE,MAAA4D,KAIAF,EAAA,EAGA1vB,GAAA9J,KAAA0S,EAAAkgB,UAAA8G,GACA7X,EAAAt2B,GAAA8lC,GAGAuI,WAAA,SAAA/X,EAAAnP,EAAAxN,GACA,IAAA4tB,EAAApgB,EAAAogB,OAEAA,EAAAn7B,SACAkqB,EAAAv2B,EAAA4pC,GAAAxiB,IAAAqiB,cACAlT,EAAAt2B,GAAAmnB,EAAAgf,gBAEAxsB,EAAAg0B,UAAAxmB,EAAAqiB,aACA7vB,EAAAi0B,aAAA,MAEAj0B,EAAA+O,UAAAvB,EAAAif,gBACAzsB,EAAAmE,KAAAS,GAAA6tB,WAAAjlB,EAAAoiB,eAAApiB,EAAAmiB,iBAAAniB,EAAAiiB,mBAEA7qB,GAAA9J,KAAA8yB,EAAA,SAAAxe,GACApP,EAAAk0B,SAAA9kB,EAAAuN,EAAAv2B,EAAAu2B,EAAAt2B,GACAs2B,EAAAt2B,GAAAmnB,EAAAoiB,eAAApiB,EAAA+e,kBAKAoI,eAAA,SAAAhY,EAAAnP,EAAAxN,EAAAuxB,GACAvxB,EAAA+O,UAAAvB,EAAAtB,gBACAlM,EAAAkP,YAAA1B,EAAArB,YACAnM,EAAAgP,UAAAxB,EAAApB,YACA,IAAAwiB,EAAAphB,EAAAohB,OACAC,EAAArhB,EAAAqhB,OACAzoC,EAAAu2B,EAAAv2B,EACAC,EAAAs2B,EAAAt2B,EACA6Z,EAAAqxB,EAAArxB,MACAC,EAAAoxB,EAAApxB,OACAE,EAAAmN,EAAApM,aAEApB,EAAAsB,YACAtB,EAAAU,OAAAta,EAAAia,EAAAha,GACA,QAAAwoC,GACA9sC,KAAAuxC,UAAA3W,EAAA4U,GAEAvxB,EAAAuB,OAAAnb,EAAA8Z,EAAAG,EAAAha,GACA2Z,EAAA40B,iBAAAxuC,EAAA8Z,EAAA7Z,EAAAD,EAAA8Z,EAAA7Z,EAAAga,GACA,WAAAwuB,GAAA,UAAAD,GACA7sC,KAAAuxC,UAAA3W,EAAA4U,GAEAvxB,EAAAuB,OAAAnb,EAAA8Z,EAAA7Z,EAAA8Z,EAAAE,GACAL,EAAA40B,iBAAAxuC,EAAA8Z,EAAA7Z,EAAA8Z,EAAA/Z,EAAA8Z,EAAAG,EAAAha,EAAA8Z,GACA,WAAA0uB,GACA9sC,KAAAuxC,UAAA3W,EAAA4U,GAEAvxB,EAAAuB,OAAAnb,EAAAia,EAAAha,EAAA8Z,GACAH,EAAA40B,iBAAAxuC,EAAAC,EAAA8Z,EAAA/Z,EAAAC,EAAA8Z,EAAAE,GACA,WAAAwuB,GAAA,SAAAD,GACA7sC,KAAAuxC,UAAA3W,EAAA4U,GAEAvxB,EAAAuB,OAAAnb,EAAAC,EAAAga,GACAL,EAAA40B,iBAAAxuC,EAAAC,EAAAD,EAAAia,EAAAha,GACA2Z,EAAAY,YAEAZ,EAAAyB,OAEA+L,EAAApB,YAAA,GACApM,EAAA0B,UAIAkK,KAAA,WACA,IAAA5L,EAAAje,KAAA0oB,OAAAzK,IACAwN,EAAAzrB,KAAAqjB,MAEA,OAAAoI,EAAAsiB,QAAA,CAIA,IAAAyB,EAAA,CACArxB,MAAAsN,EAAAtN,MACAC,OAAAqN,EAAArN,QAEAwc,EAAA,CACAv2B,EAAAonB,EAAApnB,EACAC,EAAAmnB,EAAAnnB,GAIAypC,EAAAnqC,KAAAgrB,IAAAnD,EAAAsiB,QAAA,QAAAtiB,EAAAsiB,QAKA/tC,KAAAm2B,SAAA2T,UAFAre,EAAAiK,MAAAhlB,QAAA+a,EAAA6f,WAAA56B,QAAA+a,EAAAukB,KAAAt/B,QAAA+a,EAAAkgB,UAAAj7B,QAAA+a,EAAAogB,OAAAn7B,UAGAuN,EAAAgC,OACAhC,EAAA60B,YAAA/E,EAGA/tC,KAAA4yC,eAAAhY,EAAAnP,EAAAxN,EAAAuxB,GAGA5U,EAAAt2B,GAAAmnB,EAAAmf,SAGA5qC,KAAAgyC,UAAApX,EAAAnP,EAAAxN,GAGAje,KAAAoyC,SAAAxX,EAAAnP,EAAAxN,GAGAje,KAAA2yC,WAAA/X,EAAAnP,EAAAxN,GAEAA,EAAAmC,aAUA2yB,YAAA,SAAApzC,GACA,IAEAqvC,EAFAv0B,EAAAza,KACA6Z,EAAAY,EAAA0b,SA8BA,OA3BA1b,EAAA4zB,YAAA5zB,EAAA4zB,aAAA,GAIA5zB,EAAA40B,QADA,aAAA1vC,EAAAiX,KACA,GAEA6D,EAAAiO,OAAAsqB,0BAAArzC,EAAAka,EAAA0X,KAAA1X,IAIAm1B,GAAAnsB,GAAAzJ,YAAAqB,EAAA40B,QAAA50B,EAAA4zB,gBAIA5zB,EAAA4zB,YAAA5zB,EAAA40B,SAEAx1B,EAAAiwB,SAAAjwB,EAAAoQ,UACAxP,EAAAo1B,eAAA,CACAxrC,EAAA1E,EAAA0E,EACAC,EAAA3E,EAAA2E,GAGAmW,EAAA6N,QAAA,GACA7N,EAAA2I,UAIA4rB,KAUAZ,GAAArC,YAHAA,GAKA,IAAAkH,GAAApwB,GAAArK,eA4BA,SAAA06B,KACA,OAAArwB,GAAA7I,MAAA,GAA0B,GAAA9J,MAAAC,KAAAC,WAAA,CAC1BgK,OAAA,SAAAzK,EAAAoH,EAAAD,EAAA+C,GACA,aAAAlK,GAAA,UAAAA,EAAA,CACA,IACA/K,EAAAgS,EAAA5D,EADAmgC,EAAAr8B,EAAAnH,GAAAe,OAOA,IAJAqG,EAAApH,KACAoH,EAAApH,GAAA,IAGA/K,EAAA,EAAeA,EAAAuuC,IAAUvuC,EAEzBgS,EAAAq8B,IADAjgC,EAAA8D,EAAAnH,GAAA/K,IACAgS,KAAA,UAAAjH,EAAA,qBAEA/K,GAAAmS,EAAApH,GAAAe,QACAqG,EAAApH,GAAAkW,KAAA,IAMAhD,GAAA7I,MAAAjD,EAAApH,GAAA/K,IAHAmS,EAAApH,GAAA/K,GAAAgS,MAAA5D,EAAA4D,MAAA5D,EAAA4D,OAAAG,EAAApH,GAAA/K,GAAAgS,KAGA,CAAAuyB,GAAAM,iBAAA7yB,GAAA5D,GAGAA,QAIA6P,GAAAjJ,QAAAjK,EAAAoH,EAAAD,EAAA+C,MAWA,SAAAu5B,KACA,OAAAvwB,GAAA7I,MAAA,GAA0B,GAAA9J,MAAAC,KAAAC,WAAA,CAC1BgK,OAAA,SAAAzK,EAAAoH,EAAAD,EAAA+C,GACA,IAAAC,EAAA/C,EAAApH,IAAA,GACAoK,EAAAjD,EAAAnH,GAEA,WAAAA,EAEAoH,EAAApH,GAAAujC,GAAAp5B,EAAAC,GACI,UAAApK,EAEJoH,EAAApH,GAAAkT,GAAA7I,MAAAF,EAAA,CAAAqvB,GAAAM,iBAAA1vB,EAAAnD,MAAAmD,IAEA8I,GAAAjJ,QAAAjK,EAAAoH,EAAAD,EAAA+C,MAuBA,SAAAw5B,GAAAr1B,GACA,IAAAs1B,EAAAt1B,EAAAnE,QAEAgJ,GAAA9J,KAAAiF,EAAAwJ,OAAA,SAAAxU,GACAysB,GAAAG,UAAA5hB,EAAAhL,KAGAsgC,EAAAF,GACAxxB,GAAAtiB,OACAsiB,GAAA5D,EAAAgnB,OAAApuB,MACA08B,GAEAt1B,EAAAnE,QAAAmE,EAAAgnB,OAAAnrB,QAAAy5B,EACAt1B,EAAAu1B,sBACAv1B,EAAAw1B,sBAGAx1B,EAAAkyB,QAAA/Z,SAAAmd,EAAA9d,SACAxX,EAAAkyB,QAAAhtB,aAGA,SAAAuwB,GAAAle,GACA,cAAAA,GAAA,WAAAA,EA5HA3T,GAAAT,KAAA,UACAyI,SAAA,GACA8pB,OAAA,CACA,YACA,WACA,QACA,aACA,aAEApiB,MAAA,CACAqiB,QAAA,KACApiB,KAAA,UACAqM,WAAA,EACAgW,kBAAA,KAEA7c,QAAA,KACAgQ,qBAAA,EACA8M,YAAA,EACAC,4BAAA,IA6GA,IAAAh0C,GAAA,SAAAob,EAAA8pB,GAEA,OADAhlC,KAAA+zC,UAAA74B,EAAA8pB,GACAhlC,MAGA6iB,GAAAxI,OAAAva,GAAAmQ,UAAA,CAIA8jC,UAAA,SAAA74B,EAAA8pB,GACA,IAAAvqB,EAAAza,KAEAglC,EAtDA,SAAAA,GAKA,IAAApd,GAJAod,KAAA,IAIApd,KAAAod,EAAApd,MAAA,GASA,OARAA,EAAAC,SAAAD,EAAAC,UAAA,GACAD,EAAA2K,OAAA3K,EAAA2K,QAAA,GAEAyS,EAAAnrB,QAAAu5B,GACAxxB,GAAAtiB,OACAsiB,GAAAojB,EAAApuB,MACAouB,EAAAnrB,SAAA,IAEAmrB,EAwCAgP,CAAAhP,GAEA,IAAApiB,EAAA2hB,GAAAQ,eAAA7pB,EAAA8pB,GACAliB,EAAAF,KAAAE,OACA1E,EAAA0E,KAAA1E,OACAD,EAAA2E,KAAA3E,MAEA1D,EAAA7C,GAAAiL,GAAA7K,MACAyC,EAAAwD,IAAA2E,EACAnI,EAAAqI,SACArI,EAAAuqB,SACAvqB,EAAA0D,QACA1D,EAAA2D,SACA3D,EAAA+qB,YAAApnB,EAAAD,EAAAC,EAAA,KACA3D,EAAAZ,QAAAmrB,EAAAnrB,QACAY,EAAAw5B,iBAAA,EAUAx5B,EAAAuD,MAAAvD,EACAA,EAAAga,WAAAha,EAGA3a,GAAAo0C,UAAAz5B,EAAA7C,IAAA6C,EAGAtC,OAAA0M,eAAApK,EAAA,QACAqK,IAAA,WACA,OAAArK,EAAAuqB,OAAApd,MAEA7C,IAAA,SAAApR,GACA8G,EAAAuqB,OAAApd,KAAAjU,KAIAiP,GAAAE,GASArI,EAAAyI,aACAzI,EAAA6N,UALArR,QAAAC,MAAA,sEAWAgM,WAAA,WACA,IAAAzI,EAAAza,KAsBA,OAnBAmoC,GAAAQ,OAAAluB,EAAA,cAEAoI,GAAAsxB,YAAA15B,IAAAZ,QAAAu6B,kBAEA35B,EAAA45B,aAEA55B,EAAAZ,QAAAg6B,YAEAp5B,EAAA65B,QAAA,GAIA75B,EAAA84B,sBACA94B,EAAA+4B,sBACA/4B,EAAA85B,cAGApM,GAAAQ,OAAAluB,EAAA,aAEAA,GAGAsD,MAAA,WAEA,OADA8E,GAAAC,OAAA/E,MAAA/d,MACAA,MAGAw0C,KAAA,WAGA,OADApvB,GAAAW,gBAAA/lB,MACAA,MAGAs0C,OAAA,SAAAG,GACA,IAAAh6B,EAAAza,KACA6Z,EAAAY,EAAAZ,QACAiJ,EAAArI,EAAAqI,OACA0iB,EAAA3rB,EAAAktB,qBAAAtsB,EAAA+qB,aAAA,KAMAkP,EAAA9wC,KAAAC,IAAA,EAAAD,KAAAkB,MAAA+d,GAAA8xB,gBAAA7xB,KACA8xB,EAAAhxC,KAAAC,IAAA,EAAAD,KAAAkB,MAAA0gC,EAAAkP,EAAAlP,EAAA3iB,GAAAgyB,iBAAA/xB,KAEA,IAAArI,EAAA0D,QAAAu2B,GAAAj6B,EAAA2D,SAAAw2B,KAIA9xB,EAAA3E,MAAA1D,EAAA0D,MAAAu2B,EACA5xB,EAAA1E,OAAA3D,EAAA2D,OAAAw2B,EACA9xB,EAAA9D,MAAAb,MAAAu2B,EAAA,KACA5xB,EAAA9D,MAAAZ,OAAAw2B,EAAA,KAEA/xB,GAAAsxB,YAAA15B,EAAAZ,EAAAu6B,mBAEAK,GAAA,CAEA,IAAAK,EAAA,CAAkB32B,MAAAu2B,EAAAt2B,OAAAw2B,GAClBzM,GAAAQ,OAAAluB,EAAA,UAAAq6B,IAGAj7B,EAAAk7B,UACAl7B,EAAAk7B,SAAAt6B,EAAAq6B,GAGAr6B,EAAA+5B,OACA/5B,EAAA6N,OAAA,CACArD,SAAApL,EAAAi6B,gCAKAP,oBAAA,WACA,IAAA15B,EAAA7Z,KAAA6Z,QACAm7B,EAAAn7B,EAAA2N,QAAA,GACAytB,EAAAp7B,EAAA7G,MAEA6P,GAAA9J,KAAAi8B,EAAAvtB,MAAA,SAAAytB,EAAAz9B,GACAy9B,EAAAt9B,GAAAs9B,EAAAt9B,IAAA,UAAAH,IAGAoL,GAAA9J,KAAAi8B,EAAArtB,MAAA,SAAAwtB,EAAA19B,GACA09B,EAAAv9B,GAAAu9B,EAAAv9B,IAAA,UAAAH,IAGAw9B,IACAA,EAAAr9B,GAAAq9B,EAAAr9B,IAAA,UAOA47B,oBAAA,WACA,IAAA/4B,EAAAza,KACA6Z,EAAAY,EAAAZ,QACA2N,EAAA/M,EAAA+M,QAAA,GACAiX,EAAA,GACA2W,EAAAj9B,OAAAgB,KAAAqO,GAAA4oB,OAAA,SAAA58B,EAAAoE,GAEA,OADApE,EAAAoE,IAAA,EACApE,GACG,IAEHqG,EAAA2N,SACAiX,IAAArqB,QACAyF,EAAA2N,OAAAC,OAAA,IAAA/N,IAAA,SAAAw7B,GACA,OAAar7B,QAAAq7B,EAAAG,MAAA,WAAAC,UAAA,aAEbz7B,EAAA2N,OAAAG,OAAA,IAAAjO,IAAA,SAAAy7B,GACA,OAAat7B,QAAAs7B,EAAAE,MAAA,SAAAC,UAAA,YAKbz7B,EAAA7G,OACAyrB,EAAA5Y,KAAA,CACAhM,UAAA7G,MACAqiC,MAAA,eACAE,WAAA,EACAD,UAAA,cAIAzyB,GAAA9J,KAAA0lB,EAAA,SAAAvjB,GACA,IAAA+5B,EAAA/5B,EAAArB,QACAjC,EAAAq9B,EAAAr9B,GACA49B,EAAAvC,GAAAgC,EAAAr+B,KAAAsE,EAAAm6B,OAEA5B,GAAAwB,EAAA1f,YAAAke,GAAAv4B,EAAAo6B,aACAL,EAAA1f,SAAAra,EAAAo6B,WAGAF,EAAAx9B,IAAA,EACA,IAAA5E,EAAA,KACA,GAAA4E,KAAA4P,KAAA5P,GAAAhB,OAAA4+B,GACAxiC,EAAAwU,EAAA5P,IACAiC,QAAAo7B,EACAjiC,EAAAiL,IAAAxD,EAAAwD,IACAjL,EAAAgL,MAAAvD,MACI,CACJ,IAAAg7B,EAAAtM,GAAAK,oBAAAgM,GACA,IAAAC,EACA,OAEAziC,EAAA,IAAAyiC,EAAA,CACA79B,KACAhB,KAAA4+B,EACA37B,QAAAo7B,EACAh3B,IAAAxD,EAAAwD,IACAD,MAAAvD,IAEA+M,EAAAxU,EAAA4E,IAAA5E,EAGAA,EAAA0iC,oBAKAx6B,EAAAq6B,YACA96B,EAAAzH,WAIA6P,GAAA9J,KAAAq8B,EAAA,SAAAO,EAAA/9B,GACA+9B,UACAnuB,EAAA5P,KAIA6C,EAAA+M,SAEA2hB,GAAAS,kBAAA5pC,OAGA41C,yBAAA,WACA,IAAAn7B,EAAAza,KACA61C,EAAA,GA0BA,OAxBAhzB,GAAA9J,KAAA0B,EAAAmN,KAAAC,SAAA,SAAAR,EAAAR,GACA,IAAAM,EAAA1M,EAAAqN,eAAAjB,GACAjQ,EAAAyQ,EAAAzQ,MAAA6D,EAAAuqB,OAAApuB,KAQA,GANAuQ,EAAAvQ,MAAAuQ,EAAAvQ,WACA6D,EAAAq7B,mBAAAjvB,GACAM,EAAA1M,EAAAqN,eAAAjB,IAEAM,EAAAvQ,OAEAuQ,EAAAsN,WACAtN,EAAAsN,WAAAvN,YAAAL,GACAM,EAAAsN,WAAAzN,iBACI,CACJ,IAAA+uB,EAAAjZ,GAAA3V,EAAAvQ,MACA,QAAAnG,IAAAslC,EACA,UAAAC,MAAA,IAAA7uB,EAAAvQ,KAAA,0BAGAuQ,EAAAsN,WAAA,IAAAshB,EAAAt7B,EAAAoM,GACAgvB,EAAAhwB,KAAAsB,EAAAsN,cAEGha,GAEHo7B,GAOAI,cAAA,WACA,IAAAx7B,EAAAza,KACA6iB,GAAA9J,KAAA0B,EAAAmN,KAAAC,SAAA,SAAAR,EAAAR,GACApM,EAAAqN,eAAAjB,GAAA4N,WAAApM,SACG5N,IAMH4N,MAAA,WACAroB,KAAAi2C,gBACAj2C,KAAAkwC,QAAAhtB,cAGAoF,OAAA,SAAA0c,GACA,IAAAvqB,EAAAza,KAgBA,GAdAglC,GAAA,iBAAAA,IAEAA,EAAA,CACA/f,SAAA+f,EACAxf,KAAApV,UAAA,KAIAijC,GAAA54B,GAIA0tB,GAAAe,YAAAzuB,IAEA,IAAA0tB,GAAAQ,OAAAluB,EAAA,iBAKAA,EAAAy1B,QAAA1nB,MAAA/N,EAAAmN,KAGA,IAAAiuB,EAAAp7B,EAAAm7B,2BAGA/yB,GAAA9J,KAAA0B,EAAAmN,KAAAC,SAAA,SAAAR,EAAAR,GACApM,EAAAqN,eAAAjB,GAAA4N,WAAAvL,yBACGzO,GAEHA,EAAAy7B,eAGAz7B,EAAAZ,QAAAmL,WAAAvK,EAAAZ,QAAAmL,UAAAC,UACApC,GAAA9J,KAAA88B,EAAA,SAAAphB,GACAA,EAAApM,UAIA5N,EAAA07B,iBAIA17B,EAAAy1B,QAAAhtB,aAIAzI,EAAA27B,WAAA,GAGAjO,GAAAQ,OAAAluB,EAAA,eAEAA,EAAAw5B,gBACAx5B,EAAA47B,iBAAA,CACApxB,SAAA+f,EAAA/f,SACAlC,OAAAiiB,EAAAjiB,OACAyC,KAAAwf,EAAAxf,MAGA/K,EAAAgK,OAAAugB,KASAkR,aAAA,YAGA,IAAA/N,GAAAQ,OAFA3oC,KAEA,kBAIAy/B,GAAAnX,OAAAtoB,UAAAme,MAAAne,KAAAoe,QASA+pB,GAAAQ,OAfA3oC,KAeA,oBACAmoC,GAAAQ,OAhBA3oC,KAgBA,iBAQAm2C,eAAA,WAGA,QAAAhO,GAAAQ,OAFA3oC,KAEA,yBAIA,QAAA4E,EAAA,EAAA2U,EANAvZ,KAMA4nB,KAAAC,SAAAnX,OAAiD9L,EAAA2U,IAAU3U,EAN3D5E,KAOAs2C,cAAA1xC,GAGAujC,GAAAQ,OAVA3oC,KAUA,yBAQAs2C,cAAA,SAAA7+B,GACA,IACA0P,EADAnnB,KACA8nB,eAAArQ,GACA9W,EAAA,CACAwmB,OACA1P,UAGA,IAAA0wB,GAAAQ,OAPA3oC,KAOA,uBAAAW,MAIAwmB,EAAAsN,WAAAnM,SAEA6f,GAAAQ,OAbA3oC,KAaA,sBAAAW,MAGA8jB,OAAA,SAAAugB,GACA,IAAAvqB,EAAAza,KAEAglC,GAAA,iBAAAA,IAEAA,EAAA,CACA/f,SAAA+f,EACAxf,KAAApV,UAAA,KAIA,IAAAmmC,EAAA97B,EAAAZ,QAAAmL,UACAC,EAAAguB,GAAAjO,EAAA/f,SAAAsxB,KAAAtxB,UACAO,EAAAwf,EAAAxf,KAEA,QAAA2iB,GAAAQ,OAAAluB,EAAA,iBAIA,IAAA0K,EAAA,SAAAH,GACAmjB,GAAAQ,OAAAluB,EAAA,eACAoI,GAAAlK,SAAA49B,KAAApxB,WAAA,CAAAH,GAAAvK,IAGA,GAAA87B,GAAAtxB,EAAA,CACA,IAAAD,EAAA,IAAAJ,GAAA,CACAJ,SAAAS,EAAA,MACAlC,OAAAiiB,EAAAjiB,QAAAwzB,EAAAxzB,OAEA0B,OAAA,SAAAzG,EAAAw4B,GACA,IACAjyB,EAAAiyB,EAAAjyB,YACAkyB,EAAAlyB,EAAAiyB,EAAAhyB,SAEAxG,EAAA6L,MAAA6sB,EAJA7zB,GAAAE,OAAAzH,QAAAk7B,EAAAzzB,SAIA0zB,KAAAlyB,IAGAG,oBAAA6xB,EAAArxB,WACAP,oBAAAQ,IAGAC,GAAAG,aAAA9K,EAAAuK,EAAAC,EAAAO,QAEA/K,EAAAoP,OAGA1E,EAAA,IAAAP,GAAA,CAAkCJ,SAAA,EAAAxG,MAAAvD,KAGlC,OAAAA,IAGAoP,KAAA,SAAAF,GACA,IAAAlP,EAAAza,KAEAya,EAAAsD,QAEA8E,GAAA5K,cAAA0R,KACAA,EAAA,GAGAlP,EAAA+I,WAAAmG,GAEAlP,EAAA0D,OAAA,GAAA1D,EAAA2D,QAAA,IAIA,IAAA+pB,GAAAQ,OAAAluB,EAAA,cAAAkP,MAKA9G,GAAA9J,KAAA0B,EAAA6kB,MAAA,SAAAC,GACAA,EAAA1V,KAAApP,EAAA2U,YACG3U,GAEHA,EAAAk8B,aAAAhtB,GACAlP,EAAAm8B,aAAAjtB,GAEAwe,GAAAQ,OAAAluB,EAAA,aAAAkP,MAMAnG,WAAA,SAAAmG,GAGA,IAFA,IAEA/kB,EAAA,EAAA2U,GAFAvZ,KAEA4nB,KAAAC,UAAA,IAAAnX,OAAyD9L,EAAA2U,IAAU3U,EAFnE5E,KAGAuzB,iBAAA3uB,IAHA5E,KAIA8nB,eAAAljB,GAAA6vB,WAAAjR,WAAAmG,GAJA3pB,KAQAkwC,QAAA1sB,WAAAmG,IAQAgtB,aAAA,SAAAhtB,GACA,IAAAlP,EAAAza,KAEA,QAAAmoC,GAAAQ,OAAAluB,EAAA,sBAAAkP,IAAA,CAKA,QAAA/kB,GAAA6V,EAAAmN,KAAAC,UAAA,IAAAnX,OAAA,EAAmD9L,GAAA,IAAQA,EAC3D6V,EAAA8Y,iBAAA3uB,IACA6V,EAAAo8B,YAAAjyC,EAAA+kB,GAIAwe,GAAAQ,OAAAluB,EAAA,qBAAAkP,MAQAktB,YAAA,SAAAp/B,EAAAkS,GACA,IACAxC,EADAnnB,KACA8nB,eAAArQ,GACA9W,EAAA,CACAwmB,OACA1P,QACAkS,gBAGA,IAAAwe,GAAAQ,OARA3oC,KAQA,qBAAAW,MAIAwmB,EAAAsN,WAAA5K,KAAAF,GAEAwe,GAAAQ,OAdA3oC,KAcA,oBAAAW,MAQAi2C,aAAA,SAAAjtB,GACA,IACAumB,EADAlwC,KACAkwC,QACAvvC,EAAA,CACAuvC,UACAvmB,gBAGA,IAAAwe,GAAAQ,OAPA3oC,KAOA,qBAAAW,MAIAuvC,EAAArmB,OAEAse,GAAAQ,OAbA3oC,KAaA,oBAAAW,MAOAm2C,kBAAA,SAAAn3C,GACA,OAAA++B,GAAAC,MAAAC,OAAA5+B,KAAAL,IAGAo3C,mBAAA,SAAAp3C,GACA,OAAA++B,GAAAC,MAAArM,MAAAtyB,KAAAL,EAAA,CAAgDi+B,WAAA,KAGhDoZ,mBAAA,SAAAr3C,GACA,OAAA++B,GAAAC,MAAA,UAAA3+B,KAAAL,EAAA,CAAoDi+B,WAAA,KAGpDoV,0BAAA,SAAArzC,EAAA4xB,EAAA1X,GACA,IAAAyP,EAAAoV,GAAAC,MAAApN,GACA,yBAAAjI,EACAA,EAAAtpB,KAAAL,EAAAka,GAGA,IAGAo9B,kBAAA,SAAAt3C,GACA,OAAA++B,GAAAC,MAAAtX,QAAArnB,KAAAL,EAAA,CAAkDi+B,WAAA,KAGlD9V,eAAA,SAAAjB,GACA,IACAQ,EADArnB,KACA4nB,KAAAC,SAAAhB,GACAQ,EAAA6vB,QACA7vB,EAAA6vB,MAAA,IAGA,IAAA/vB,EAAAE,EAAA6vB,MANAl3C,KAMA4X,IAaA,OAZAuP,IACAA,EAAAE,EAAA6vB,MARAl3C,KAQA4X,IAAA,CACAhB,KAAA,KACAgR,KAAA,GACAP,QAAA,KACAoN,WAAA,KACAtR,OAAA,KACAoE,QAAA,KACAG,QAAA,OAIAP,GAGA8U,uBAAA,WAEA,IADA,IAAArR,EAAA,EACAhmB,EAAA,EAAA2U,EAAAvZ,KAAA4nB,KAAAC,SAAAnX,OAAmD9L,EAAA2U,IAAU3U,EAC7D5E,KAAAuzB,iBAAA3uB,IACAgmB,IAGA,OAAAA,GAGA2I,iBAAA,SAAA1M,GACA,IAAAM,EAAAnnB,KAAA8nB,eAAAjB,GAIA,wBAAAM,EAAAhE,QAAAgE,EAAAhE,QAAAnjB,KAAA4nB,KAAAC,SAAAhB,GAAA1D,QAGAg0B,eAAA,WACA,OAAAn3C,KAAA6Z,QAAA2c,eAAAx2B,OAMA81C,mBAAA,SAAAjvB,GACA,IAAAjP,EAAA5X,KAAA4X,GACAyP,EAAArnB,KAAA4nB,KAAAC,SAAAhB,GACAM,EAAAE,EAAA6vB,OAAA7vB,EAAA6vB,MAAAt/B,GAEAuP,IACAA,EAAAsN,WAAAlM,iBACAlB,EAAA6vB,MAAAt/B,KAIA2Q,QAAA,WACA,IAEA3jB,EAAA2U,EAFAkB,EAAAza,KACA8iB,EAAArI,EAAAqI,OAMA,IAHArI,EAAA+5B,OAGA5vC,EAAA,EAAA2U,EAAAkB,EAAAmN,KAAAC,SAAAnX,OAA6C9L,EAAA2U,IAAU3U,EACvD6V,EAAAq7B,mBAAAlxC,GAGAke,IACArI,EAAA28B,eACAv0B,GAAAC,OAAA/E,MAAAtD,GACA8pB,GAAAoB,eAAAlrB,EAAAwD,KACAxD,EAAAqI,OAAA,KACArI,EAAAwD,IAAA,MAGAkqB,GAAAQ,OAAAluB,EAAA,kBAEA3a,GAAAo0C,UAAAz5B,EAAA7C,KAGAy/B,cAAA,WACA,OAAAr3C,KAAA8iB,OAAAw0B,UAAAx+B,MAAA9Y,KAAA8iB,OAAA1S,YAGAmkC,YAAA,WACA,IAAA95B,EAAAza,KACAya,EAAAy1B,QAAA,IAAA9B,GAAA,CACA1lB,OAAAjO,EACA88B,eAAA98B,EACA+N,MAAA/N,EAAAmN,KACAuO,SAAA1b,EAAAZ,QAAA2b,UACG/a,IAMH45B,WAAA,WACA,IAAA55B,EAAAza,KACA2mB,EAAAlM,EAAA+8B,WAAA,GACAhxB,EAAA,WACA/L,EAAAg9B,aAAA3+B,MAAA2B,EAAArK,YAGAyS,GAAA9J,KAAA0B,EAAAZ,QAAA65B,OAAA,SAAA98B,GACA2tB,GAAAnB,iBAAA3oB,EAAA7D,EAAA4P,GACAG,EAAA/P,GAAA4P,IAKA/L,EAAAZ,QAAAg6B,aACArtB,EAAA,WACA/L,EAAA65B,UAGA/P,GAAAnB,iBAAA3oB,EAAA,SAAA+L,GACAG,EAAA2tB,OAAA9tB,IAOA4wB,aAAA,WACA,IAAA38B,EAAAza,KACA2mB,EAAAlM,EAAA+8B,WACA7wB,WAIAlM,EAAA+8B,WACA30B,GAAA9J,KAAA4N,EAAA,SAAAH,EAAA5P,GACA2tB,GAAAd,oBAAAhpB,EAAA7D,EAAA4P,OAIAkxB,iBAAA,SAAA9tB,EAAA2H,EAAAuY,GACA,IACA9gB,EAAApkB,EAAA2U,EADA+P,EAAAwgB,EAAA,mCAGA,IAAAllC,EAAA,EAAA2U,EAAAqQ,EAAAlZ,OAAqC9L,EAAA2U,IAAU3U,GAC/CokB,EAAAY,EAAAhlB,KAEA5E,KAAA8nB,eAAAkB,EAAAL,eAAA8L,WAAAnL,GAAAN,IAQAyuB,aAAA,SAAA93C,GACA,IAAA8a,EAAAza,KACAkwC,EAAAz1B,EAAAy1B,QAEA,QAAA/H,GAAAQ,OAAAluB,EAAA,eAAA9a,IAAA,CAKA8a,EAAAw5B,iBAAA,EACAx5B,EAAA47B,iBAAA,KAEA,IAAArH,EAAAv0B,EAAAs4B,YAAApzC,GAKAuwC,IACAlB,EAAAkB,EAAA3sB,OACA2sB,EAAA6C,YAAApzC,GACAqvC,EAAAkB,EAAA6C,YAAApzC,IAGAwoC,GAAAQ,OAAAluB,EAAA,cAAA9a,IAEA,IAAAg4C,EAAAl9B,EAAA47B,iBAmBA,OAlBAsB,EAEAl9B,EAAAgK,OAAAkzB,GACG3I,IAAAv0B,EAAAmL,YAEHnL,EAAA+5B,OAIA/5B,EAAAgK,OAAA,CACAQ,SAAAxK,EAAAZ,QAAAyX,MAAAsiB,kBACApuB,MAAA,KAIA/K,EAAAw5B,iBAAA,EACAx5B,EAAA47B,iBAAA,KAEA57B,IASAs4B,YAAA,SAAApzC,GACA,IAGAqvC,EAHAv0B,EAAAza,KACA6Z,EAAAY,EAAAZ,SAAA,GACA+9B,EAAA/9B,EAAAyX,MAsCA,OAnCA7W,EAAA27B,WAAA37B,EAAA27B,YAAA,GAIA37B,EAAA20B,OADA,aAAAzvC,EAAAiX,KACA,GAEA6D,EAAAu4B,0BAAArzC,EAAAi4C,EAAArmB,KAAAqmB,GAKA/0B,GAAAlK,SAAAkB,EAAA85B,SAAA95B,EAAAyX,MAAAqiB,QAAA,CAAAh0C,EAAA29B,OAAA7iB,EAAA20B,QAAA30B,GAEA,YAAA9a,EAAAiX,MAAA,UAAAjX,EAAAiX,MACAiD,EAAAkd,SAEAld,EAAAkd,QAAA5mB,KAAAsK,EAAA9a,EAAA29B,OAAA7iB,EAAA20B,QAKA30B,EAAA27B,WAAA1lC,QACA+J,EAAAi9B,iBAAAj9B,EAAA27B,WAAAwB,EAAArmB,MAAA,GAIA9W,EAAA20B,OAAA1+B,QAAAknC,EAAArmB,MACA9W,EAAAi9B,iBAAAj9B,EAAA20B,OAAAwI,EAAArmB,MAAA,GAGAyd,GAAAnsB,GAAAzJ,YAAAqB,EAAA20B,OAAA30B,EAAA27B,YAGA37B,EAAA27B,WAAA37B,EAAA20B,OAEAJ,KASAlvC,GAAAo0C,UAAA,GAEA,IAAA2D,GAAA/3C,GAipBA,SAAAg4C,KACA,UAAA9B,MACA,6GAsBA,SAAA+B,GAAAl+B,GACA7Z,KAAA6Z,WAAA,GA/pBA/Z,GAAAk4C,WAAAl4C,GASAA,GAAAm4C,MAAA,GASAp1B,GAAAq1B,YAAA9E,GASAvwB,GAAAs1B,WAAAjF,GAuoBArwB,GAAAxI,OAAA09B,GAAA9nC,UAAA,CAMAmoC,QAAAN,GASAO,MAAAP,GASAQ,OAAAR,GAUAtQ,IAAAsQ,GAUAS,KAAAT,GAUAU,QAAAV,GAQAW,MAAAX,GAWAY,QAAA,SAAA/kC,GACA,OAAAA,KAIAokC,GAAAY,SAAA,SAAAC,GACA/1B,GAAAxI,OAAA09B,GAAA9nC,UAAA2oC,IAGA,IAEAC,GAAA,CACAC,MAHAf,IAUAgB,GAAA,CAKAC,WAAA,CAOAjoC,OAAA,SAAA4C,GACA,OAAAkP,GAAA3K,QAAAvE,KAAA,GAAAA,GAWA4H,OAAA,SAAA09B,EAAAxhC,EAAAwc,GAEA,IAAAnwB,EAAAmwB,EAAAvjB,OAAA,EAAAujB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAGArwB,KAAAgrB,IAAA9qB,GAAA,GACAm1C,IAAAr1C,KAAAkB,MAAAm0C,KAEAn1C,EAAAm1C,EAAAr1C,KAAAkB,MAAAm0C,IAIA,IAAAC,EAAAr2B,GAAAs2B,MAAAv1C,KAAAgrB,IAAA9qB,IACAs1C,EAAA,GAEA,OAAAH,EAEA,GADAr1C,KAAAC,IAAAD,KAAAgrB,IAAAqF,EAAA,IAAArwB,KAAAgrB,IAAAqF,IAAAvjB,OAAA,KACA,MACA,IAAA2oC,EAAAx2B,GAAAs2B,MAAAv1C,KAAAgrB,IAAAqqB,IACAG,EAAAH,EAAAK,cAAA11C,KAAAkB,MAAAu0C,GAAAz1C,KAAAkB,MAAAo0C,QACK,CACL,IAAAK,GAAA,EAAA31C,KAAAkB,MAAAo0C,GACAK,EAAA31C,KAAAC,IAAAD,KAAAD,IAAA41C,EAAA,OACAH,EAAAH,EAAAO,QAAAD,QAGAH,EAAA,IAGA,OAAAA,GAGAK,YAAA,SAAAR,EAAAxhC,EAAAwc,GACA,IAAAylB,EAAAT,EAAAr1C,KAAAO,IAAA,GAAAP,KAAAkB,MAAA+d,GAAAs2B,MAAAF,KAEA,WAAAA,EACA,IACI,IAAAS,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAjiC,OAAAwc,EAAAvjB,OAAA,EACJuoC,EAAAK,gBAEA,MAKAK,GAAA92B,GAAArK,eACAE,GAAAmK,GAAAnK,sBA2DA,SAAAkhC,GAAA3lB,GACA,IACArvB,EAAA2U,EADAgZ,EAAA,GAGA,IAAA3tB,EAAA,EAAA2U,EAAA0a,EAAAvjB,OAAiC9L,EAAA2U,IAAU3U,EAC3C2tB,EAAA1M,KAAAoO,EAAArvB,GAAA0tB,OAGA,OAAAC,EAoBA,SAAAsnB,GAAAj3B,EAAAk3B,EAAA13B,GACA,OAAAS,GAAA3K,QAAA4hC,GACAj3B,GAAAk3B,YAAAn3B,EAAAR,EAAA03B,GACAl3B,EAAA6tB,YAAAqJ,GAAA37B,MAxFAyD,GAAAT,KAAA,SACAka,SAAA,EACA9F,SAAA,OACA7D,QAAA,EAGAC,UAAA,CACA0J,SAAA,EACA2e,MAAA,qBACA/sB,UAAA,EACAgtB,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,mBAAA,GACAC,yBAAA,EACA5oB,iBAAA,EACArE,WAAA,GACAC,iBAAA,GAIAitB,WAAA,CAEApf,SAAA,EAGAqf,YAAA,GAGAvrB,QAAA,CACA3Q,IAAA,EACAE,OAAA,IAKAuV,MAAA,CACAuH,aAAA,EACAmf,YAAA,EACAC,YAAA,GACAC,QAAA,EACA1rB,QAAA,EACAlW,SAAA,EACAoiB,SAAA,EACAyf,UAAA,EACAC,gBAAA,EACAC,YAAA,EAEAriC,SAAAogC,GAAAC,WAAAjoC,OACAkqC,MAAA,GACAC,MAAA,MAsCA,IAAAC,GAAA92B,GAAAhK,OAAA,CAOA+mB,WAAA,WAEA,OACA7iB,KAFAve,KAEAo7C,aAAA,EACA58B,IAHAxe,KAGAq7C,YAAA,EACA58B,MAJAze,KAIAs7C,cAAA,EACA58B,OALA1e,KAKAu7C,eAAA,IAQArnB,SAAA,WACA,OAAAl0B,KAAAw7C,QAOA9F,kBAAA,WACA,IAAAzhB,EAAAj0B,KAAA6Z,QAAAoa,MAWA,QAAAtkB,KAVA,IAAAskB,EAAAgnB,QACAhnB,EAAAgnB,MAAA,CACA5f,SAAA,KAGA,IAAApH,EAAAinB,QACAjnB,EAAAinB,MAAA,CACA7f,SAAA,IAGApH,EACA,UAAAtkB,GAAA,UAAAA,SACA,IAAAskB,EAAAgnB,MAAAtrC,KACAskB,EAAAgnB,MAAAtrC,GAAAskB,EAAAtkB,SAEA,IAAAskB,EAAAinB,MAAAvrC,KACAskB,EAAAinB,MAAAvrC,GAAAskB,EAAAtkB,MAKA8rC,aAAA,WACA54B,GAAAlK,SAAA3Y,KAAA6Z,QAAA4hC,aAAA,CAAAz7C,QAGAsoB,OAAA,SAAAozB,EAAAC,EAAAC,GACA,IACAh3C,EAAA2U,EAAAgZ,EAAAD,EAAA2B,EAAA6lB,EADAr/B,EAAAza,KA4DA,IAxDAya,EAAAghC,eAGAhhC,EAAAihC,WACAjhC,EAAAkhC,YACAlhC,EAAAmhC,QAAA/4B,GAAAxI,OAAA,CACAkE,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,GACGk9B,GAEHnhC,EAAAohC,eAAA,EACAphC,EAAAqhC,kBAAA,EACArhC,EAAAshC,iBAAAthC,EAAAshC,kBAAA,GAGAthC,EAAAuhC,sBACAvhC,EAAAwhC,gBACAxhC,EAAAyhC,qBAGAzhC,EAAA0hC,mBACA1hC,EAAA2hC,sBACA3hC,EAAA4hC,kBASA5hC,EAAA6hC,mBAIAroB,EAAAxZ,EAAA8hC,cAAA,GAGAtoB,EAAAxZ,EAAA+hC,gBAAAvoB,MAEAxZ,EAAAgiC,8BAKAlqB,EAAA9X,EAAAiiC,qBAAAzoB,IAAAxZ,EAAAwZ,MAEAxZ,EAAAkiC,6BAEAliC,EAAAwZ,MAAA1B,EAKA3tB,EAAA,EAAA2U,EAAAgZ,EAAA7hB,OAAmC9L,EAAA2U,IAAU3U,EAC7C0tB,EAAAC,EAAA3tB,IACAk1C,EAAA7lB,EAAArvB,IAOAk1C,EAAAxnB,QALA2B,EAAApO,KAAAi0B,EAAA,CACAxnB,QACA4oB,OAAA,IAoBA,OAbAzgC,EAAA+gC,OAAAvnB,EAGAxZ,EAAAmiC,8BACAniC,EAAAoiC,wBACApiC,EAAAqiC,6BAEAriC,EAAAsiC,YACAtiC,EAAAuiC,MACAviC,EAAAwiC,WAEAxiC,EAAAyiC,cAEAziC,EAAAmd,SAGAslB,YAAA,WACAr6B,GAAAlK,SAAA3Y,KAAA6Z,QAAAqjC,YAAA,CAAAl9C,QAKAg8C,oBAAA,WACAn5B,GAAAlK,SAAA3Y,KAAA6Z,QAAAmiC,oBAAA,CAAAh8C,QAEAi8C,cAAA,WACA,IAAAxhC,EAAAza,KAEAya,EAAAkY,gBAEAlY,EAAA0D,MAAA1D,EAAAihC,SACAjhC,EAAA8D,KAAA,EACA9D,EAAAgE,MAAAhE,EAAA0D,QAEA1D,EAAA2D,OAAA3D,EAAAkhC,UAGAlhC,EAAA+D,IAAA,EACA/D,EAAAiE,OAAAjE,EAAA2D,QAIA3D,EAAA2gC,YAAA,EACA3gC,EAAA4gC,WAAA,EACA5gC,EAAA6gC,aAAA,EACA7gC,EAAA8gC,cAAA,GAEAW,mBAAA,WACAr5B,GAAAlK,SAAA3Y,KAAA6Z,QAAAqiC,mBAAA,CAAAl8C,QAIAm8C,iBAAA,WACAt5B,GAAAlK,SAAA3Y,KAAA6Z,QAAAsiC,iBAAA,CAAAn8C,QAEAo8C,oBAAAv5B,GAAA9K,KACAskC,gBAAA,WACAx5B,GAAAlK,SAAA3Y,KAAA6Z,QAAAwiC,gBAAA,CAAAr8C,QAIAs8C,iBAAA,WACAz5B,GAAAlK,SAAA3Y,KAAA6Z,QAAAyiC,iBAAA,CAAAt8C,QAEAu8C,WAAA15B,GAAA9K,KACAykC,gBAAA,SAAAvoB,GACA,IAAAxZ,EAAAza,KAEA,OAAA6iB,GAAA3K,QAAA+b,MAAAvjB,OACAmS,GAAAlK,SAAA8B,EAAAZ,QAAA2iC,gBAAA,CAAA/hC,EAAAwZ,KAGAxZ,EAAAwZ,MAAApR,GAAAlK,SAAA8B,EAAAZ,QAAA2iC,gBAAA,CAAA/hC,IAAAwZ,SAAAxZ,EAAAwZ,MACAA,IAGAwoB,4BAAA,WACA55B,GAAAlK,SAAA3Y,KAAA6Z,QAAA4iC,4BAAA,CAAAz8C,QAEA08C,qBAAA,WACA,IAEAS,EAFAn9C,KAEA6Z,QAAAoa,MAFAj0B,KAGAi0B,MAHAj0B,KAGAi0B,MAAAva,IAAAyjC,EAAAC,cAAAD,EAAAxkC,SAAA3Y,OAEA28C,2BAAA,WACA95B,GAAAlK,SAAA3Y,KAAA6Z,QAAA8iC,2BAAA,CAAA38C,QAKA48C,4BAAA,WACA/5B,GAAAlK,SAAA3Y,KAAA6Z,QAAA+iC,4BAAA,CAAA58C,QAEA68C,sBAAA,WACA,IAAApiC,EAAAza,KACA4iB,EAAAnI,EAAAwD,IACAk/B,EAAA1iC,EAAAZ,QAAAoa,MACA1B,EAAAqnB,GAAAn/B,EAAA+gC,QAIA6B,EAAAx6B,GAAAhJ,QAAAoI,WAAAk7B,GACAv6B,EAAAR,KAAAi7B,EAAA1rC,OAEA,IAAA2rC,EAAAH,EAAAxC,aAAA,EAEA,GAAApoB,EAAA7hB,QAAA+J,EAAAZ,QAAAwhB,SAAA5gB,EAAAkY,eASA,IARA,IAEA4qB,EAFAC,EAAA36B,GAAAk3B,YAAAn3B,EAAAy6B,EAAA1rC,OAAA4gB,EAAA9X,EAAAshC,kBACA0B,EAAAD,EAIAE,EAAAjjC,EAAA0Z,gBAAA,GAAA1Z,EAAA0Z,gBAAA,KAGAspB,EAAAC,GAAAJ,EAAAH,EAAAvC,aAAA,CACA,IAAA+C,EAAA96B,GAAA+6B,UAAAN,GAIA,GAHAC,EAAA35C,KAAAuC,IAAAw3C,GACA/5C,KAAAwC,IAAAu3C,GAEAH,EAAA/iC,EAAAkhC,UAAA,CAEA2B,IACA,MAGAA,IACAG,EAAAF,EAAAC,EAIA/iC,EAAA6iC,iBAEAR,2BAAA,WACAj6B,GAAAlK,SAAA3Y,KAAA6Z,QAAAijC,2BAAA,CAAA98C,QAKA+8C,UAAA,WACAl6B,GAAAlK,SAAA3Y,KAAA6Z,QAAAkjC,UAAA,CAAA/8C,QAEAg9C,IAAA,WACA,IAAAviC,EAAAza,KAEA43B,EAAAnd,EAAAmd,QAAA,CACAzZ,MAAA,EACAC,OAAA,GAGAmU,EAAAqnB,GAAAn/B,EAAA+gC,QAEA/jB,EAAAhd,EAAAZ,QACAsjC,EAAA1lB,EAAAxD,MACA4pB,EAAApmB,EAAAgjB,WACAqD,EAAArmB,EAAA9F,UACA0J,EAAA5gB,EAAAsjC,aACAxoB,EAAAkC,EAAAlC,SACA5C,EAAAlY,EAAAkY,eAEAqrB,EAAAn7B,GAAAhJ,QAAAoI,WACAo7B,EAAAW,EAAAb,GACA/C,EAAA3iB,EAAA9F,UAAAyoB,eAkBA,GAbAxiB,EAAAzZ,MAFAwU,EAEAlY,EAAAwjC,cAAAxjC,EAAAihC,SAAAjhC,EAAAmhC,QAAAr9B,KAAA9D,EAAAmhC,QAAAn9B,MAAAhE,EAAAihC,SAEArgB,GAAAyiB,EAAA3D,UAAAC,EAAA,EAKAxiB,EAAAxZ,OADAuU,EACA0I,GAAAyiB,EAAA3D,UAAAC,EAAA,EAEA3/B,EAAAkhC,UAIAkC,EAAAxiB,WAAA,CACA,IAAA6iB,EAAAF,EAAAH,GACAM,EAAAt7B,GAAAhJ,QAAAmI,UAAA67B,EAAA1uB,SACAivB,EAAAF,EAAA37B,WAAA47B,EAAA//B,OAEAuU,EACAiF,EAAAxZ,QAAAggC,EAEAxmB,EAAAzZ,OAAAigC,EAKA,GAAAjB,EAAA9hB,WAAA,CACA,IAAAgjB,EAAAx7B,GAAAk3B,YAAAt/B,EAAAwD,IAAAo/B,EAAA1rC,OAAA4gB,EAAA9X,EAAAshC,kBACAuC,EAAAz7B,GAAA07B,mBAAAhsB,GACAisB,EAAA,GAAAnB,EAAAj+B,KACAq/B,EAAAhkC,EAAAZ,QAAAoa,MAAA9E,QAMA,GAHA1U,EAAAohC,eAAAyC,EACA7jC,EAAAqhC,kBAAAuC,EAEA1rB,EAAA,CACA,IAAAgrB,EAAA96B,GAAA+6B,UAAAnjC,EAAA6iC,eACAC,EAAA35C,KAAAuC,IAAAw3C,GACAe,EAAA96C,KAAAwC,IAAAu3C,GAOA/lB,EAAAxZ,OAAAxa,KAAAD,IAAA8W,EAAAkhC,UAAA/jB,EAAAxZ,QAJAsgC,EAAAL,EACAhB,EAAA96B,WAAA+7B,EACAE,GAEAC,GAEAhkC,EAAAwD,IAAAmE,KAAAi7B,EAAA1rC,OACA,IAIAypC,EAAAE,EAJAqD,EAAA9E,GAAAp/B,EAAAwD,IAAAsU,EAAA,GAAA8qB,EAAA1rC,QACAitC,EAAA/E,GAAAp/B,EAAAwD,IAAAsU,IAAA7hB,OAAA,GAAA2sC,EAAA1rC,QACAktC,EAAApkC,EAAA0Z,gBAAA,GAAA1Z,EAAA8D,KACAugC,EAAArkC,EAAAgE,MAAAhE,EAAA0Z,gBAAA5B,EAAA7hB,OAAA,GAKA,IAAA+J,EAAA6iC,eACAlC,EAAA,WAAA7lB,EAAAgoB,EAAAoB,EAAApB,EAAAiB,EACAlD,EAAA,WAAA/lB,EAAAgoB,EAAAiB,EAAAjB,EAAAqB,IAEAxD,EAAAuD,EAAA,EACArD,EAAAsD,EAAA,GAEAnkC,EAAA2gC,YAAAx3C,KAAAC,IAAAu3C,EAAAyD,EAAA,KACApkC,EAAA6gC,aAAA13C,KAAAC,IAAAy3C,EAAAwD,EAAA,UAIA3B,EAAAtC,OACAwD,EAAA,EAIAA,GAAAI,EAAAD,EAGA5mB,EAAAzZ,MAAAva,KAAAD,IAAA8W,EAAAihC,SAAA9jB,EAAAzZ,MAAAkgC,GAEA5jC,EAAA4gC,WAAAgC,EAAAj+B,KAAA,EACA3E,EAAA8gC,cAAA8B,EAAAj+B,KAAA,EAIA3E,EAAAskC,gBAEAtkC,EAAA0D,MAAAyZ,EAAAzZ,MACA1D,EAAA2D,OAAAwZ,EAAAxZ,QAOA2gC,cAAA,WACA,IAAAtkC,EAAAza,KACAya,EAAAmhC,UACAnhC,EAAA2gC,YAAAx3C,KAAAC,IAAA4W,EAAA2gC,YAAA3gC,EAAAmhC,QAAAr9B,KAAA,GACA9D,EAAA4gC,WAAAz3C,KAAAC,IAAA4W,EAAA4gC,WAAA5gC,EAAAmhC,QAAAp9B,IAAA,GACA/D,EAAA6gC,aAAA13C,KAAAC,IAAA4W,EAAA6gC,aAAA7gC,EAAAmhC,QAAAn9B,MAAA,GACAhE,EAAA8gC,cAAA33C,KAAAC,IAAA4W,EAAA8gC,cAAA9gC,EAAAmhC,QAAAl9B,OAAA,KAIAu+B,SAAA,WACAp6B,GAAAlK,SAAA3Y,KAAA6Z,QAAAojC,SAAA,CAAAj9C,QAIA2yB,aAAA,WACA,cAAA3yB,KAAA6Z,QAAA0b,UAAA,WAAAv1B,KAAA6Z,QAAA0b,UAEA0oB,YAAA,WACA,OAAAj+C,KAAA6Z,QAAA,WAIA0a,cAAA,SAAAyqB,GAEA,GAAAn8B,GAAA5K,cAAA+mC,GACA,OAAA9oB,IAGA,qBAAA8oB,gBAAAzmC,UAAAD,SAAA0mC,GACA,OAAA9oB,IAGA,GAAA8oB,EACA,GAAAh/C,KAAA2yB,gBACA,QAAAliB,IAAAuuC,EAAA36C,EACA,OAAArE,KAAAu0B,cAAAyqB,EAAA36C,QAEI,QAAAoM,IAAAuuC,EAAA16C,EACJ,OAAAtE,KAAAu0B,cAAAyqB,EAAA16C,GAKA,OAAA06C,GAQAlP,iBAAAjtB,GAAA9K,KASA8b,iBAAAhR,GAAA9K,KAOAknC,iBAAAp8B,GAAA9K,KAMAoc,gBAAA,SAAA1c,GACA,IAAAgD,EAAAza,KACA0xB,EAAAjX,EAAAZ,QAAA6X,OACA,GAAAjX,EAAAkY,eAAA,CACA,IACA+qB,GADAjjC,EAAA0D,OAAA1D,EAAA2gC,YAAA3gC,EAAA6gC,eACA13C,KAAAC,IAAA4W,EAAA+gC,OAAA9qC,QAAAghB,EAAA,QACAwtB,EAAAxB,EAAAjmC,EAAAgD,EAAA2gC,YAQA,OANA1pB,IACAwtB,GAAAxB,EAAA,GAGAjjC,EAAA8D,KAAA2gC,GACAzkC,EAAAwjC,cAAAxjC,EAAAmhC,QAAAr9B,KAAA,GAIA,OAAA9D,EAAA+D,IAAA/G,IADAgD,EAAA2D,QAAA3D,EAAA4gC,WAAA5gC,EAAA8gC,iBACA9gC,EAAA+gC,OAAA9qC,OAAA,KAOAulB,mBAAA,SAAAkpB,GACA,IAAA1kC,EAAAza,KACA,OAAAya,EAAAkY,eAIAlY,EAAA8D,OAHA9D,EAAA0D,OAAA1D,EAAA2gC,YAAA3gC,EAAA6gC,eACA6D,EAAA1kC,EAAA2gC,cAGA3gC,EAAAwjC,cAAAxjC,EAAAmhC,QAAAr9B,KAAA,GAGA9D,EAAA+D,IAAA2gC,EAAA1kC,EAAA2D,QAOAsU,aAAA,WACA,OAAA1yB,KAAA6zB,iBAAA7zB,KAAAo/C,iBAGAA,aAAA,WACA,IACAz7C,EADA3D,KACA2D,IACAE,EAFA7D,KAEA6D,IAEA,OAJA7D,KAIAw7B,YAAA,EACA73B,EAAA,GAAAE,EAAA,EAAAA,EACAF,EAAA,GAAAE,EAAA,EAAAF,EACA,GAOA07C,UAAA,SAAAprB,GACA,IAiBArvB,EAAAk1C,EAjBAr/B,EAAAza,KACA2yB,EAAAlY,EAAAkY,eAEA2sB,EAAArrB,EAAAvjB,OACA6uC,GAAA,EACAC,EAHA/kC,EAAAZ,QAAAoa,MAAAgnB,MAGAwE,cAIAC,EAAAjlC,EAAAklC,aAAAL,EAAA,GAGAM,EAAAjtB,EACAlY,EAAA0D,OAAA1D,EAAA2gC,YAAA3gC,EAAA6gC,cACA7gC,EAAA2D,QAAA3D,EAAA4gC,WAAA5gC,EAAAolC,eAEAhpC,EAAA,GAaA,IAVA6oC,EAAAE,IACAL,EAAA,EAAA37C,KAAAkB,MAAA46C,EAAAE,IAKAN,EAAAE,IACAD,EAAA37C,KAAAC,IAAA07C,EAAA,EAAA37C,KAAAkB,MAAAw6C,EAAAE,KAGA56C,EAAA,EAAaA,EAAA06C,EAAe16C,IAC5Bk1C,EAAA7lB,EAAArvB,GAEA26C,EAAA,GAAA36C,EAAA26C,EAAA,UAEAzF,EAAAxnB,MAEAzb,EAAAgP,KAAAi0B,GAEA,OAAAjjC,GAMA8oC,UAAA,WACA,IAAAllC,EAAAza,KACA2yB,EAAAlY,EAAAkY,eACAmtB,EAAArlC,EAAAZ,QAAAoa,MAAAgnB,MAGA8E,EAAAl9B,GAAA+6B,UAAAnjC,EAAA6iC,eACAn3C,EAAAvC,KAAAgrB,IAAAhrB,KAAAuC,IAAA45C,IACA35C,EAAAxC,KAAAgrB,IAAAhrB,KAAAwC,IAAA25C,IAEA5wB,EAAA2wB,EAAA/E,iBAAA,EACAnnC,EAAA6G,EAAAqhC,kBAAA3sB,GAAA,EAEAkuB,EAAAx6B,GAAAhJ,QAAAoI,WAAA69B,GACAv8C,EAAAkX,EAAAohC,eAAAwB,EAAA96B,WAAA4M,GAAA,EAGA,OAAAwD,EACApvB,EAAA4C,EAAAyN,EAAAxN,EAAAwN,EAAAzN,EAAA5C,EAAA6C,EACA7C,EAAA6C,EAAAwN,EAAAzN,EAAA5C,EAAA4C,EAAAyN,EAAAxN,GAMA23C,WAAA,WACA,IAGAn5C,EAAA2U,EAAA4N,EAFAnJ,EADAhe,KACAge,MACAqd,EAFAr7B,KAEA6Z,QAAAwhB,QAGA,YAAAA,EACA,QAAAA,EAIA,IAAAz2B,EAAA,EAAA2U,EAAAyE,EAAA4J,KAAAC,SAAAnX,OAAgD9L,EAAA2U,IAAU3U,EAC1D,GAAAoZ,EAAAuV,iBAAA3uB,MACAuiB,EAAAnJ,EAAA8J,eAAAljB,IACA2iB,UAbAvnB,KAaA4X,IAAAuP,EAAAO,UAbA1nB,KAaA4X,IACA,SAKA,UAOAiS,KAAA,SAAAuF,GACA,IAAA3U,EAAAza,KACA6Z,EAAAY,EAAAZ,QAEA,GAAAY,EAAAsjC,aAAA,CAIA,IAmCAiC,EAAAC,EAAAC,EAnCAliC,EAAAvD,EAAAuD,MACA4E,EAAAnI,EAAAwD,IAEAqD,EADAM,GAAAtiB,OACAgiB,iBACAw+B,EAAAjmC,EAAAoa,MAAAgnB,MACAkF,EAAAtmC,EAAAoa,MAAAinB,OAAA4E,EACAnuB,EAAA9X,EAAA8X,UACA8oB,EAAA5gC,EAAA4gC,WACAllB,EAAA1b,EAAA0b,SAEA6qB,EAAA,IAAA3lC,EAAA6iC,cACA+C,EAAAP,EAAAjF,OACAloB,EAAAlY,EAAAkY,eAEAqrB,EAAAn7B,GAAAhJ,QAAAoI,WACAgS,EAAA6rB,EAAAzkB,SAAAykB,EAAAhF,SAAArgC,EAAA4kC,UAAA5kC,EAAAyZ,YAAAzZ,EAAAyZ,WACAosB,EAAA3G,GAAAmG,EAAAS,UAAAj/B,GACA+7B,EAAAW,EAAA8B,GACAv9B,EAAA86B,EAAA96B,WACAi+B,EAAA7G,GAAAwG,EAAAI,UAAAj/B,GACAm/B,EAAAzC,EAAAmC,GACA1B,EAAAqB,EAAA3wB,QACA6rB,EAAA8E,EAAA9E,YAEA0F,EAAA/uB,EAAAwoB,UAAAxoB,EAAAyoB,eAAA,EAEAuG,EAAAhH,GAAAc,EAAA8F,UAAAj/B,GACA48B,EAAAF,EAAAvD,GACA0D,EAAAt7B,GAAAhJ,QAAAmI,UAAAy4B,EAAAtrB,SACAyxB,EAAA/9B,GAAA+6B,UAAAnjC,EAAA6iC,eAEAuD,EAAA,GAEAC,EAAAnvB,EAAAsoB,WAAAvhC,GAAAiZ,EAAA1E,UAAA,OACA8zB,EAAAl+B,GAAAm+B,YAkLA,GA/KA,QAAAzrB,GACAyqB,EAAAe,EAAA/iC,EAAAvD,EAAAiE,OAAAoiC,GACAb,EAAAxlC,EAAAiE,OAAAgiC,EACAR,EAAAF,EAAAc,EAAA,GACG,WAAAvrB,GACHyqB,EAAAe,EAAA/iC,EAAAvD,EAAA+D,IAAAsiC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAzlC,EAAA+D,IAAAkiC,GACG,SAAAnrB,GACHyqB,EAAAe,EAAA/iC,EAAAvD,EAAAgE,MAAAqiC,GACAb,EAAAxlC,EAAAgE,MAAAiiC,EACAR,EAAAF,EAAAc,EAAA,IAEAd,EAAAe,EAAA/iC,EAAAvD,EAAA8D,KAAAuiC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAzlC,EAAA8D,KAAAmiC,GAKA79B,GAAA9J,KAAAkb,EAAA,SAAA6lB,EAAAriC,GAEA,IAAAoL,GAAA5K,cAAA6hC,EAAAxnB,OAAA,CAIA,IACArF,EAAAg0B,EAAA1zB,EAAAC,EAeA0zB,EAAAC,EAAAC,EAAAC,EAAA7xB,EAAAE,EAAAD,EAAA9pB,EAAA27C,EAAAC,EAAAC,EAAAvP,EAhBA3f,EAAAwnB,EAAAxnB,MAEA7a,IAAAgD,EAAAgnC,eAAA5nC,EAAA6X,SAAAC,EAAAC,iBAEA3E,EAAA0E,EAAA0oB,cACA4G,EAAAtvB,EAAA2oB,cACA/sB,EAAAoE,EAAA4oB,oBAAA,GACA/sB,EAAAmE,EAAA6oB,0BAAA,IAEAvtB,EAAAvU,GAAAiZ,EAAA1E,UAAAxV,GACAwpC,EAAAvoC,GAAAiZ,EAAAqoB,MAAAviC,GACA8V,EAAAoE,EAAApE,YAAA,GACAC,EAAAmE,EAAAnE,kBAAA,GAKA,IAAA4d,EAAAvoB,GAAA3K,QAAAoa,KAAA5hB,OAAA,EACAgxC,EA/tBA,SAAA1uC,EAAAyE,EAAAma,GACA,IAAA8vB,EAAA1uC,EAAAmhB,gBAAA1c,GAaA,OAXAma,IACA,IAAA5e,EAAAkhB,WAAAxjB,OACAgxC,GAAA1uC,EAAA2f,eACA/uB,KAAAC,IAAA69C,EAAA1uC,EAAAuL,KAAAvL,EAAAyL,MAAAijC,GACA99C,KAAAC,IAAA69C,EAAA1uC,EAAAwL,IAAAxL,EAAA0L,OAAAgjC,GAEAA,GADG,IAAAjqC,GACHzE,EAAAmhB,gBAAA,GAAAutB,GAAA,GAEAA,EAAA1uC,EAAAmhB,gBAAA1c,EAAA,OAGAiqC,EAitBAC,CAAAlnC,EAAAhD,EAAAka,EAAAC,iBAEA,GAAAe,EAAA,CACA,IAAAivB,EAAAlB,EAAAjC,EAEAiD,EAAAjnC,EAAA8D,KA/BA,OAgCA0iC,EAAA,iBAGAC,EAAAE,EAAA5xB,EAAAC,EAAAsxB,EAAA/iC,EAAA0jC,EAAAz0B,GACAk0B,EAAAlB,EACAoB,EAAAnB,EACAoB,EAAA7mC,EAAA0Z,gBAAA1c,GAAAujC,EAEA,QAAAzlB,GACA7F,EAAAqxB,EAAA/iC,EAAAoR,EAAA5Q,IAAAsiC,KAAA,EACAn7C,EAAAypB,EAAA1Q,OACA8iC,IAAApB,EAAA,MAAAhV,GAAA7oB,EACA0vB,EAAAmO,EAAA,gBACAmB,EAAA9mC,EAAAiE,OAAAkjC,IAEAlyB,EAAAN,EAAA5Q,IACA7Y,EAAAo7C,EAAA/iC,EAAAoR,EAAA1Q,OAAAoiC,KAAA,EACAU,GAAApB,EAAA,MAAA79B,EACA0vB,EAAAmO,EAAA,iBACAmB,EAAA9mC,EAAA+D,IAAAojC,OAEI,CACJ,IAAAC,GAAAxB,EAAA,EAAAK,GAAAjC,EAEAiD,EAAAjnC,EAAA+D,IAxDA,OAyDAyiC,EAAA,iBAGAC,EAAAjB,EACAmB,EAAAlB,EACAiB,EAAAE,EAAA3xB,EAAA/pB,EAAAo7C,EAAA/iC,EAAA0jC,EAAAz0B,GACAs0B,EAAA9mC,EAAA0Z,gBAAA1c,GAAAujC,EACAwG,GAAA,EAAApW,GAAA7oB,EAAA,EAEA,SAAAgT,GACA/F,EAAAuxB,EAAA/iC,EAAAoR,EAAA7Q,KAAAuiC,KAAA,EACArxB,EAAAL,EAAA3Q,MACAwzB,EAAAoO,EAAA,eACAiB,EAAA7mC,EAAAgE,MAAAojC,IAEAryB,EAAAJ,EAAA7Q,KACAkR,EAAAsxB,EAAA/iC,EAAAoR,EAAA3Q,MAAAqiC,KAAA,EACA7O,EAAAoO,EAAA,eACAiB,EAAA7mC,EAAA8D,KAAAsjC,GAIAhB,EAAAh7B,KAAA,CACAq7B,MACAC,MACAC,MACAC,MACA7xB,KACAE,KACAD,KACA9pB,KACA27C,SACAC,SACAO,QAAA70B,EACA80B,QAAAd,EACAe,aAAAz0B,EACA00B,mBAAAz0B,EACAvO,UAAA,EAAA2hC,EACAtuB,QACA4oB,MAAApB,EAAAoB,MACAsG,aACAvP,iBAKApvB,GAAA9J,KAAA8nC,EAAA,SAAAqB,GACA,IAAAJ,EAAAI,EAAAJ,QACAC,EAAAG,EAAAH,QA2BA,GAzBApwB,EAAA0J,SAAAymB,GAAAC,IACAn/B,EAAA3C,OACA2C,EAAAqK,UAAA60B,EACAl/B,EAAAuK,YAAA40B,EACAn/B,EAAAyL,cACAzL,EAAAyL,YAAA6zB,EAAAF,cACAp/B,EAAA0L,eAAA4zB,EAAAD,oBAGAr/B,EAAArD,YAEAoS,EAAAwoB,YACAv3B,EAAAjE,OAAAujC,EAAAhB,IAAAgB,EAAAf,KACAv+B,EAAApD,OAAA0iC,EAAAd,IAAAc,EAAAb,MAGA1vB,EAAAuoB,kBACAt3B,EAAAjE,OAAAujC,EAAA1yB,GAAA0yB,EAAAxyB,IACA9M,EAAApD,OAAA0iC,EAAAzyB,GAAAyyB,EAAAv8C,KAGAid,EAAAjD,SACAiD,EAAAxC,WAGA0/B,EAAAzkB,QAAA,CAEAzY,EAAA3C,OACA2C,EAAAu/B,UAAAD,EAAAZ,OAAAY,EAAAX,QACA3+B,EAAAzM,OAAA+rC,EAAAjjC,UACA2D,EAAAR,KAAA8/B,EAAAhH,MAAAuF,EAAA9uC,OAAA0rC,EAAA1rC,OACAiR,EAAAoK,UAAAk1B,EAAAhH,MAAAsF,EAAAF,EACA19B,EAAAsvB,aAAA,SACAtvB,EAAAqvB,UAAAiQ,EAAAjQ,UAEA,IAAA3f,EAAA4vB,EAAA5vB,MACAhuB,EAAA49C,EAAAV,WACA,GAAA3+B,GAAA3K,QAAAoa,GACA,QAAA1tB,EAAA,EAAoBA,EAAA0tB,EAAA5hB,SAAkB9L,EAEtCge,EAAAuvB,SAAA,GAAA7f,EAAA1tB,GAAA,EAAAN,GACAA,GAAAie,OAGAK,EAAAuvB,SAAA7f,EAAA,EAAAhuB,GAEAse,EAAAxC,aAIAq6B,EAAApf,QAAA,CAEA,IAAA+mB,EACAC,EACApjC,EAAA,EACAqjC,EAAApE,EAAA37B,WAAA,EAEA,GAAAoQ,EACAyvB,EAAA3nC,EAAA8D,MAAA9D,EAAAgE,MAAAhE,EAAA8D,MAAA,EACA8jC,EAAA,WAAA9sB,EACA9a,EAAAiE,OAAA4jC,EAAAnE,EAAAz/B,OACAjE,EAAA+D,IAAA8jC,EAAAnE,EAAA3/B,QACI,CACJ,IAAA+jC,EAAA,SAAAhtB,EACA6sB,EAAAG,EACA9nC,EAAA8D,KAAA+jC,EAAAnE,EAAA3/B,IACA/D,EAAAgE,MAAA6jC,EAAAnE,EAAA3/B,IACA6jC,EAAA5nC,EAAA+D,KAAA/D,EAAAiE,OAAAjE,EAAA+D,KAAA,EACAS,EAAAsjC,GAAA,GAAA3+C,KAAAkC,GAAA,GAAAlC,KAAAkC,GAGA8c,EAAA3C,OACA2C,EAAAu/B,UAAAC,EAAAC,GACAz/B,EAAAzM,OAAA8I,GACA2D,EAAAqvB,UAAA,SACArvB,EAAAsvB,aAAA,SACAtvB,EAAAoK,UAAA2zB,EACA/9B,EAAAR,KAAA87B,EAAAvsC,OACAiR,EAAAuvB,SAAAsI,EAAAC,YAAA,KACA93B,EAAAxC,UAGA,GAAA0gC,EAAA,CAEA,IAEAtxB,EAAAC,EAAAC,EAAA/pB,EAFA68C,EAAA1B,EACA2B,EAAA/pC,GAAAiZ,EAAA1E,UAAAgH,EAAAvjB,OAAA,KAGAiiB,GACAnD,EAAAuxB,EAAA/iC,EAAAvD,EAAA8D,KAAAikC,KAAA,EACA/yB,EAAAsxB,EAAA/iC,EAAAvD,EAAAgE,MAAAgkC,KAAA,EACA/yB,EAAA/pB,EAAAq6C,IAEAtwB,EAAAqxB,EAAA/iC,EAAAvD,EAAA+D,IAAAgkC,KAAA,EACA78C,EAAAo7C,EAAA/iC,EAAAvD,EAAAiE,OAAA+jC,KAAA,EACAjzB,EAAAC,EAAAuwB,GAGAp9B,EAAAqK,UAAA6zB,EACAl+B,EAAAuK,YAAAzU,GAAAiZ,EAAAqoB,MAAA,GACAp3B,EAAArD,YACAqD,EAAAjE,OAAA6Q,EAAAE,GACA9M,EAAApD,OAAAiQ,EAAA9pB,GACAid,EAAAjD,cASA+iC,GAAAvH,GAAA9gC,OAAA,CAMAsoC,UAAA,WACA,IAAA/6B,EAAA5nB,KAAAge,MAAA4J,KACA,OAAA5nB,KAAA6Z,QAAA0Y,SAAAvyB,KAAA2yB,eAAA/K,EAAAg7B,QAAAh7B,EAAAi7B,UAAAj7B,EAAA2K,QAGA6pB,oBAAA,WACA,IAIAp2B,EAJAvL,EAAAza,KACAuyB,EAAA9X,EAAAkoC,YACAloC,EAAAqoC,SAAA,EACAroC,EAAAsoC,SAAAxwB,EAAA7hB,OAAA,OAGAD,IAAAgK,EAAAZ,QAAAoa,MAAAtwB,MAEAqiB,EAAAuM,EAAAvX,QAAAP,EAAAZ,QAAAoa,MAAAtwB,KACA8W,EAAAqoC,UAAA,IAAA98B,IAAAvL,EAAAqoC,eAGAryC,IAAAgK,EAAAZ,QAAAoa,MAAApwB,MAEAmiB,EAAAuM,EAAAvX,QAAAP,EAAAZ,QAAAoa,MAAApwB,KACA4W,EAAAsoC,UAAA,IAAA/8B,IAAAvL,EAAAsoC,UAGAtoC,EAAA9W,IAAA4uB,EAAA9X,EAAAqoC,UACAroC,EAAA5W,IAAA0uB,EAAA9X,EAAAsoC,WAGAxG,WAAA,WACA,IAAA9hC,EAAAza,KACAuyB,EAAA9X,EAAAkoC,YAEAloC,EAAAwZ,MAAA,IAAAxZ,EAAAqoC,UAAAroC,EAAAsoC,WAAAxwB,EAAA7hB,OAAA,EAAA6hB,IAAAriB,MAAAuK,EAAAqoC,SAAAroC,EAAAsoC,SAAA,IAGAjT,iBAAA,SAAAr4B,EAAAoP,GACA,IAAApM,EAAAza,KACAge,EAAAvD,EAAAuD,MAEA,OAAAA,EAAA8J,eAAAjB,GAAA4N,WAAAxM,qBAAAxN,EAAA7C,GACA6C,EAAA8Z,cAAAvW,EAAA4J,KAAAC,SAAAhB,GAAAe,KAAAnQ,IAGAgD,EAAAwZ,MAAAxc,EAAAgD,EAAAqoC,WAIAjvB,iBAAA,SAAAlgB,EAAA8D,GACA,IAOAurC,EAPAvoC,EAAAza,KACA0xB,EAAAjX,EAAAZ,QAAA6X,OAEAuxB,EAAAr/C,KAAAC,IAAA4W,EAAAsoC,SAAA,EAAAtoC,EAAAqoC,UAAApxB,EAAA,QAQA,GAHA/d,UACAqvC,EAAAvoC,EAAAkY,eAAAhf,EAAAtP,EAAAsP,EAAArP,QAEAmM,IAAAuyC,QAAAvyC,IAAAkD,GAAAV,MAAAwE,GAAA,CACA,IAEAgxB,EAFAhuB,EAAAkoC,YAEA3nC,QADArH,EAAAqvC,GAAArvC,GAEA8D,GAAA,IAAAgxB,IAAAhxB,EAGA,GAAAgD,EAAAkY,eAAA,CACA,IAAAuwB,EAAAzoC,EAAA0D,MAAA8kC,EACAE,EAAAD,GAAAzrC,EAAAgD,EAAAqoC,UAMA,OAJApxB,IACAyxB,GAAAD,EAAA,GAGAzoC,EAAA8D,KAAA4kC,EAEA,IAAAC,EAAA3oC,EAAA2D,OAAA6kC,EACAI,EAAAD,GAAA3rC,EAAAgD,EAAAqoC,UAMA,OAJApxB,IACA2xB,GAAAD,EAAA,GAGA3oC,EAAA+D,IAAA6kC,GAGAlvB,gBAAA,SAAA1c,GACA,OAAAzX,KAAA6zB,iBAAA7zB,KAAAi0B,MAAAxc,KAAAzX,KAAA8iD,SAAA,OAGA7D,iBAAA,SAAAC,GACA,IAAAzkC,EAAAza,KACA0xB,EAAAjX,EAAAZ,QAAA6X,OAEAuxB,EAAAr/C,KAAAC,IAAA4W,EAAA+gC,OAAA9qC,QAAAghB,EAAA,QACA4xB,EAAA7oC,EAAAkY,eACA4wB,GAAAD,EAAA7oC,EAAA0D,MAAA1D,EAAA2D,QAAA6kC,EAcA,OAZA/D,GAAAoE,EAAA7oC,EAAA8D,KAAA9D,EAAA+D,IAEAkT,IACAwtB,GAAAqE,EAAA,IAGArE,GAAA,EACA,EAEAt7C,KAAA+M,MAAAuuC,EAAAqE,IAGA9oC,EAAAqoC,UAGApwB,aAAA,WACA,OAAA1yB,KAAA0e,UAMAgkC,GAAAc,UAlIA,CACAjuB,SAAA,UAmIA,IACAtd,GAAA4K,GAAA5K,cAgFAwrC,GAAAtI,GAAA9gC,OAAA,CACAka,cAAA,SAAA5gB,GACA,uBAAAA,GACAA,EAEAwnC,GAAAlrC,UAAAskB,cAAApkB,KAAAnQ,KAAA2T,IAGA+vC,uBAAA,WACA,IAAAjpC,EAAAza,KAEAm9C,EADA1iC,EAAAZ,QACAoa,MAKA,GAAAkpB,EAAA3hB,YAAA,CACA,IAAAmoB,EAAA9gC,GAAA+gC,KAAAnpC,EAAA9W,KACAkgD,EAAAhhC,GAAA+gC,KAAAnpC,EAAA5W,KAEA8/C,EAAA,GAAAE,EAAA,EAEAppC,EAAA5W,IAAA,EACI8/C,EAAA,GAAAE,EAAA,IAEJppC,EAAA9W,IAAA,GAIA,IAAAmgD,OAAArzC,IAAA0sC,EAAAx5C,UAAA8M,IAAA0sC,EAAA4G,aACAC,OAAAvzC,IAAA0sC,EAAAt5C,UAAA4M,IAAA0sC,EAAA8G,kBAEAxzC,IAAA0sC,EAAAx5C,IACA8W,EAAA9W,IAAAw5C,EAAAx5C,SACG8M,IAAA0sC,EAAA4G,eAEHtpC,EAAA9W,IADA,OAAA8W,EAAA9W,IACAw5C,EAAA4G,aAEAngD,KAAAD,IAAA8W,EAAA9W,IAAAw5C,EAAA4G,oBAIAtzC,IAAA0sC,EAAAt5C,IACA4W,EAAA5W,IAAAs5C,EAAAt5C,SACG4M,IAAA0sC,EAAA8G,eAEHxpC,EAAA5W,IADA,OAAA4W,EAAA5W,IACAs5C,EAAA8G,aAEArgD,KAAAC,IAAA4W,EAAA5W,IAAAs5C,EAAA8G,eAIAH,IAAAE,GAKAvpC,EAAA9W,KAAA8W,EAAA5W,MACAigD,EACArpC,EAAA5W,IAAA4W,EAAA9W,IAAA,EAEA8W,EAAA9W,IAAA8W,EAAA5W,IAAA,GAKA4W,EAAA9W,MAAA8W,EAAA5W,MACA4W,EAAA5W,MAEAs5C,EAAA3hB,aACA/gB,EAAA9W,QAKAugD,aAAA,WACA,IAIA1E,EAHArC,EADAn9C,KACA6Z,QAAAoa,MACAkwB,EAAAhH,EAAAgH,SACA1E,EAAAtC,EAAAsC,cAcA,OAXA0E,EACA3E,EAAA57C,KAAAwgD,KAPApkD,KAOA6D,IAAAsgD,GAAAvgD,KAAAkB,MAPA9E,KAOA2D,IAAAwgD,GAAA,GAEA3E,EATAx/C,KASAqkD,oBACA5E,KAAA,IAGAA,IACAD,EAAA57C,KAAAD,IAAA87C,EAAAD,IAGAA,GAGA6E,kBAAA,WACA,OAAA9rC,OAAAwlB,mBAGAumB,yBArLAzhC,GAAA9K,KAuLAwkC,WAAA,WACA,IAAA9hC,EAAAza,KAEAm9C,EADA1iC,EAAAZ,QACAoa,MAMAurB,EAAA/kC,EAAAypC,eAGAK,EAAA,CACA/E,SAHAA,EAAA57C,KAAAC,IAAA,EAAA27C,GAIA77C,IAAAw5C,EAAAx5C,IACAE,IAAAs5C,EAAAt5C,IACA2gD,UAAArH,EAAAqH,UACAL,SAAAthC,GAAArK,eAAA2kC,EAAAsH,cAAAtH,EAAAgH,WAEAlwB,EAAAxZ,EAAAwZ,MAjMA,SAAAywB,EAAAC,GACA,IAeAC,EAAAC,EAAAC,EAAAC,EAfA9wB,EAAA,GAMAkwB,EA0LAI,EA1LAJ,SACAa,EAAAb,GAAA,EACAc,EAwLAV,EAxLA/E,SAAA,EACA77C,EAuLA4gD,EAvLA5gD,IACAE,EAsLA0gD,EAtLA1gD,IACA2gD,EAqLAD,EArLAC,UACAU,EAoLAzqC,EApLA9W,IACAwhD,EAmLA1qC,EAnLA5W,IACAuhD,EAAAviC,GAAAwiC,SAAAF,EAAAD,GAAAD,EAAAD,KAKA,GAAAI,EAdA,OAcAntC,GAAAtU,IAAAsU,GAAApU,GACA,OAAAqhD,EAAAC,IAGAJ,EAAAnhD,KAAAwgD,KAAAe,EAAAC,GAAAxhD,KAAAkB,MAAAogD,EAAAE,IACAH,IAEAG,EAAAviC,GAAAwiC,QAAAN,EAAAK,EAAAH,EAAAD,MAGAb,GAAAlsC,GAAAusC,GAEAI,EAAAhhD,KAAAO,IAAA,GAAA0e,GAAAyiC,eAAAF,KAGAR,EAAAhhD,KAAAO,IAAA,GAAAqgD,GACAY,EAAAxhD,KAAAwgD,KAAAgB,EAAAR,MAGAC,EAAAjhD,KAAAkB,MAAAogD,EAAAE,KACAN,EAAAlhD,KAAAwgD,KAAAe,EAAAC,KAGAjB,KAEAlsC,GAAAtU,IAAAkf,GAAA0iC,YAAA5hD,EAAAyhD,IAAA,OACAP,EAAAlhD,IAEAsU,GAAApU,IAAAgf,GAAA0iC,YAAA1hD,EAAAuhD,IAAA,OACAN,EAAAjhD,IAOAkhD,EADAliC,GAAA2iC,aAFAT,GAAAD,EAAAD,GAAAO,EAEAxhD,KAAA+M,MAAAo0C,GAAAK,EAAA,KACAxhD,KAAA+M,MAAAo0C,GAEAnhD,KAAAwgD,KAAAW,GAGAF,EAAAjhD,KAAA+M,MAAAk0C,EAAAD,KACAE,EAAAlhD,KAAA+M,MAAAm0C,EAAAF,KACA3wB,EAAApO,KAAA5N,GAAAtU,GAAAkhD,EAAAlhD,GACA,QAAA6zB,EAAA,EAAgBA,EAAAutB,IAAevtB,EAC/BvD,EAAApO,KAAAjiB,KAAA+M,OAAAk0C,EAAArtB,EAAA4tB,GAAAR,MAIA,OAFA3wB,EAAApO,KAAA5N,GAAApU,GAAAihD,EAAAjhD,GAEAowB,EA4HAwxB,GAEAhrC,EAAA6pC,2BAIA7pC,EAAA5W,IAAAgf,GAAAhf,IAAAowB,GACAxZ,EAAA9W,IAAAkf,GAAAlf,IAAAswB,GAEAkpB,EAAAlkC,SACAgb,EAAAhb,UAEAwB,EAAAkJ,MAAAlJ,EAAA5W,IACA4W,EAAAkZ,IAAAlZ,EAAA9W,MAEA8W,EAAAkJ,MAAAlJ,EAAA9W,IACA8W,EAAAkZ,IAAAlZ,EAAA5W,MAIA64C,qBAAA,WACA,IAAAjiC,EAAAza,KACAya,EAAAirC,eAAAjrC,EAAAwZ,MAAA/jB,QACAuK,EAAAgnC,cAAAhnC,EAAAwZ,MAAAjZ,QAAA,GAEAmgC,GAAAlrC,UAAAysC,qBAAAvsC,KAAAsK,MAIAkrC,GAAA,CACApwB,SAAA,OACAtB,MAAA,CACAtb,SAAAogC,GAAAC,WAAAz9B,SAIAqqC,GAAAnC,GAAAppC,OAAA,CACA+hC,oBAAA,WACA,IAAA3hC,EAAAza,KACAy3B,EAAAhd,EAAAZ,QACAmE,EAAAvD,EAAAuD,MAEA6J,EADA7J,EAAA4J,KACAC,SACA8K,EAAAlY,EAAAkY,eAIA,SAAAkzB,EAAA1+B,GACA,OAAAwL,EAAAxL,EAAAI,UAAA9M,EAAA7C,GAAAuP,EAAAO,UAAAjN,EAAA7C,GAIA6C,EAAA9W,IAAA,KACA8W,EAAA5W,IAAA,KAEA,IAAAiiD,EAAAruB,EAAApE,QAeA,QAdA5iB,IAAAq1C,GACAjjC,GAAA9J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAi/B,EAAA,CAIA,IAAA3+B,EAAAnJ,EAAA8J,eAAAjB,GACA7I,EAAAuV,iBAAA1M,IAAAg/B,EAAA1+B,SACA1W,IAAA0W,EAAA2K,QACAg0B,GAAA,MAKAruB,EAAApE,SAAAyyB,EAAA,CACA,IAAAC,EAAA,GAEAljC,GAAA9J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GACAlX,EAAA,CACAwX,EAAAvQ,UAEAnG,IAAAgnB,EAAApE,cAAA5iB,IAAA0W,EAAA2K,MAAAjL,EAAA,GACAM,EAAA2K,OACA4E,KAAA,UAEAjmB,IAAAs1C,EAAAp2C,KACAo2C,EAAAp2C,GAAA,CACAq2C,eAAA,GACAC,eAAA,KAKA,IAAAD,EAAAD,EAAAp2C,GAAAq2C,eACAC,EAAAF,EAAAp2C,GAAAs2C,eAEAjoC,EAAAuV,iBAAA1M,IAAAg/B,EAAA1+B,IACAtE,GAAA9J,KAAAsO,EAAAO,KAAA,SAAAo3B,EAAAvnC,GACA,IAAA9D,GAAA8G,EAAA8Z,cAAAyqB,GACA/rC,MAAAU,IAAAwT,EAAAS,KAAAnQ,GAAA0L,SAIA6iC,EAAAvuC,GAAAuuC,EAAAvuC,IAAA,EACAwuC,EAAAxuC,GAAAwuC,EAAAxuC,IAAA,EAEAggB,EAAAyuB,eACAF,EAAAvuC,GAAA,IACO9D,EAAA,EACPsyC,EAAAxuC,IAAA9D,EAEAqyC,EAAAvuC,IAAA9D,OAMAkP,GAAA9J,KAAAgtC,EAAA,SAAAI,GACA,IAAAp1C,EAAAo1C,EAAAH,eAAA5xC,OAAA+xC,EAAAF,gBACAG,EAAAvjC,GAAAlf,IAAAoN,GACAs1C,EAAAxjC,GAAAhf,IAAAkN,GACA0J,EAAA9W,IAAA,OAAA8W,EAAA9W,IAAAyiD,EAAAxiD,KAAAD,IAAA8W,EAAA9W,IAAAyiD,GACA3rC,EAAA5W,IAAA,OAAA4W,EAAA5W,IAAAwiD,EAAAziD,KAAAC,IAAA4W,EAAA5W,IAAAwiD,UAIAxjC,GAAA9J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GACA7I,EAAAuV,iBAAA1M,IAAAg/B,EAAA1+B,IACAtE,GAAA9J,KAAAsO,EAAAO,KAAA,SAAAo3B,EAAAvnC,GACA,IAAA9D,GAAA8G,EAAA8Z,cAAAyqB,GACA/rC,MAAAU,IAAAwT,EAAAS,KAAAnQ,GAAA0L,SAIA,OAAA1I,EAAA9W,IACA8W,EAAA9W,IAAAgQ,EACOA,EAAA8G,EAAA9W,MACP8W,EAAA9W,IAAAgQ,GAGA,OAAA8G,EAAA5W,IACA4W,EAAA5W,IAAA8P,EACOA,EAAA8G,EAAA5W,MACP4W,EAAA5W,IAAA8P,QAOA8G,EAAA9W,IAAA2U,SAAAmC,EAAA9W,OAAAsP,MAAAwH,EAAA9W,KAAA8W,EAAA9W,IAxGA,EAyGA8W,EAAA5W,IAAAyU,SAAAmC,EAAA5W,OAAAoP,MAAAwH,EAAA5W,KAAA4W,EAAA5W,IAxGA,EA2GA7D,KAAA0jD,0BAIAW,kBAAA,WACA,IACAhH,EAEA,OAHAr9C,KAGA2yB,eACA/uB,KAAAwgD,KAJApkD,KAIAme,MAAA,KAEAk/B,EAAAx6B,GAAAhJ,QAAAoI,WANAjiB,KAMA6Z,QAAAoa,OACArwB,KAAAwgD,KAPApkD,KAOAoe,OAAAi/B,EAAA96B,cAIA+hC,yBAAA,WACAtkD,KAAA2yB,gBAEA3yB,KAAAi0B,MAAAhb,WAIA62B,iBAAA,SAAAr4B,EAAAoP,GACA,OAAA7mB,KAAAu0B,cAAAv0B,KAAAge,MAAA4J,KAAAC,SAAAhB,GAAAe,KAAAnQ,KAIAoc,iBAAA,SAAAlgB,GAGA,IAAA8G,EAAAza,KACA2jB,EAAAlJ,EAAAkJ,MAEA8W,GAAAhgB,EAAA8Z,cAAA5gB,GAEA+gB,EAAAja,EAAAkZ,IAAAhQ,EAOA,OALAlJ,EAAAkY,eACAlY,EAAA8D,KAAA9D,EAAA0D,MAAAuW,GAAA+F,EAAA9W,GAEAlJ,EAAAiE,OAAAjE,EAAA2D,OAAAsW,GAAA+F,EAAA9W,IAKAs7B,iBAAA,SAAAC,GACA,IAAAzkC,EAAAza,KACA2yB,EAAAlY,EAAAkY,eAGA,OAAAlY,EAAAkJ,OADAgP,EAAAusB,EAAAzkC,EAAA8D,KAAA9D,EAAAiE,OAAAwgC,IADAvsB,EAAAlY,EAAA0D,MAAA1D,EAAA2D,SAEA3D,EAAAkZ,IAAAlZ,EAAAkJ,QAGAwQ,gBAAA,SAAA1c,GACA,OAAAzX,KAAA6zB,iBAAA7zB,KAAA0lD,eAAAjuC,OAMAmuC,GAAApC,UADAmC,GAGA,IAAAW,GAAAzjC,GAAArK,eAgDA+tC,GAAA,CACAhxB,SAAA,OAGAtB,MAAA,CACAtb,SAAAogC,GAAAC,WAAAS,cAKA,SAAA+M,GAAA7yC,EAAA8E,GACA,OAAAoK,GAAAvK,SAAA3E,OAAA,EAAAA,EAAA8E,EAGA,IAAAguC,GAAAtL,GAAA9gC,OAAA,CACA+hC,oBAAA,WACA,IAAA3hC,EAAAza,KACAy3B,EAAAhd,EAAAZ,QACAmE,EAAAvD,EAAAuD,MAEA6J,EADA7J,EAAA4J,KACAC,SACA8K,EAAAlY,EAAAkY,eACA,SAAAkzB,EAAA1+B,GACA,OAAAwL,EAAAxL,EAAAI,UAAA9M,EAAA7C,GAAAuP,EAAAO,UAAAjN,EAAA7C,GAIA6C,EAAA9W,IAAA,KACA8W,EAAA5W,IAAA,KACA4W,EAAAisC,WAAA,KAEA,IAAAZ,EAAAruB,EAAApE,QAeA,QAdA5iB,IAAAq1C,GACAjjC,GAAA9J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAi/B,EAAA,CAIA,IAAA3+B,EAAAnJ,EAAA8J,eAAAjB,GACA7I,EAAAuV,iBAAA1M,IAAAg/B,EAAA1+B,SACA1W,IAAA0W,EAAA2K,QACAg0B,GAAA,MAKAruB,EAAApE,SAAAyyB,EAAA,CACA,IAAAC,EAAA,GAEAljC,GAAA9J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GACAlX,EAAA,CACAwX,EAAAvQ,UAEAnG,IAAAgnB,EAAApE,cAAA5iB,IAAA0W,EAAA2K,MAAAjL,EAAA,GACAM,EAAA2K,OACA4E,KAAA,KAEA1Y,EAAAuV,iBAAA1M,IAAAg/B,EAAA1+B,UACA1W,IAAAs1C,EAAAp2C,KACAo2C,EAAAp2C,GAAA,IAGAkT,GAAA9J,KAAAsO,EAAAO,KAAA,SAAAo3B,EAAAvnC,GACA,IAAA1G,EAAAg1C,EAAAp2C,GACAgE,GAAA8G,EAAA8Z,cAAAyqB,GAEA/rC,MAAAU,IAAAwT,EAAAS,KAAAnQ,GAAA0L,QAAAxP,EAAA,IAGA5C,EAAA0G,GAAA1G,EAAA0G,IAAA,EACA1G,EAAA0G,IAAA9D,QAKAkP,GAAA9J,KAAAgtC,EAAA,SAAAI,GACA,GAAAA,EAAAz1C,OAAA,GACA,IAAA01C,EAAAvjC,GAAAlf,IAAAwiD,GACAE,EAAAxjC,GAAAhf,IAAAsiD,GACA1rC,EAAA9W,IAAA,OAAA8W,EAAA9W,IAAAyiD,EAAAxiD,KAAAD,IAAA8W,EAAA9W,IAAAyiD,GACA3rC,EAAA5W,IAAA,OAAA4W,EAAA5W,IAAAwiD,EAAAziD,KAAAC,IAAA4W,EAAA5W,IAAAwiD,WAKAxjC,GAAA9J,KAAA8O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GACA7I,EAAAuV,iBAAA1M,IAAAg/B,EAAA1+B,IACAtE,GAAA9J,KAAAsO,EAAAO,KAAA,SAAAo3B,EAAAvnC,GACA,IAAA9D,GAAA8G,EAAA8Z,cAAAyqB,GAEA/rC,MAAAU,IAAAwT,EAAAS,KAAAnQ,GAAA0L,QAAAxP,EAAA,IAIA,OAAA8G,EAAA9W,IACA8W,EAAA9W,IAAAgQ,EACOA,EAAA8G,EAAA9W,MACP8W,EAAA9W,IAAAgQ,GAGA,OAAA8G,EAAA5W,IACA4W,EAAA5W,IAAA8P,EACOA,EAAA8G,EAAA5W,MACP4W,EAAA5W,IAAA8P,GAGA,IAAAA,IAAA,OAAA8G,EAAAisC,YAAA/yC,EAAA8G,EAAAisC,cACAjsC,EAAAisC,WAAA/yC,QAQA3T,KAAA0jD,0BAGAA,uBAAA,WACA,IAAAjpC,EAAAza,KACAm9C,EAAA1iC,EAAAZ,QAAAoa,MAIAxZ,EAAA9W,IAAA6iD,GAAArJ,EAAAx5C,IAAA8W,EAAA9W,KACA8W,EAAA5W,IAAA2iD,GAAArJ,EAAAt5C,IAAA4W,EAAA5W,KAEA4W,EAAA9W,MAAA8W,EAAA5W,MACA,IAAA4W,EAAA9W,KAAA,OAAA8W,EAAA9W,KACA8W,EAAA9W,IAAAC,KAAAO,IAAA,GAAAP,KAAAkB,MAAA+d,GAAAs2B,MAAA1+B,EAAA9W,MAAA,GACA8W,EAAA5W,IAAAD,KAAAO,IAAA,GAAAP,KAAAkB,MAAA+d,GAAAs2B,MAAA1+B,EAAA5W,MAAA,KAEA4W,EAAA9W,IAXA,EAYA8W,EAAA5W,IAXA,KAcA,OAAA4W,EAAA9W,MACA8W,EAAA9W,IAAAC,KAAAO,IAAA,GAAAP,KAAAkB,MAAA+d,GAAAs2B,MAAA1+B,EAAA5W,MAAA,IAEA,OAAA4W,EAAA5W,MACA4W,EAAA5W,IAAA,IAAA4W,EAAA9W,IACAC,KAAAO,IAAA,GAAAP,KAAAkB,MAAA+d,GAAAs2B,MAAA1+B,EAAA9W,MAAA,GAnBA,IAsBA,OAAA8W,EAAAisC,aAEAjsC,EAAAisC,WADAjsC,EAAA9W,IAAA,EACA8W,EAAA9W,IACI8W,EAAA5W,IAAA,EACJD,KAAAO,IAAA,GAAAP,KAAAkB,MAAA+d,GAAAs2B,MAAA1+B,EAAA5W,OA3BA,IAkCA04C,WAAA,WACA,IAAA9hC,EAAAza,KACAm9C,EAAA1iC,EAAAZ,QAAAoa,MACAhb,GAAAwB,EAAAkY,eAEA+xB,EAAA,CACA/gD,IAAA6iD,GAAArJ,EAAAx5C,KACAE,IAAA2iD,GAAArJ,EAAAt5C,MAEAowB,EAAAxZ,EAAAwZ,MA9MA,SAAAywB,EAAAC,GACA,IAMAgC,EAAAC,EANA3yB,EAAA,GAEA4yB,EAAAP,GAAA5B,EAAA/gD,IAAAC,KAAAO,IAAA,GAAAP,KAAAkB,MAAA+d,GAAAs2B,MAAAwL,EAAAhhD,QAEAmjD,EAAAljD,KAAAkB,MAAA+d,GAAAs2B,MAAAwL,EAAA9gD,MACAkjD,EAAAnjD,KAAAwgD,KAAAO,EAAA9gD,IAAAD,KAAAO,IAAA,GAAA2iD,IAGA,IAAAD,GACAF,EAAA/iD,KAAAkB,MAAA+d,GAAAs2B,MAAAwL,EAAA+B,aACAE,EAAAhjD,KAAAkB,MAAA6/C,EAAA+B,WAAA9iD,KAAAO,IAAA,GAAAwiD,IAEA1yB,EAAApO,KAAAghC,GACAA,EAAAD,EAAAhjD,KAAAO,IAAA,GAAAwiD,KAEAA,EAAA/iD,KAAAkB,MAAA+d,GAAAs2B,MAAA0N,IACAD,EAAAhjD,KAAAkB,MAAA+hD,EAAAjjD,KAAAO,IAAA,GAAAwiD,KAEA,IAAAnC,EAAAmC,EAAA,EAAA/iD,KAAAO,IAAA,GAAAP,KAAAgrB,IAAA+3B,IAAA,EAEA,GACA1yB,EAAApO,KAAAghC,GAGA,MADAD,IAEAA,EAAA,EAEApC,IADAmC,GACA,IAAAnC,GAGAqC,EAAAjjD,KAAA+M,MAAAi2C,EAAAhjD,KAAAO,IAAA,GAAAwiD,GAAAnC,WACEmC,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,GAEF,IAAAC,EAAAV,GAAA5B,EAAA7gD,IAAAgjD,GAGA,OAFA5yB,EAAApO,KAAAmhC,GAEA/yB,EAyKAgzB,CAAAvC,EAAAjqC,GAIAA,EAAA5W,IAAAgf,GAAAhf,IAAAowB,GACAxZ,EAAA9W,IAAAkf,GAAAlf,IAAAswB,GAEAkpB,EAAAlkC,SACAA,KACAwB,EAAAkJ,MAAAlJ,EAAA5W,IACA4W,EAAAkZ,IAAAlZ,EAAA9W,MAEA8W,EAAAkJ,MAAAlJ,EAAA9W,IACA8W,EAAAkZ,IAAAlZ,EAAA5W,KAEAoV,GACAgb,EAAAhb,WAIAyjC,qBAAA,WACA18C,KAAAknD,WAAAlnD,KAAAi0B,MAAA/jB,QAEAirC,GAAAlrC,UAAAysC,qBAAAvsC,KAAAnQ,OAIA8vC,iBAAA,SAAAr4B,EAAAoP,GACA,OAAA7mB,KAAAu0B,cAAAv0B,KAAAge,MAAA4J,KAAAC,SAAAhB,GAAAe,KAAAnQ,KAGA0c,gBAAA,SAAA1c,GACA,OAAAzX,KAAA6zB,iBAAA7zB,KAAAknD,WAAAzvC,KASA0vC,mBAAA,SAAAxzC,GACA,IAAAgzC,EAAA/iD,KAAAkB,MAAA+d,GAAAs2B,MAAAxlC,IAGA,OAFA/P,KAAAkB,MAAA6O,EAAA/P,KAAAO,IAAA,GAAAwiD,IAEA/iD,KAAAO,IAAA,GAAAwiD,IAGA9yB,iBAAA,SAAAlgB,GACA,IAMAyzC,EAAAlI,EAAAv7B,EAAAgQ,EAAAiwB,EANAnpC,EAAAza,KACAm9C,EAAA1iC,EAAAZ,QAAAoa,MACAhb,EAAAkkC,EAAAlkC,QACAkgC,EAAAt2B,GAAAs2B,MACAkO,EAAA5sC,EAAA0sC,mBAAA1sC,EAAAisC,YACAh1B,EAAA,EAgCA,OA7BA/d,GAAA8G,EAAA8Z,cAAA5gB,GACAsF,GACA0K,EAAAlJ,EAAAkZ,IACAA,EAAAlZ,EAAAkJ,MACAigC,GAAA,IAEAjgC,EAAAlJ,EAAAkJ,MACAgQ,EAAAlZ,EAAAkZ,IACAiwB,EAAA,GAEAnpC,EAAAkY,gBACAy0B,EAAA3sC,EAAA0D,MACA+gC,EAAAjmC,EAAAwB,EAAAgE,MAAAhE,EAAA8D,OAEA6oC,EAAA3sC,EAAA2D,OACAwlC,IAAA,EACA1E,EAAAjmC,EAAAwB,EAAA+D,IAAA/D,EAAAiE,QAEA/K,IAAAgQ,IACA,IAAAA,IAEAyjC,GADA11B,EAAA40B,GAAAnJ,EAAAh7B,SAAAP,GAAAtiB,OAAAkiB,iBAEAmC,EAAA0jC,GAEA,IAAA1zC,IACA+d,GAAA01B,GAAAjO,EAAAxlB,GAAAwlB,EAAAx1B,KAAAw1B,EAAAxlC,GAAAwlC,EAAAx1B,KAEAu7B,GAAA0E,EAAAlyB,GAEAwtB,GAGAD,iBAAA,SAAAC,GACA,IAKAkI,EAAAzjC,EAAAgQ,EAAAhgB,EALA8G,EAAAza,KACAm9C,EAAA1iC,EAAAZ,QAAAoa,MACAhb,EAAAkkC,EAAAlkC,QACAkgC,EAAAt2B,GAAAs2B,MACAkO,EAAA5sC,EAAA0sC,mBAAA1sC,EAAAisC,YAiBA,GAdAztC,GACA0K,EAAAlJ,EAAAkZ,IACAA,EAAAlZ,EAAAkJ,QAEAA,EAAAlJ,EAAAkJ,MACAgQ,EAAAlZ,EAAAkZ,KAEAlZ,EAAAkY,gBACAy0B,EAAA3sC,EAAA0D,MACAxK,EAAAsF,EAAAwB,EAAAgE,MAAAygC,IAAAzkC,EAAA8D,OAEA6oC,EAAA3sC,EAAA2D,OACAzK,EAAAsF,EAAAimC,EAAAzkC,EAAA+D,IAAA/D,EAAAiE,OAAAwgC,GAEAvrC,IAAAgQ,EAAA,CACA,OAAAA,EAAA,CACA,IAAA+N,EAAA40B,GAAAnJ,EAAAh7B,SAAAP,GAAAtiB,OAAAkiB,iBACA7N,GAAA+d,EACA01B,GAAA11B,EACA/N,EAAA0jC,EAEA1zC,GAAAwlC,EAAAxlB,GAAAwlB,EAAAx1B,GACAhQ,GAAAyzC,EACAzzC,EAAA/P,KAAAO,IAAA,GAAAg1C,EAAAx1B,GAAAhQ,GAEA,OAAAA,KAMA8yC,GAAAjD,UADA+C,GAGA,IAAAe,GAAAzkC,GAAArK,eACA+uC,GAAA1kC,GAAAnK,sBACA8uC,GAAA3kC,GAAAhJ,QAAA6I,QAEA+kC,GAAA,CACApsB,SAAA,EAGAqsB,SAAA,EACAnyB,SAAA,YAEA6F,WAAA,CACAC,SAAA,EACA2e,MAAA,qBACA/sB,UAAA,EACAM,WAAA,GACAC,iBAAA,GAGAmE,UAAA,CACA2J,UAAA,GAIArH,MAAA,CAEA0zB,mBAAA,EAGAC,cAAA,yBAGAC,iBAAA,EAGAC,iBAAA,EAEAnvC,SAAAogC,GAAAC,WAAAz9B,QAGAggB,YAAA,CAEAF,SAAA,EAGAlZ,SAAA,GAGAxJ,SAAA,SAAA2Z,GACA,OAAAA,KAKA,SAAAy1B,GAAA/0C,GACA,IAAAykB,EAAAzkB,EAAA6G,QACA,OAAA4d,EAAA2D,WAAAC,SAAA5D,EAAA8D,YAAAF,QAAAroB,EAAAgL,MAAA4J,KAAA2K,OAAA7hB,OAAA,EAGA,SAAAs3C,GAAAvwB,GACA,IAAA0lB,EAAA1lB,EAAAxD,MAEA,OAAAkpB,EAAA9hB,SAAA5D,EAAA4D,QACAisB,GAAAnK,EAAAh7B,SAAAP,GAAAtiB,OAAAkiB,iBAAA,EAAA27B,EAAA0K,iBAEA,EAiBA,SAAAI,GAAAj8B,EAAAga,EAAA5mB,EAAAzb,EAAAE,GACA,OAAAmoB,IAAAroB,GAAAqoB,IAAAnoB,EACA,CACA8f,MAAAqiB,EAAA5mB,EAAA,EACAuU,IAAAqS,EAAA5mB,EAAA,GAEE4M,EAAAroB,GAAAqoB,EAAAnoB,EACF,CACA8f,MAAAqiB,EAAA5mB,EACAuU,IAAAqS,GAIA,CACAriB,MAAAqiB,EACArS,IAAAqS,EAAA5mB,GAuFA,SAAA8oC,GAAAl8B,GACA,WAAAA,GAAA,MAAAA,EACA,SACEA,EAAA,IACF,OAGA,QAGA,SAAAmmB,GAAAl0B,EAAAwY,EAAAlB,EAAAhT,GACA,IACA3d,EAAA2U,EADAjV,EAAAixB,EAAAjxB,EAAAie,EAAA,EAGA,GAAAM,GAAA3K,QAAAue,GACA,IAAA7xB,EAAA,EAAA2U,EAAAkd,EAAA/lB,OAAiC9L,EAAA2U,IAAU3U,EAC3CqZ,EAAAk0B,SAAA1b,EAAA7xB,GAAA2wB,EAAAlxB,EAAAC,GACAA,GAAAie,OAGAtE,EAAAk0B,SAAA1b,EAAAlB,EAAAlxB,EAAAC,GAIA,SAAA6jD,GAAAn8B,EAAAo8B,EAAA7yB,GACA,KAAAvJ,GAAA,MAAAA,EACAuJ,EAAAjxB,GAAA8jD,EAAA7kD,EAAA,GACEyoB,EAAA,KAAAA,EAAA,MACFuJ,EAAAjxB,GAAA8jD,EAAA7kD,GAiGA,SAAA8kD,GAAAC,GACA,OAAAzlC,GAAAuB,SAAAkkC,KAAA,EAGA,IAAAC,GAAA9E,GAAAppC,OAAA,CACA4hC,cAAA,WACA,IAAAxhC,EAAAza,KAGAya,EAAA0D,MAAA1D,EAAAihC,SACAjhC,EAAA2D,OAAA3D,EAAAkhC,UACAlhC,EAAA4gC,WAAA2M,GAAAvtC,EAAAZ,SAAA,EACAY,EAAAyhB,QAAAt4B,KAAAkB,MAAA2V,EAAA0D,MAAA,GACA1D,EAAA0hB,QAAAv4B,KAAAkB,OAAA2V,EAAA2D,OAAA3D,EAAA4gC,YAAA,GACA5gC,EAAA+tC,YAAA5kD,KAAAD,IAAA8W,EAAA2D,OAAA3D,EAAA4gC,WAAA5gC,EAAA0D,OAAA,GAGAi+B,oBAAA,WACA,IAAA3hC,EAAAza,KACAge,EAAAvD,EAAAuD,MACAra,EAAA4U,OAAAwlB,kBACAl6B,EAAA0U,OAAAkwC,kBAEA5lC,GAAA9J,KAAAiF,EAAA4J,KAAAC,SAAA,SAAAR,EAAAR,GACA,GAAA7I,EAAAuV,iBAAA1M,GAAA,CACA,IAAAM,EAAAnJ,EAAA8J,eAAAjB,GAEAhE,GAAA9J,KAAAsO,EAAAO,KAAA,SAAAo3B,EAAAvnC,GACA,IAAA9D,GAAA8G,EAAA8Z,cAAAyqB,GACA/rC,MAAAU,IAAAwT,EAAAS,KAAAnQ,GAAA0L,SAIAxf,EAAAC,KAAAD,IAAAgQ,EAAAhQ,GACAE,EAAAD,KAAAC,IAAA8P,EAAA9P,SAKA4W,EAAA9W,QAAA4U,OAAAwlB,kBAAA,EAAAp6B,EACA8W,EAAA5W,QAAA0U,OAAAkwC,kBAAA,EAAA5kD,EAGA4W,EAAAipC,0BAIAW,kBAAA,WACA,OAAAzgD,KAAAwgD,KAAApkD,KAAAwoD,YAAAR,GAAAhoD,KAAA6Z,WAGA6iC,qBAAA,WACA,IAAAjiC,EAAAza,KAEAyjD,GAAAxzC,UAAAysC,qBAAAvsC,KAAAsK,GAGAA,EAAA8gB,YAAA9gB,EAAAuD,MAAA4J,KAAA2K,OAAA7Y,IAAAe,EAAAZ,QAAA0hB,YAAA5iB,SAAA8B,IAGAq1B,iBAAA,SAAAr4B,EAAAoP,GACA,OAAA7mB,KAAAu0B,cAAAv0B,KAAAge,MAAA4J,KAAAC,SAAAhB,GAAAe,KAAAnQ,KAGAulC,IAAA,WACA,IACAvlB,EADAz3B,KACA6Z,QAEA4d,EAAA4D,SAAA5D,EAAA8D,YAAAF,QAjRA,SAAAroB,GA4BA,IAWApO,EAAAwjD,EAAAxrB,EAXA8rB,EAAA7lC,GAAAhJ,QAAAoI,WAAAjP,EAAA6G,QAAA0hB,aAIAotB,EAAA,CACA1nD,EAAA,EACAuC,EAAAwP,EAAAmL,MACAjZ,EAAA,EACAxB,EAAAsP,EAAAoL,OAAApL,EAAAqoC,YAEAuN,EAAA,GAGA51C,EAAAiL,IAAAmE,KAAAsmC,EAAA/2C,OACAqB,EAAA61C,iBAAA,GAEA,IAhFA5qC,EAAAsE,EAAA+P,EAgFAw2B,EAAAf,GAAA/0C,GACA,IAAApO,EAAA,EAAYA,EAAAkkD,EAAgBlkD,IAAA,CAC5Bg4B,EAAA5pB,EAAA+1C,iBAAAnkD,EAAAoO,EAAAw1C,YAAA,GAlFAvqC,EAmFAjL,EAAAiL,IAnFAsE,EAmFAmmC,EAAAnmC,WAAA6lC,EAlFAvlC,GAAA3K,QADAoa,EAmFAtf,EAAAuoB,YAAA32B,IAAA,IAjFA,CACAgP,EAAAiP,GAAAk3B,YAAA97B,IAAAmE,KAAAkQ,GACA/uB,EAAA+uB,EAAA5hB,OAAA6R,GAIA,CACA3O,EAAAqK,EAAAwyB,YAAAne,GAAAnU,MACA5a,EAAAgf,GA0EAvP,EAAA61C,iBAAAjkD,GAAAwjD,EAGA,IAAAzK,EAAA3qC,EAAAg2C,cAAApkD,GACAonB,EAAAnJ,GAAAomC,UAAAtL,GAAA,IACAuL,EAAAjB,GAAAj8B,EAAA4Q,EAAAv4B,EAAA+jD,EAAAx0C,EAAA,OACAu1C,EAAAlB,GAAAj8B,EAAA4Q,EAAAt4B,EAAA8jD,EAAA7kD,EAAA,QAEA2lD,EAAAvlC,MAAAglC,EAAA1nD,IACA0nD,EAAA1nD,EAAAioD,EAAAvlC,MACAilC,EAAA3nD,EAAA08C,GAGAuL,EAAAv1B,IAAAg1B,EAAAnlD,IACAmlD,EAAAnlD,EAAA0lD,EAAAv1B,IACAi1B,EAAAplD,EAAAm6C,GAGAwL,EAAAxlC,MAAAglC,EAAAzjD,IACAyjD,EAAAzjD,EAAAikD,EAAAxlC,MACAilC,EAAA1jD,EAAAy4C,GAGAwL,EAAAx1B,IAAAg1B,EAAAjlD,IACAilD,EAAAjlD,EAAAylD,EAAAx1B,IACAi1B,EAAAllD,EAAAi6C,GAIA3qC,EAAAo2C,cAAAp2C,EAAAw1C,YAAAG,EAAAC,GAqMAS,CAJArpD,WAMAspD,eAAA,UAQAF,cAAA,SAAAG,EAAAZ,EAAAC,GACA,IAAAnuC,EAAAza,KACAwpD,EAAAb,EAAA1nD,EAAA2C,KAAAwC,IAAAwiD,EAAA3nD,GACAwoD,EAAA7lD,KAAAC,IAAA8kD,EAAAnlD,EAAAiX,EAAA0D,MAAA,GAAAva,KAAAwC,IAAAwiD,EAAAplD,GACAkmD,GAAAf,EAAAzjD,EAAAtB,KAAAuC,IAAAyiD,EAAA1jD,GACAykD,GAAA/lD,KAAAC,IAAA8kD,EAAAjlD,GAAA+W,EAAA2D,OAAA3D,EAAA4gC,YAAA,GAAAz3C,KAAAuC,IAAAyiD,EAAAllD,GAEA8lD,EAAAnB,GAAAmB,GACAC,EAAApB,GAAAoB,GACAC,EAAArB,GAAAqB,GACAC,EAAAtB,GAAAsB,GAEAlvC,EAAA+tC,YAAA5kD,KAAAD,IACAC,KAAAkB,MAAAykD,GAAAC,EAAAC,GAAA,GACA7lD,KAAAkB,MAAAykD,GAAAG,EAAAC,GAAA,IACAlvC,EAAA6uC,eAAAE,EAAAC,EAAAC,EAAAC,IAGAL,eAAA,SAAAM,EAAAC,EAAAC,EAAAC,GACA,IAAAtvC,EAAAza,KAGAgqD,EAAAF,EAAArvC,EAAA+tC,YACAyB,EAAAxvC,EAAA2D,OAAA3D,EAAA4gC,WAAA0O,EAAAtvC,EAAA+tC,YAEA/tC,EAAAyhB,QAAAt4B,KAAAkB,OAJA8kD,EAAAnvC,EAAA+tC,aADA/tC,EAAA0D,MAAA0rC,EAAApvC,EAAA+tC,cAKA,EAAA/tC,EAAA8D,MACA9D,EAAA0hB,QAAAv4B,KAAAkB,OAAAklD,EAAAC,GAAA,EAAAxvC,EAAA+D,IAAA/D,EAAA4gC,aAGA2N,cAAA,SAAAvxC,GASA,OAAAA,GARA,EAAA7T,KAAAkC,GAAAiiD,GAAA/nD,QACAA,KAAAge,MAAAnE,SAAA7Z,KAAAge,MAAAnE,QAAAqS,WACAlsB,KAAAge,MAAAnE,QAAAqS,WACA,GAEAtoB,KAAAkC,GAAA,OAMAu2B,8BAAA,SAAA1oB,GACA,IAAA8G,EAAAza,KAEA,UAAA2T,EACA,SAIA,IAAAu2C,EAAAzvC,EAAA+tC,aAAA/tC,EAAA5W,IAAA4W,EAAA9W,KACA,OAAA8W,EAAAZ,QAAAoa,MAAAhb,SACAwB,EAAA5W,IAAA8P,GAAAu2C,GAEAv2C,EAAA8G,EAAA9W,KAAAumD,GAGAnB,iBAAA,SAAAtxC,EAAA0yC,GACA,IACAC,EADApqD,KACAgpD,cAAAvxC,GAAA7T,KAAAkC,GAAA,EACA,OACAzB,EAAAT,KAAAuC,IAAAikD,GAAAD,EAHAnqD,KAGAk8B,QACA53B,EAAAV,KAAAwC,IAAAgkD,GAAAD,EAJAnqD,KAIAm8B,UAIAU,yBAAA,SAAAplB,EAAA9D,GACA,OAAA3T,KAAA+oD,iBAAAtxC,EAAAzX,KAAAq8B,8BAAA1oB,KAGA02C,gBAAA,WACA,IACA1mD,EADA3D,KACA2D,IACAE,EAFA7D,KAEA6D,IAEA,OAJA7D,KAIA68B,yBAAA,EAJA78B,KAKAw7B,YAAA,EACA73B,EAAA,GAAAE,EAAA,EAAAA,EACAF,EAAA,GAAAE,EAAA,EAAAF,EACA,IAGAkmB,KAAA,WACA,IAAApP,EAAAza,KACAy3B,EAAAhd,EAAAZ,QACAikC,EAAArmB,EAAA9F,UACAwrB,EAAA1lB,EAAAxD,MAEA,GAAAwD,EAAA4D,QAAA,CACA,IAAApd,EAAAxD,EAAAwD,IACAiO,EAAAlsB,KAAAgpD,cAAA,GACA3L,EAAAx6B,GAAAhJ,QAAAoI,WAAAk7B,IAEA1lB,EAAA2D,WAAAC,SAAA5D,EAAA8D,YAAAF,UAxQA,SAAAroB,GACA,IAAAiL,EAAAjL,EAAAiL,IACAwZ,EAAAzkB,EAAA6G,QACAywC,EAAA7yB,EAAA2D,WACA0iB,EAAArmB,EAAA9F,UACA44B,EAAA9yB,EAAA8D,YACAtO,EAAAq6B,GAAAgD,EAAAr9B,UAAA6wB,EAAA7wB,WACAg0B,EAAAqG,GAAAgD,EAAAtQ,MAAA8D,EAAA9D,OACAwQ,EAAAxC,GAAAvwB,GAEAxZ,EAAAgC,OACAhC,EAAAgP,YACAhP,EAAAkP,YAAA8zB,EACAhjC,EAAAoQ,cACApQ,EAAAoQ,YAAAm5B,GAAA,CAAA8C,EAAA/8B,WAAAuwB,EAAAvwB,WAAA,MACAtP,EAAAqQ,eAAAk5B,GAAA,CAAA8C,EAAA98B,iBAAAswB,EAAAtwB,iBAAA,KAGA,IAAAi9B,EAAAz3C,EAAAqpB,8BAAA5E,EAAAxD,MAAAhb,QAAAjG,EAAArP,IAAAqP,EAAAnP,KAGA6kD,EAAA7lC,GAAAhJ,QAAAoI,WAAAsoC,GAEAtsC,EAAAmE,KAAAsmC,EAAA/2C,OACAsM,EAAAi0B,aAAA,SAEA,QAAAttC,EAAAmjD,GAAA/0C,GAAA,EAAuCpO,GAAA,EAAQA,IAAA,CAC/C,GAAA0lD,EAAAjvB,SAAApO,GAAAg0B,EAAA,CACA,IAAAyJ,EAAA13C,EAAA+1C,iBAAAnkD,EAAA6lD,GACAxsC,EAAAsB,YACAtB,EAAAU,OAAA3L,EAAAkpB,QAAAlpB,EAAAmpB,SACAle,EAAAuB,OAAAkrC,EAAArmD,EAAAqmD,EAAApmD,GACA2Z,EAAA0B,SAGA,GAAA4qC,EAAAlvB,QAAA,CAEA,IACAsvB,EAAA33C,EAAA+1C,iBAAAnkD,EAAA6lD,GADA,IAAA7lD,EAAA4lD,EAAA,KACA,GAGAI,EAAArD,GAAAgD,EAAAhK,UAAA37C,EAAAgd,GAAAtiB,OAAAgiB,kBACArD,EAAA+O,UAAA49B,EAEA,IAAAjN,EAAA3qC,EAAAg2C,cAAApkD,GACAonB,EAAAnJ,GAAAomC,UAAAtL,GACA1/B,EAAAg0B,UAAAiW,GAAAl8B,GACAm8B,GAAAn8B,EAAAhZ,EAAA61C,iBAAAjkD,GAAA+lD,GACAxY,GAAAl0B,EAAAjL,EAAAuoB,YAAA32B,IAAA,GAAA+lD,EAAAjC,EAAAnmC,aAGAtE,EAAAmC,UAsNAyqC,CAAApwC,GAGAoI,GAAA9J,KAAA0B,EAAAwZ,MAAA,SAAA3B,EAAA7a,GAEA,GAAAA,EAAA,GAAA0lC,EAAAlkC,QAAA,CACA,IAAA6xC,EAAArwC,EAAA4hB,8BAAA5hB,EAAAirC,eAAAjuC,IAOA,GAJAqmC,EAAAziB,SAAA,IAAA5jB,GA5NA,SAAAzE,EAAA8qC,EAAAx/B,EAAA7G,GACA,IAKAmlB,EALA3e,EAAAjL,EAAAiL,IACAqd,EAAAwiB,EAAAxiB,SACAwtB,EAAAf,GAAA/0C,GACAiuC,EAAAsG,GAAAzJ,EAAA9D,MAAAviC,EAAA,GACAwV,EAAAs6B,GAAAzJ,EAAA7wB,UAAAxV,EAAA,GAGA,IAAA6jB,GAAAwtB,IAAA7H,GAAAh0B,EAAA,CAaA,GATAhP,EAAAgC,OACAhC,EAAAkP,YAAA8zB,EACAhjC,EAAAgP,YACAhP,EAAAoQ,cACApQ,EAAAoQ,YAAAyvB,EAAAvwB,YAAA,IACAtP,EAAAqQ,eAAAwvB,EAAAtwB,kBAAA,GAGAvP,EAAAsB,YACA+b,EAEArd,EAAAW,IAAA5L,EAAAkpB,QAAAlpB,EAAAmpB,QAAA7d,EAAA,IAAA1a,KAAAkC,QACE,CAEF82B,EAAA5pB,EAAA+1C,iBAAA,EAAAzqC,GACAL,EAAAU,OAAAie,EAAAv4B,EAAAu4B,EAAAt4B,GAEA,QAAAM,EAAA,EAAiBA,EAAAkkD,EAAgBlkD,IACjCg4B,EAAA5pB,EAAA+1C,iBAAAnkD,EAAA0Z,GACAL,EAAAuB,OAAAod,EAAAv4B,EAAAu4B,EAAAt4B,GAGA2Z,EAAAY,YACAZ,EAAA0B,SACA1B,EAAAmC,WAyLA2qC,CAAAtwC,EAAAqjC,EAAAgN,EAAArzC,GAGA0lC,EAAA9hB,QAAA,CACA,IAAAilB,EAAAgH,GAAAnK,EAAAoD,UAAA3+B,GAAAtiB,OAAAgiB,kBAOA,GANArD,EAAAmE,KAAAi7B,EAAA1rC,OAEAsM,EAAAgC,OACAhC,EAAAkkC,UAAA1nC,EAAAyhB,QAAAzhB,EAAA0hB,SACAle,EAAA9H,OAAA+V,GAEAixB,EAAAwK,kBAAA,CACA,IAAAlK,EAAAx/B,EAAAwyB,YAAAne,GAAAnU,MACAF,EAAA+O,UAAAmwB,EAAAyK,cACA3pC,EAAA+S,UACAysB,EAAA,EAAAN,EAAA2K,kBACAgD,EAAAzN,EAAAj+B,KAAA,EAAA+9B,EAAA0K,iBACApK,EAAA,EAAAN,EAAA2K,iBACAzK,EAAAj+B,KAAA,EAAA+9B,EAAA0K,kBAIA5pC,EAAAg0B,UAAA,SACAh0B,EAAAi0B,aAAA,SACAj0B,EAAA+O,UAAAszB,EACAriC,EAAAk0B,SAAA7f,EAAA,GAAAw4B,GACA7sC,EAAAmC,kBAUAmoC,GAAA/E,UADAiE,GAGA,IAAAuD,GAAAnoC,GAAArK,eAGAyyC,GAAA1yC,OAAA2yC,mBAAA,iBACAC,GAAA5yC,OAAA6yC,kBAAA,iBAEAC,GAAA,CACAC,YAAA,CACAC,QAAA,EACAnsC,KAAA,EACAosC,MAAA,8BAEAC,OAAA,CACAF,QAAA,EACAnsC,KAAA,IACAosC,MAAA,kBAEAE,OAAA,CACAH,QAAA,EACAnsC,KAAA,IACAosC,MAAA,kBAEAG,KAAA,CACAJ,QAAA,EACAnsC,KAAA,KACAosC,MAAA,cAEAI,IAAA,CACAL,QAAA,EACAnsC,KAAA,MACAosC,MAAA,SAEAK,KAAA,CACAN,QAAA,EACAnsC,KAAA,OACAosC,MAAA,WAEAM,MAAA,CACAP,QAAA,EACAnsC,KAAA,OACAosC,MAAA,SAEAO,QAAA,CACAR,QAAA,EACAnsC,KAAA,OACAosC,MAAA,WAEAQ,KAAA,CACAT,QAAA,EACAnsC,KAAA,SAIA6sC,GAAA9zC,OAAAgB,KAAAkyC,IAEA,SAAAa,GAAAtmD,EAAAlC,GACA,OAAAkC,EAAAlC,EAGA,SAAAyoD,GAAA1tB,GACA,IAEA75B,EAAA2U,EAAA2B,EAFAkxC,EAAA,GACAC,EAAA,GAGA,IAAAznD,EAAA,EAAA2U,EAAAklB,EAAA/tB,OAAiC9L,EAAA2U,IAAU3U,EAE3CwnD,EADAlxC,EAAAujB,EAAA75B,MAEAwnD,EAAAlxC,IAAA,EACAmxC,EAAAxmC,KAAA3K,IAIA,OAAAmxC,EAsFA,SAAAC,GAAAC,EAAAC,EAAAzyC,EAAA0yC,GACA,IAAA/3B,EAjCA,SAAA63B,EAAA58C,EAAAgE,GAKA,IAJA,IAEA+4C,EAAAC,EAAAC,EAFAC,EAAA,EACAhoD,EAAA0nD,EAAA77C,OAAA,EAGAm8C,GAAA,GAAAA,GAAAhoD,GAAA,CAKA,GAFA+nD,EAAAL,EAFAG,EAAAG,EAAAhoD,GAAA,KACA8nD,EAAAJ,EAAAG,EAAA,UAKA,OAAWG,GAAA,KAAAhoD,GAAA+nD,GACR,GAAAA,EAAAj9C,GAAAgE,EACHk5C,EAAAH,EAAA,MACG,MAAAC,EAAAh9C,GAAAgE,GAGH,OAAWk5C,GAAAF,EAAA9nD,GAAA+nD,GAFX/nD,EAAA6nD,EAAA,GAOA,OAASG,GAAAD,EAAA/nD,GAAA,MAUTioD,CAAAP,EAAAC,EAAAzyC,GAGAga,EAAAW,EAAAm4B,GAAAn4B,EAAA7vB,GAAA6vB,EAAAm4B,GAAAN,IAAA77C,OAAA,GAAA67C,EAAA,GACA53B,EAAAD,EAAAm4B,GAAAn4B,EAAA7vB,GAAA6vB,EAAA7vB,GAAA0nD,IAAA77C,OAAA,GAAA67C,EAAA,GAEAQ,EAAAp4B,EAAA63B,GAAAz4B,EAAAy4B,GAIA,OAAAz4B,EAAA04B,IAFA93B,EAAA83B,GAAA14B,EAAA04B,KADAM,GAAAhzC,EAAAga,EAAAy4B,IAAAO,EAAA,GAMA,SAAAC,GAAAh6C,EAAAi6C,GACA,IAAAC,EAAAl6C,EAAAm6C,SACAtzC,EAAA7G,EAAA6G,QAAAuzC,KACAC,EAAAxzC,EAAAwzC,OACA/U,EAAA+U,GAAAxzC,EAAAy+B,OACA3kC,EAAAs5C,EAaA,MAXA,mBAAAI,IACA15C,EAAA05C,EAAA15C,IAIAkP,GAAAvK,SAAA3E,KACAA,EAAA,iBAAA2kC,EACA4U,EAAA7U,MAAA1kC,EAAA2kC,GACA4U,EAAA7U,MAAA1kC,IAGA,OAAAA,GACAA,GAKA05C,GAAA,mBAAA/U,IACA3kC,EAAA2kC,EAAA2U,GAGApqC,GAAAvK,SAAA3E,KACAA,EAAAu5C,EAAA7U,MAAA1kC,KAIAA,GAGA,SAAA0kC,GAAArlC,EAAAi6C,GACA,GAAApqC,GAAA5K,cAAAg1C,GACA,YAGA,IAAApzC,EAAA7G,EAAA6G,QAAAuzC,KACAz5C,EAAAq5C,GAAAh6C,IAAAuhB,cAAA04B,IACA,cAAAt5C,EACAA,GAGAkG,EAAAlJ,QACAgD,GAAAX,EAAAm6C,SAAA3U,QAAA7kC,EAAAkG,EAAAlJ,QAGAgD,GAgEA,SAAA25C,GAAAtI,GACA,QAAApgD,EAAAqnD,GAAAjxC,QAAAgqC,GAAA,EAAAzrC,EAAA0yC,GAAAv7C,OAA2D9L,EAAA2U,IAAU3U,EACrE,GAAAymD,GAAAY,GAAArnD,IAAA2mD,OACA,OAAAU,GAAArnD,GAkHA,IAmDA2oD,GAAApS,GAAA9gC,OAAA,CACA6I,WAAA,WACAljB,KAAA01C,oBACAyF,GAAAlrC,UAAAiT,WAAA/S,KAAAnQ,OAGAsoB,OAAA,WACA,IAAA7N,EAAAza,KACA6Z,EAAAY,EAAAZ,QACAuzC,EAAAvzC,EAAAuzC,OAAAvzC,EAAAuzC,KAAA,IACAF,EAAAzyC,EAAA0yC,SAAA,IAAAtU,GAAAC,MAAAj/B,EAAA2zC,SAAAC,MAaA,OAVAL,EAAA9U,QACArhC,QAAAy2C,KAAA,0EAOA7qC,GAAA3I,QAAAkzC,EAAAO,eAAAT,EAAA9U,WAEA+C,GAAAlrC,UAAAqY,OAAAxP,MAAA2B,EAAArK,YAMAmkB,cAAA,SAAAyqB,GAIA,OAHAA,QAAAvuC,IAAAuuC,EAAA95C,IACA85C,IAAA95C,GAEAi2C,GAAAlrC,UAAAskB,cAAApkB,KAAAnQ,KAAAg/C,IAGA5C,oBAAA,WACA,IAUAx3C,EAAA4yB,EAAAje,EAAAkkB,EAAA7V,EAAAgmC,EAVAnzC,EAAAza,KACAge,EAAAvD,EAAAuD,MACAkvC,EAAAzyC,EAAA0yC,SACAU,EAAApzC,EAAAZ,QAAAuzC,KACApI,EAAA6I,EAAA7I,MAAA,MACArhD,EAAAwnD,GACAtnD,EAAAonD,GACA6C,EAAA,GACAjmC,EAAA,GACA0K,EAAA,GAEAw7B,EAAA/vC,EAAA4J,KAAA2K,QAAA,GAGA,IAAA3tB,EAAA,EAAA2U,EAAAw0C,EAAAr9C,OAAuC9L,EAAA2U,IAAU3U,EACjD2tB,EAAA1M,KAAAwyB,GAAA59B,EAAAszC,EAAAnpD,KAIA,IAAAA,EAAA,EAAA2U,GAAAyE,EAAA4J,KAAAC,UAAA,IAAAnX,OAAwD9L,EAAA2U,IAAU3U,EAClE,GAAAoZ,EAAAuV,iBAAA3uB,GAIA,GAAAie,GAAAxK,UAHAuP,EAAA5J,EAAA4J,KAAAC,SAAAjjB,GAAAgjB,MAGA,IAGA,IAFAC,EAAAjjB,GAAA,GAEA4yB,EAAA,EAAAiG,EAAA7V,EAAAlX,OAAoC8mB,EAAAiG,IAAUjG,EAC9Co2B,EAAAvV,GAAA59B,EAAAmN,EAAA4P,IACAs2B,EAAAjoC,KAAA+nC,GACA/lC,EAAAjjB,GAAA4yB,GAAAo2B,MAEK,CACL,IAAAp2B,EAAA,EAAAiG,EAAAlL,EAAA7hB,OAAsC8mB,EAAAiG,IAAUjG,EAChDs2B,EAAAjoC,KAAA0M,EAAAiF,IAEA3P,EAAAjjB,GAAA2tB,EAAAriB,MAAA,QAGA2X,EAAAjjB,GAAA,GAIA2tB,EAAA7hB,SAEA6hB,EAAA45B,GAAA55B,GAAA6M,KAAA8sB,IACAvoD,EAAAC,KAAAD,MAAA4uB,EAAA,IACA1uB,EAAAD,KAAAC,MAAA0uB,IAAA7hB,OAAA,KAGAo9C,EAAAp9C,SACAo9C,EAAA3B,GAAA2B,GAAA1uB,KAAA8sB,IACAvoD,EAAAC,KAAAD,MAAAmqD,EAAA,IACAjqD,EAAAD,KAAAC,MAAAiqD,IAAAp9C,OAAA,KAGA/M,EAAA00C,GAAA59B,EAAAozC,EAAAlqD,QACAE,EAAAw0C,GAAA59B,EAAAozC,EAAAhqD,QAGAF,MAAAwnD,IAAA+B,EAAA1U,QAAA9yB,KAAAC,MAAAq/B,GAAArhD,EACAE,MAAAonD,IAAAiC,EAAAzU,MAAA/yB,KAAAC,MAAAq/B,GAAA,EAAAnhD,EAGA4W,EAAA9W,IAAAC,KAAAD,MAAAE,GACA4W,EAAA5W,IAAAD,KAAAC,IAAAF,EAAA,EAAAE,GAGA4W,EAAAuzC,YAAAvzC,EAAAkY,eACAlY,EAAAwzC,OAAA,GACAxzC,EAAAyzC,YAAA,CACAtmC,KAAAkmC,EACAjmC,WACA0K,WAIAgqB,WAAA,WACA,IAOA33C,EAAA2U,EAAAq0C,EAPAnzC,EAAAza,KACA2D,EAAA8W,EAAA9W,IACAE,EAAA4W,EAAA5W,IACAgW,EAAAY,EAAAZ,QACAg0C,EAAAh0C,EAAAuzC,KACAU,EAAA,GACA75B,EAAA,GAGA,OAAApa,EAAAoa,MAAAnd,QACA,WACAg3C,EAAArzC,EAAAyzC,YAAAtmC,KACA,MACA,aACAkmC,EAAArzC,EAAAyzC,YAAA37B,OACA,MACA,WACA,QACAu7B,EA/RA,SAAA96C,EAAArP,EAAAE,EAAAsqD,GACA,IAYAf,EAZAF,EAAAl6C,EAAAm6C,SACAtzC,EAAA7G,EAAA6G,QACAg0C,EAAAh0C,EAAAuzC,KACAnS,EAAA4S,EAAA7I,MAnDA,SAAAoJ,EAAAzqD,EAAAE,EAAAsqD,GACA,IACAvpD,EAAAypD,EADA90C,EAAA0yC,GAAAv7C,OAGA,IAAA9L,EAAAqnD,GAAAjxC,QA+CA6yC,EAAAO,SA/CiCxpD,EAAA2U,EAAA,IAAc3U,EAI/C,IAHAypD,EAAAhD,GAAAY,GAAArnD,KAGA2mD,QAAA3nD,KAAAwgD,MAAAvgD,EAAAF,KAFA0qD,EAAA7C,MAAA6C,EAAA7C,MAAA6C,EAAA7C,MAAA96C,OAAA,GAAAy6C,IAEAkD,EAAAjvC,QAAA+uC,EACA,OAAAlC,GAAArnD,GAIA,OAAAqnD,GAAA1yC,EAAA,GAsCA+0C,CAAAT,EAAAlqD,EAAAE,EAAAsqD,GACAjT,EAAAoS,GAAArS,GACAkJ,EAAA6G,GAAA6C,EAAA1J,SAAA0J,EAAAU,cACAC,EAAA,SAAAvT,GAAA4S,EAAAY,WACAC,EAAA70C,EAAAoa,MAAAinB,MAAApR,QACAukB,EAAAhD,GAAApQ,GACA0T,EAAAhrD,EACAyvB,EAAAvvB,EACAowB,EAAA,GAgCA,IA7BAkwB,IACAA,EAvFA,SAAAxgD,EAAAE,EAAAmhD,EAAAmJ,GACA,IAIAvpD,EAAA2U,EAAAqrC,EAJAlwB,EAAA7wB,EAAAF,EACA0qD,EAAAhD,GAqFApQ,GApFA2T,EAAAP,EAAAjvC,KACAosC,EAAA6C,EAAA7C,MAGA,IAAAA,EACA,OAAA5nD,KAAAwgD,KAAA1vB,GAAAy5B,EAAAS,IAGA,IAAAhqD,EAAA,EAAA2U,EAAAiyC,EAAA96C,OAAiC9L,EAAA2U,IACjCqrC,EAAA4G,EAAA5mD,KACAhB,KAAAwgD,KAAA1vB,GAAAk6B,EAAAhK,KAAAuJ,MAF2CvpD,GAO3C,OAAAggD,EAqEAiK,CAAAlrD,EAAAE,EAAAo3C,EAAAkT,IAIAK,IACAG,GAAAzB,EAAA1U,QAAAmW,EAAA,UAAAH,GACAp7B,GAAA85B,EAAA1U,QAAAplB,EAAA,UAAAo7B,IAIAG,GAAAzB,EAAA1U,QAAAmW,EAAAH,EAAA,MAAAvT,IACA7nB,GAAA85B,EAAA1U,QAAAplB,EAAAo7B,EAAA,MAAAvT,IAGAp3C,IACAuvB,GAAA85B,EAAA1lB,IAAApU,EAAA,EAAA6nB,IAGAmS,EAAAuB,EAEAD,GAAAxT,IAAAsT,IAAAX,EAAAl9C,QAIAy8C,GAAAF,EAAA1U,QAAA4U,EAAAlS,GACAkS,GAAAF,EAAA1lB,IAAA4lB,MAAAuB,EAAAvB,IAAAiB,EAAAjvC,KAAA+kC,MAAAlJ,IAGOmS,EAAAh6B,EAAag6B,GAAAF,EAAA1lB,IAAA4lB,EAAAjJ,EAAAlJ,GACpBhnB,EAAApO,MAAAunC,GAKA,OAFAn5B,EAAApO,MAAAunC,GAEAn5B,EA6OA66B,CAAAr0C,EAAA9W,EAAAE,EAAA4W,EAAAs0C,iBAAAprD,IAaA,IAVA,UAAAkW,EAAAoW,QAAA69B,EAAAp9C,SACA/M,EAAAmqD,EAAA,GACAjqD,EAAAiqD,IAAAp9C,OAAA,IAIA/M,EAAA00C,GAAA59B,EAAAozC,EAAAlqD,QACAE,EAAAw0C,GAAA59B,EAAAozC,EAAAhqD,QAGAe,EAAA,EAAA2U,EAAAu0C,EAAAp9C,OAAuC9L,EAAA2U,IAAU3U,GACjDgpD,EAAAE,EAAAlpD,KACAjB,GAAAiqD,GAAA/pD,GACAowB,EAAApO,KAAA+nC,GAiBA,OAbAnzC,EAAA9W,MACA8W,EAAA5W,MAGA4W,EAAAu0C,MAAAnB,EAAA7I,MAnVA,SAAAhyC,EAAAihB,EAAAm6B,EAAAzqD,EAAAE,GACA,IACAe,EAAAogD,EAEA,IAAApgD,EAHAqnD,GAAAv7C,OAGA,EAAmB9L,GAAAqnD,GAAAjxC,QAAAozC,GAA6BxpD,IAEhD,GAAAymD,GADArG,EAAAiH,GAAArnD,IACA2mD,QAAAv4C,EAAAm6C,SAAA5U,KAAA10C,EAAAF,EAAAqhD,IAAA/wB,EAAAvjB,OACA,OAAAs0C,EAIA,OAAAiH,GAAAmC,EAAAnC,GAAAjxC,QAAAozC,GAAA,GAwUAa,CAAAx0C,EAAAwZ,EAAA45B,EAAAO,QAAA3zC,EAAA9W,IAAA8W,EAAA5W,KACA4W,EAAAy0C,WAAA5B,GAAA7yC,EAAAu0C,OACAv0C,EAAAwzC,OA5gBA,SAAAH,EAAAnqD,EAAAE,EAAAsrD,GACA,cA2gBAt1C,EAAAs1C,eA3gBArB,EAAAp9C,OACA,OACA,CAAI08C,KAAAzpD,EAAAqiC,IAAA,GACJ,CAAIonB,KAAAvpD,EAAAmiC,IAAA,IAIJ,IAEAphC,EAAA2U,EAAAwa,EAAAC,EAAAW,EAFA43B,EAAA,GACA9tB,EAAA,CAAA96B,GAGA,IAAAiB,EAAA,EAAA2U,EAAAu0C,EAAAp9C,OAAsC9L,EAAA2U,IAAU3U,GAChDovB,EAAA85B,EAAAlpD,IACAjB,GAAAqwB,EAAAnwB,GACA46B,EAAA5Y,KAAAmO,GAMA,IAFAyK,EAAA5Y,KAAAhiB,GAEAe,EAAA,EAAA2U,EAAAklB,EAAA/tB,OAAiC9L,EAAA2U,IAAU3U,EAC3C+vB,EAAA8J,EAAA75B,EAAA,GAEAovB,EAAAyK,EAAA75B,QAGA6L,KAJAsjB,EAAA0K,EAAA75B,EAAA,UAIA6L,IAAAkkB,GAAA/wB,KAAA+M,OAAAgkB,EAAAZ,GAAA,KAAAC,GACAu4B,EAAA1mC,KAAA,CAAeunC,KAAAp5B,EAAAgS,IAAAphC,GAAA2U,EAAA,KAIf,OAAAgzC,EA4eA6C,CAAA30C,EAAAyzC,YAAAtmC,KAAAjkB,EAAAE,GACA4W,EAAA40C,SA/PA,SAAA9C,EAAAt4B,EAAAtwB,EAAAE,EAAAgW,GACA,IAEA80C,EAAAv7B,EAFAzP,EAAA,EACAgQ,EAAA,EAsBA,OAnBA9Z,EAAA6X,QAAAuC,EAAAvjB,SACAmJ,EAAAuzC,KAAAzpD,MACAgrD,EAAArC,GAAAC,EAAA,OAAAt4B,EAAA,UAEAtQ,EADA,IAAAsQ,EAAAvjB,OACA,EAAAi+C,GAEArC,GAAAC,EAAA,OAAAt4B,EAAA,UAAA06B,GAAA,GAGA90C,EAAAuzC,KAAAvpD,MACAuvB,EAAAk5B,GAAAC,EAAA,OAAAt4B,IAAAvjB,OAAA,UAEAijB,EADA,IAAAM,EAAAvjB,OACA0iB,GAEAA,EAAAk5B,GAAAC,EAAA,OAAAt4B,IAAAvjB,OAAA,eAKA,CAASiT,QAAAgQ,OAuOT27B,CAAA70C,EAAAwzC,OAAAh6B,EAAAtwB,EAAAE,EAAAgW,GAEAA,EAAAoa,MAAAhb,SACAgb,EAAAhb,UAvOA,SAAAjG,EAAAjC,EAAAw+C,GACA,IACA3qD,EAAA2U,EAAA5F,EAAAunC,EADAjnB,EAAA,GAGA,IAAArvB,EAAA,EAAA2U,EAAAxI,EAAAL,OAAkC9L,EAAA2U,IAAU3U,EAC5C+O,EAAA5C,EAAAnM,GACAs2C,IAAAqU,GAAA57C,KAAAX,EAAAm6C,SAAA3U,QAAA7kC,EAAA47C,GAEAt7B,EAAApO,KAAA,CACAlS,QACAunC,UAIA,OAAAjnB,EA4NAu7B,CAAA/0C,EAAAwZ,EAAAxZ,EAAAy0C,aAGApf,iBAAA,SAAAr4B,EAAAoP,GACA,IAAApM,EAAAza,KACAktD,EAAAzyC,EAAA0yC,SACAvlC,EAAAnN,EAAAuD,MAAA4J,KACAimC,EAAApzC,EAAAZ,QAAAuzC,KACA96B,EAAA1K,EAAA2K,QAAA9a,EAAAmQ,EAAA2K,OAAA7hB,OAAAkX,EAAA2K,OAAA9a,GAAA,GACA9D,EAAAiU,EAAAC,SAAAhB,GAAAe,KAAAnQ,GAKA,OAHAoL,GAAAxK,SAAA1E,KACA2e,EAAA7X,EAAA8Z,cAAA5gB,IAEAk6C,EAAA4B,cACAvC,EAAA5U,OAAA0U,GAAAvyC,EAAA6X,GAAAu7B,EAAA4B,eAEA,iBAAAn9B,EACAA,EAEA46B,EAAA5U,OAAA0U,GAAAvyC,EAAA6X,GAAAu7B,EAAAF,eAAA+B,WAOAC,mBAAA,SAAAvC,EAAA31C,EAAAwc,EAAAqkB,GACA,IACA4U,EADAltD,KACAmtD,SACAtzC,EAFA7Z,KAEA6Z,QACAu+B,EAAAv+B,EAAAuzC,KAAAO,eACAiC,EAAAxX,EAJAp4C,KAIAgvD,OACAO,EALAvvD,KAKAkvD,WACAW,EAAAzX,EAAAmX,GACAO,GAAA5C,EAAA1U,QAAA4U,EAAAmC,GACAQ,EAAAl2C,EAAAoa,MAAAinB,MACAA,EAAA6U,EAAAjmB,SAAAylB,GAAAM,GAAAzC,IAAA0C,EACAx9B,EAAA46B,EAAA5U,OAAA8U,EAAA9U,IAAA4C,EAAA2U,EAAAD,IACAzS,EAAAjC,EAAA6U,EAAAl2C,EAAAoa,MAAAgnB,MACA+U,EAAAhF,GAAA7N,EAAAxkC,SAAAwkC,EAAAC,cAEA,OAAA4S,IAAA19B,EAAA7a,EAAAwc,GAAA3B,GAGAoqB,qBAAA,SAAAzoB,GACA,IACArvB,EAAA2U,EADAgZ,EAAA,GAGA,IAAA3tB,EAAA,EAAA2U,EAAA0a,EAAAvjB,OAAkC9L,EAAA2U,IAAU3U,EAC5C2tB,EAAA1M,KAAA7lB,KAAA2vD,mBAAA17B,EAAArvB,GAAA+O,MAAA/O,EAAAqvB,IAGA,OAAA1B,GAMA09B,kBAAA,SAAA7C,GACA,IAAA3yC,EAAAza,KACAkwD,EAAAz1C,EAAAZ,QAAAoa,MAAAhb,QACAmG,EAAA3E,EAAAuzC,YAAAvzC,EAAA0D,MAAA1D,EAAA2D,OACAuF,EAAAlJ,EAAAuzC,YAAAkC,EAAAz1C,EAAAgE,MAAAhE,EAAA8D,KAAA2xC,EAAAz1C,EAAAiE,OAAAjE,EAAA+D,IACAwnB,EAAAsmB,GAAA7xC,EAAAwzC,OAAA,OAAAb,EAAA,OACA17B,EAAAtS,GAAA3E,EAAA40C,SAAA1rC,MAAAqiB,IAAAvrB,EAAA40C,SAAA1rC,MAAA,EAAAlJ,EAAA40C,SAAA17B,KAEA,OAAAu8B,EAAAvsC,EAAA+N,EAAA/N,EAAA+N,GAGAmC,iBAAA,SAAAlgB,EAAA8D,EAAAoP,GACA,IACAumC,EAAA,KAUA,QARA38C,IAAAgH,QAAAhH,IAAAoW,IACAumC,EAJAptD,KAIAkuD,YAAArmC,SAAAhB,GAAApP,IAGA,OAAA21C,IACAA,EAAA/U,GARAr4C,KAQA2T,IAGA,OAAAy5C,EACA,OAZAptD,KAYAiwD,kBAAA7C,IAIAj5B,gBAAA,SAAA1c,GACA,IAAAwc,EAAAj0B,KAAAk0B,WACA,OAAAzc,GAAA,GAAAA,EAAAwc,EAAAvjB,OACA1Q,KAAAiwD,kBAAAh8B,EAAAxc,GAAA9D,OACA,MAGAsrC,iBAAA,SAAAC,GACA,IAAAzkC,EAAAza,KACAof,EAAA3E,EAAAuzC,YAAAvzC,EAAA0D,MAAA1D,EAAA2D,OAGAgvC,EAAAd,GAAA7xC,EAAAwzC,OAAA,OADA7uC,GAAA8/B,GADAzkC,EAAAuzC,YAAAvzC,EAAA8D,KAAA9D,EAAA+D,MACAY,EAAA,IAAA3E,EAAA40C,SAAA1rC,MAAA,EAAAlJ,EAAA40C,SAAA1rC,OAAAlJ,EAAA40C,SAAA17B,IACA,QAGA,OAAAlZ,EAAA0yC,SAAAzU,QAAA0U,IAOA+C,cAAA,SAAA79B,GACA,IACA89B,EADApwD,KACA6Z,QAAAoa,MACAo8B,EAFArwD,KAEAie,IAAAwyB,YAAAne,GAAAnU,MACA6N,EAAAnJ,GAAA+6B,UAAAwS,EAAAxV,aACA2C,EAAA35C,KAAAuC,IAAA6lB,GACA0yB,EAAA96C,KAAAwC,IAAA4lB,GAGA,OAAAqkC,EAAA9S,EAFAyN,GAAAoF,EAAAjuC,SAAAP,GAAAtiB,OAAAkiB,iBAEAk9B,GAMAqQ,iBAAA,SAAAuB,GACA,IAAA71C,EAAAza,KAIAuwD,EAAA91C,EAAAk1C,mBAAAW,EAAA,KADA71C,EAAAZ,QAAAuzC,KAAAO,eAAArC,aAEA+E,EAAA51C,EAAA01C,cAAAI,GACAC,EAAA/1C,EAAAkY,eAAAlY,EAAA0D,MAAA1D,EAAA2D,OACA+vC,EAAAvqD,KAAAkB,MAAA0rD,EAAAH,GAEA,OAAAlC,EAAA,EAAAA,EAAA,KAMAZ,GAAA/J,UArWA,CACAjuB,SAAA,SASA45B,aAAA,SASAl/B,OAAA,OAEAu9B,SAAA,GACAJ,KAAA,CACAC,QAAA,EACA/U,QAAA,EACA0M,MAAA,EACAr0C,OAAA,EACA8/C,eAAA,EACAhC,YAAA,EACAL,QAAA,cACAT,eAAA,IAEA15B,MAAA,CACA6mB,UAAA,EAUAhkC,OAAA,OAEAokC,MAAA,CACApR,SAAA,KAyTA,IAAAtiB,GAAA,CACAkpC,SAAAhO,GACAnnC,OAAAqqC,GACAnM,YAAAgN,GACAkK,aAAApI,GACA6E,KAAAG,IAGAqD,GAAA,CACAlB,SAAA,yBACApE,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,QAGAnT,GAAAC,MAAAH,SAAA,mBAAA54C,EAAA,CACA8wD,IAAA,SAEAzY,QAAA,WACA,OAAAwY,IAGAvY,MAAA,SAAA1kC,EAAA2kC,GAMA,MALA,iBAAA3kC,GAAA,iBAAA2kC,EACA3kC,EAAA5T,EAAA4T,EAAA2kC,GACG3kC,aAAA5T,IACH4T,EAAA5T,EAAA4T,IAEAA,EAAAG,UAAAH,EAAAm9C,UAAA,MAGAxY,OAAA,SAAA8U,EAAA9U,GACA,OAAAv4C,EAAAqtD,GAAA9U,WAGA9Q,IAAA,SAAA4lB,EAAA2D,EAAA/L,GACA,OAAAjlD,EAAAqtD,GAAA5lB,IAAAupB,EAAA/L,GAAA8L,WAGAvY,KAAA,SAAA10C,EAAAF,EAAAqhD,GACA,OAAAjlD,EAAAklB,SAAAllB,EAAA8D,GAAA00C,KAAAx4C,EAAA4D,KAAAqtD,GAAAhM,IAGAxM,QAAA,SAAA4U,EAAApI,EAAAwJ,GAEA,OADApB,EAAArtD,EAAAqtD,GACA,YAAApI,EACAoI,EAAAqB,WAAAD,GAAAsC,UAEA1D,EAAA5U,QAAAwM,GAAA8L,WAGArY,MAAA,SAAA2U,EAAApI,GACA,OAAAjlD,EAAAqtD,GAAA3U,MAAAuM,GAAA8L,WAWApY,QAAA,SAAA0U,GACA,OAAArtD,EAAAqtD,KAEC,IAEDxrC,GAAAT,KAAA,UACA+mB,QAAA,CACA+oB,OAAA,CACAC,WAAA,MAKA,IAAAC,GAAA,CACA9pC,QAAA,SAAAvQ,GACA,IAAAW,EAAAX,EAAA4I,KACA1B,EAAAlH,EAAAkH,MACAmJ,EAAAnJ,EAAA8J,eAAArQ,GAEAsW,EADA5G,GAAAnJ,EAAAuV,iBAAA9b,IACA0P,EAAAE,QAAA2G,WAAA,GACAtd,EAAAqd,EAAArd,QAAA,EAEA,OAAAA,EAAA,SAAAoP,EAAAlb,GACA,OAAAA,EAAA8L,GAAAqd,EAAAnpB,GAAAye,OAAA,MADA,MAKA+tC,SAAA,SAAAt6C,GACA,IAAAs6C,EAAAt6C,EAAAs6C,SACA/sD,EAAA+sD,IAAA/sD,EAAA,KACAC,EAAA8sD,IAAA9sD,EAAA,KAEA,gBAAAwb,GACA,OACAzb,EAAA,OAAAA,EAAAyb,EAAAzb,IACAC,EAAA,OAAAA,EAAAwb,EAAAxb,QAOA,SAAA+sD,GAAAvtB,EAAArsB,EAAAmT,GACA,IAEA7T,EAFA2M,EAAAogB,EAAAxgB,QAAA,GACA5D,EAAAgE,EAAAhE,KAOA,QAJAjP,IAAAiP,IACAA,IAAAgE,EAAAyG,kBAGA,IAAAzK,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAIA,GADA3I,EAAAhE,WAAA2M,EAAA,IACApH,SAAAvB,IAAAnT,KAAAkB,MAAAiS,OAKA,MAJA,MAAA2I,EAAA,UAAAA,EAAA,KACA3I,EAAAU,EAAAV,KAGAA,IAAAU,GAAAV,EAAA,GAAAA,GAAA6T,IAIA7T,EAGA,OAAA2I,GAEA,aACA,cACA,UACA,YACA,WACA,eAEA,aACA,YACA,UACA,OAAAA,EAEA,QACA,UAIA,SAAA4xC,GAAAx6C,GACA,IAIA4Z,EAJAhN,EAAA5M,EAAAgtB,GAAAxgB,QAAA,GACAtQ,EAAA8D,EAAAgtB,GAAAjK,QAAA,GACAna,EAAA5I,EAAA4I,KACA3I,EAAA,KAGA,GAAAuB,SAAAoH,GACA,YAmBA,GAZA,UAAAA,EACA3I,OAAAtG,IAAAiT,EAAA6tC,YAAAv+C,EAAA0L,OAAAgF,EAAA6tC,YACE,QAAA7xC,EACF3I,OAAAtG,IAAAiT,EAAA8tC,SAAAx+C,EAAAwL,IAAAkF,EAAA8tC,cACE/gD,IAAAiT,EAAA+tC,UACF16C,EAAA2M,EAAA+tC,UACEz+C,EAAAq3C,gBACFtzC,EAAA/D,EAAAq3C,kBACEr3C,EAAA0f,eACF3b,EAAA/D,EAAA0f,gBAGA3b,QAAA,CACA,QAAAtG,IAAAsG,EAAA1S,QAAAoM,IAAAsG,EAAAzS,EACA,OAAAyS,EAGA,GAAA8L,GAAAvK,SAAAvB,GAEA,OACA1S,GAFAqsB,EAAA1d,EAAA2f,gBAEA5b,EAAA,KACAzS,EAAAosB,EAAA,KAAA3Z,GAKA,YAGA,SAAA26C,GAAAv3C,EAAA1C,EAAAy5C,GACA,IAGAn6C,EAFA2I,EADAvF,EAAA1C,GACAiI,KACAiyC,EAAA,CAAAl6C,GAGA,IAAAy5C,EACA,OAAAxxC,EAGA,UAAAA,IAAA,IAAAiyC,EAAA32C,QAAA0E,IAAA,CACA,IAAApH,SAAAoH,GACA,OAAAA,EAIA,KADA3I,EAAAoD,EAAAuF,IAEA,SAGA,GAAA3I,EAAA66C,QACA,OAAAlyC,EAGAiyC,EAAA9rC,KAAAnG,GACAA,EAAA3I,EAAA2I,KAGA,SAGA,SAAAmyC,GAAA/6C,GACA,IAAA4I,EAAA5I,EAAA4I,KACA9I,EAAA,UAEA,WAAA8I,EACA,MAGApH,SAAAoH,KACA9I,EAAA,YAGAu6C,GAAAv6C,GAAAE,IAGA,SAAAg7C,GAAAhyC,GACA,OAAAA,MAAA0O,KAGA,SAAAujC,GAAA9zC,EAAA+zC,EAAAC,EAAAC,EAAAC,GACA,IAAAvtD,EAEA,GAAAstD,GAAAC,EAAA,CAMA,IADAl0C,EAAAU,OAAAqzC,EAAA,GAAA3tD,EAAA2tD,EAAA,GAAA1tD,GACAM,EAAA,EAAYA,EAAAstD,IAAUttD,EACtBie,GAAAC,OAAAtD,OAAAvB,EAAA+zC,EAAAptD,EAAA,GAAAotD,EAAAptD,IAOA,IAHAqZ,EAAAuB,OAAAyyC,EAAAE,EAAA,GAAA9tD,EAAA4tD,EAAAE,EAAA,GAAA7tD,GAGAM,EAAAutD,EAAA,EAAmBvtD,EAAA,IAAOA,EAC1Bie,GAAAC,OAAAtD,OAAAvB,EAAAg0C,EAAArtD,GAAAqtD,EAAArtD,EAAA,QAiDA,IAAAwtD,GAAA,CACAx6C,GAAA,SAEAy6C,oBAAA,SAAAr0C,EAAAnE,GACA,IAGAsN,EAAAviB,EAAAk/B,EAAAhtB,EAHA8T,GAAA5M,EAAA4J,KAAAC,UAAA,IAAAnX,OACAwgD,EAAAr3C,EAAAq3C,UACA/2C,EAAA,GAGA,IAAAvV,EAAA,EAAaA,EAAAgmB,IAAWhmB,EAGxBkS,EAAA,MADAgtB,GADA3c,EAAAnJ,EAAA8J,eAAAljB,IACAyiB,UAGAyc,EAAAxgB,QAAAwgB,aAAAla,GAAAqH,OACAna,EAAA,CACA86C,QAAA5zC,EAAAuV,iBAAA3uB,GACA8a,KAAA2xC,GAAAvtB,EAAAl/B,EAAAgmB,GACA5M,QACA8lB,OAIA3c,EAAAmrC,QAAAx7C,EACAqD,EAAA0L,KAAA/O,GAGA,IAAAlS,EAAA,EAAaA,EAAAgmB,IAAWhmB,GACxBkS,EAAAqD,EAAAvV,MAKAkS,EAAA4I,KAAAgyC,GAAAv3C,EAAAvV,EAAAssD,GACAp6C,EAAAs6C,SAAAE,GAAAx6C,GACAA,EAAAy7C,OAAAV,GAAA/6C,KAIA07C,kBAAA,SAAAx0C,EAAArd,GACA,IAAAwmB,EAAAxmB,EAAAwmB,KAAAmrC,QACA,GAAAnrC,EAAA,CAIA,IAAAlJ,EAAAD,EAAAC,IACA6lB,EAAA3c,EAAA2c,GACAlgB,EAAAkgB,EAAAzgB,MACA0K,EAAA+V,EAAA9V,WAAA,GACAukC,EAAAprC,EAAAorC,OACAvY,EAAAp2B,EAAAuG,iBAAAvI,GAAAtiB,OAAA+hB,aAEAkxC,GAAAvY,GAAAjsB,EAAArd,SACAmS,GAAAC,OAAA9C,SAAA/B,EAAAD,EAAAoR,WAlGA,SAAAnR,EAAA8P,EAAAwkC,EAAA3uC,EAAAo2B,EAAAyY,GACA,IAMA7tD,EAAA2U,EAAA9B,EAAAi7C,EAAAC,EAAAC,EAAAC,EANAjoC,EAAAmD,EAAArd,OACAq8C,EAAAnpC,EAAAkK,SACAkkC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EAKA,IAFAl0C,EAAAsB,YAEA3a,EAAA,EAAA2U,EAAAqR,IAAA6nC,EAAqC7tD,EAAA2U,IAAU3U,EAG/C+tD,EAAAJ,EADAG,EAAA3kC,EADAtW,EAAA7S,EAAAgmB,GACAvH,MACA5L,EAAAmM,GACAgvC,EAAAd,GAAAY,GACAG,EAAAf,GAAAa,GAEAC,GAAAC,GACAX,EAAAF,EAAAnsC,KAAA6sC,GACAP,EAAAF,EAAApsC,KAAA8sC,IACGT,GAAAC,IACHpF,GAMA6F,GACAZ,EAAAnsC,KAAA6sC,GAEAG,GACAZ,EAAApsC,KAAA8sC,KATAZ,GAAA9zC,EAAA+zC,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,EAAA,GACAC,EAAA,KAYAF,GAAA9zC,EAAA+zC,EAAAC,EAAAC,EAAAC,GAEAl0C,EAAAY,YACAZ,EAAA+O,UAAAgtB,EACA/7B,EAAAyB,OAyDAozC,CAAA70C,EAAA8P,EAAAwkC,EAAA3uC,EAAAo2B,EAAAlW,EAAA3V,OACAtL,GAAAC,OAAA3C,WAAAlC,OAKA80C,GAAAlwC,GAAA9K,KACAi7C,GAAAnwC,GAAArK,eAoFA,SAAAy6C,GAAAC,EAAA/wC,GACA,OAAA+wC,EAAAC,eAAAD,EAAAE,SAAAjxC,EACAA,EACA+wC,EAAAE,SArFAxxC,GAAAT,KAAA,UACAwV,OAAA,CACA0E,SAAA,EACA9F,SAAA,MACAoK,WAAA,EACA1mB,SAAA,EACA1C,OAAA,IAGAwgB,QAAA,SAAAp3B,EAAAq3B,GACA,IAAAvf,EAAAuf,EAAAnQ,aACAwsC,EAAArzD,KAAAge,MACAmJ,EAAAksC,EAAAvrC,eAAArQ,GAGA0P,EAAAhE,OAAA,OAAAgE,EAAAhE,QAAAkwC,EAAAzrC,KAAAC,SAAApQ,GAAA0L,OAAA,KAGAkwC,EAAA/qC,UAGAqrB,QAAA,KACA2f,QAAA,KAEA/gC,OAAA,CACA6gC,SAAA,GACAjkC,QAAA,GAYAyH,eAAA,SAAA5Y,GACA,IAAA4J,EAAA5J,EAAA4J,KACA,OAAA/E,GAAA3K,QAAA0P,EAAAC,UAAAD,EAAAC,SAAAnO,IAAA,SAAA2N,EAAAziB,GACA,OACA6xB,KAAApP,EAAAiL,MACAtF,UAAAnK,GAAA3K,QAAAmP,EAAA8C,iBAAA9C,EAAA8C,gBAAA,GAAA9C,EAAA8C,gBACAhH,QAAAnF,EAAAuV,iBAAA3uB,GACAwpB,QAAA/G,EAAAiG,eACAimC,SAAAlsC,EAAAkG,WACAe,eAAAjH,EAAAmG,iBACAN,SAAA7F,EAAAoG,gBACAR,UAAA5F,EAAAgD,YACA8C,YAAA9F,EAAA+C,YACA0E,WAAAzH,EAAAyH,WAGAjI,aAAAjiB,IAEK5E,MAAA,MAKLw2B,eAAA,SAAAxY,GACA,IAAAyY,EAAA,GACAA,EAAA5Q,KAAA,cAAA7H,EAAApG,GAAA,aACA,QAAAhT,EAAA,EAAiBA,EAAAoZ,EAAA4J,KAAAC,SAAAnX,OAAgC9L,IACjD6xB,EAAA5Q,KAAA,qCAAA7H,EAAA4J,KAAAC,SAAAjjB,GAAAulB,gBAAA,aACAnM,EAAA4J,KAAAC,SAAAjjB,GAAA0tB,OACAmE,EAAA5Q,KAAA7H,EAAA4J,KAAAC,SAAAjjB,GAAA0tB,OAEAmE,EAAA5Q,KAAA,SAGA,OADA4Q,EAAA5Q,KAAA,SACA4Q,EAAAC,KAAA,OAmBA,IAAA88B,GAAAnvC,GAAAhK,OAAA,CAEA6I,WAAA,SAAA8hB,GACAniB,GAAAxI,OAAAra,KAAAglC,GAGAhlC,KAAAyzD,eAAA,GAKAzzD,KAAA0zD,aAAA,KAGA1zD,KAAA2zD,cAAA,GAOAlY,aAAAsX,GACAzqC,OAAA,SAAAozB,EAAAC,EAAAC,GACA,IAAAnhC,EAAAza,KA0BA,OAvBAya,EAAAghC,eAGAhhC,EAAAihC,WACAjhC,EAAAkhC,YACAlhC,EAAAmhC,UAGAnhC,EAAAuhC,sBACAvhC,EAAAwhC,gBACAxhC,EAAAyhC,qBAEAzhC,EAAAm5C,oBACAn5C,EAAAo5C,cACAp5C,EAAAq5C,mBAGAr5C,EAAAsiC,YACAtiC,EAAAuiC,MACAviC,EAAAwiC,WAEAxiC,EAAAyiC,cAEAziC,EAAAmd,SAEAslB,YAAA6V,GAIA/W,oBAAA+W,GACA9W,cAAA,WACA,IAAAxhC,EAAAza,KAEAya,EAAAkY,gBAEAlY,EAAA0D,MAAA1D,EAAAihC,SACAjhC,EAAA8D,KAAA,EACA9D,EAAAgE,MAAAhE,EAAA0D,QAEA1D,EAAA2D,OAAA3D,EAAAkhC,UAGAlhC,EAAA+D,IAAA,EACA/D,EAAAiE,OAAAjE,EAAA2D,QAIA3D,EAAA2gC,YAAA,EACA3gC,EAAA4gC,WAAA,EACA5gC,EAAA6gC,aAAA,EACA7gC,EAAA8gC,cAAA,EAGA9gC,EAAAmd,QAAA,CACAzZ,MAAA,EACAC,OAAA,IAGA89B,mBAAA6W,GAIAa,kBAAAb,GACAc,YAAA,WACA,IAAAp5C,EAAAza,KACAkzD,EAAAz4C,EAAAZ,QAAA0Y,QAAA,GACAwhC,EAAAlxC,GAAAlK,SAAAu6C,EAAAt8B,eAAA,CAAAnc,EAAAuD,OAAAvD,IAAA,GAEAy4C,EAAAr4B,SACAk5B,IAAAl5B,OAAA,SAAA3f,GACA,OAAAg4C,EAAAr4B,OAAA3f,EAAAT,EAAAuD,MAAA4J,SAIAnN,EAAAZ,QAAAZ,SACA86C,EAAA96C,UAGAwB,EAAAs5C,eAEAD,iBAAAf,GAIAhW,UAAAgW,GACA/V,IAAA,WACA,IAAAviC,EAAAza,KACAy3B,EAAAhd,EAAAZ,QACAq5C,EAAAz7B,EAAAlF,OACA8I,EAAA5D,EAAA4D,QAEApd,EAAAxD,EAAAwD,IAEA+1C,EAAAnxC,GAAAhJ,QAAAoI,WAAAixC,GACA/wC,EAAA6xC,EAAA50C,KAGA60C,EAAAx5C,EAAAg5C,eAAA,GAEA77B,EAAAnd,EAAAmd,QACAjF,EAAAlY,EAAAkY,eAWA,GATAA,GACAiF,EAAAzZ,MAAA1D,EAAAihC,SACA9jB,EAAAxZ,OAAAid,EAAA,OAEAzD,EAAAzZ,MAAAkd,EAAA,KACAzD,EAAAxZ,OAAA3D,EAAAkhC,WAIAtgB,EAGA,GAFApd,EAAAmE,KAAA4xC,EAAAriD,OAEAghB,EAAA,CAIA,IAAAuhC,EAAAz5C,EAAAy5C,WAAA,IACAC,EAAA,EAEAl2C,EAAAg0B,UAAA,OACAh0B,EAAAi0B,aAAA,MAEArvB,GAAA9J,KAAA0B,EAAAs5C,YAAA,SAAA/8B,EAAApyB,GACA,IACAuZ,EADA80C,GAAAC,EAAA/wC,GACAA,EAAA,EAAAlE,EAAAwyB,YAAAzZ,EAAAP,MAAAtY,OAEA,IAAAvZ,GAAAsvD,IAAAxjD,OAAA,GAAAyN,EAAA+0C,EAAA/jC,QAAAyI,EAAAzZ,SACAg2C,GAAAhyC,EAAA+wC,EAAA/jC,QACA+kC,IAAAxjD,QAAA9L,EAAA,QAAAsuD,EAAA/jC,SAIA8kC,EAAArvD,GAAA,CACA2Z,KAAA,EACAC,IAAA,EACAL,QACAC,OAAA+D,GAGA+xC,IAAAxjD,OAAA,IAAAyN,EAAA+0C,EAAA/jC,UAGAyI,EAAAxZ,QAAA+1C,MAEI,CACJ,IAAAC,EAAAlB,EAAA/jC,QACAklC,EAAA55C,EAAA45C,aAAA,GACAC,EAAApB,EAAA/jC,QACAolC,EAAA,EACAC,EAAA,EACAC,EAAAtyC,EAAAiyC,EAEAvxC,GAAA9J,KAAA0B,EAAAs5C,YAAA,SAAA/8B,EAAApyB,GACA,IACA8vD,EADAzB,GAAAC,EAAA/wC,GACAA,EAAA,EAAAlE,EAAAwyB,YAAAzZ,EAAAP,MAAAtY,MAGAvZ,EAAA,GAAA4vD,EAAAC,EAAA78B,EAAAxZ,OAAAg2C,IACAE,GAAAC,EAAArB,EAAA/jC,QACAklC,EAAAxuC,KAAA0uC,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAA3wD,KAAAC,IAAA0wD,EAAAG,GACAF,GAAAC,EAGAR,EAAArvD,GAAA,CACA2Z,KAAA,EACAC,IAAA,EACAL,MAAAu2C,EACAt2C,OAAA+D,KAIAmyC,GAAAC,EACAF,EAAAxuC,KAAA0uC,GACA38B,EAAAzZ,OAAAm2C,EAIA75C,EAAA0D,MAAAyZ,EAAAzZ,MACA1D,EAAA2D,OAAAwZ,EAAAxZ,QAEA6+B,SAAA8V,GAGApgC,aAAA,WACA,cAAA3yB,KAAA6Z,QAAA0b,UAAA,WAAAv1B,KAAA6Z,QAAA0b,UAIA1L,KAAA,WACA,IAAApP,EAAAza,KACAy3B,EAAAhd,EAAAZ,QACAq5C,EAAAz7B,EAAAlF,OACArQ,EAAAN,GAAAtiB,OACA+hB,EAAAa,EAAAb,aACAszC,EAAAzyC,EAAA0H,SAAAyD,KACAunC,EAAAn6C,EAAA0D,MACA+1C,EAAAz5C,EAAAy5C,WAEA,GAAAz8B,EAAA4D,QAAA,CACA,IAIAw5B,EAJA52C,EAAAxD,EAAAwD,IACAsiC,EAAAyS,GAAAE,EAAA3S,UAAAr+B,EAAAZ,kBACA0yC,EAAAnxC,GAAAhJ,QAAAoI,WAAAixC,GACA/wC,EAAA6xC,EAAA50C,KAIAnB,EAAAg0B,UAAA,OACAh0B,EAAAi0B,aAAA,SACAj0B,EAAAgP,UAAA,GACAhP,EAAAkP,YAAAozB,EACAtiC,EAAA+O,UAAAuzB,EACAtiC,EAAAmE,KAAA4xC,EAAAriD,OAEA,IAAAyhD,EAAAH,GAAAC,EAAA/wC,GACA8xC,EAAAx5C,EAAAg5C,eA6DA9gC,EAAAlY,EAAAkY,eAEAkiC,EADAliC,EACA,CACAtuB,EAAAoW,EAAA8D,MAAAq2C,EAAAV,EAAA,MAAAhB,EAAA/jC,QACA7qB,EAAAmW,EAAA+D,IAAA00C,EAAA/jC,QACA9B,KAAA,GAGA,CACAhpB,EAAAoW,EAAA8D,KAAA20C,EAAA/jC,QACA7qB,EAAAmW,EAAA+D,IAAA00C,EAAA/jC,QACA9B,KAAA,GAIA,IAAAonC,EAAAtyC,EAAA+wC,EAAA/jC,QACAtM,GAAA9J,KAAA0B,EAAAs5C,YAAA,SAAA/8B,EAAApyB,GACA,IAAAkwD,EAAA72C,EAAAwyB,YAAAzZ,EAAAP,MAAAtY,MACAA,EAAAi1C,EAAAjxC,EAAA,EAAA2yC,EACAzwD,EAAAwwD,EAAAxwD,EACAC,EAAAuwD,EAAAvwD,EAKAquB,EACA/tB,EAAA,GAAAP,EAAA8Z,EAAA+0C,EAAA/jC,QAAA1U,EAAA8D,KAAA9D,EAAAmd,QAAAzZ,QACA7Z,EAAAuwD,EAAAvwD,GAAAmwD,EACAI,EAAAxnC,OACAhpB,EAAAwwD,EAAAxwD,EAAAoW,EAAA8D,MAAAq2C,EAAAV,EAAAW,EAAAxnC,OAAA,EAAA6lC,EAAA/jC,SAEKvqB,EAAA,GAAAN,EAAAmwD,EAAAh6C,EAAA+D,IAAA/D,EAAAmd,QAAAxZ,SACL/Z,EAAAwwD,EAAAxwD,IAAAoW,EAAA45C,aAAAQ,EAAAxnC,MAAA6lC,EAAA/jC,QACA7qB,EAAAuwD,EAAAvwD,EAAAmW,EAAA+D,IAAA00C,EAAA/jC,QACA0lC,EAAAxnC,QA5FA,SAAAhpB,EAAAC,EAAA0yB,GACA,KAAA/jB,MAAAmgD,OAAA,IAKAn1C,EAAAgC,OAEA,IAAAgN,EAAA+lC,GAAAh8B,EAAA/J,UAAA0nC,EAAAtqC,aAaA,GAZApM,EAAA+O,UAAAgmC,GAAAh8B,EAAAhK,UAAA3L,GACApD,EAAAmQ,QAAA4kC,GAAAh8B,EAAA5I,QAAAumC,EAAArnC,gBACArP,EAAAqQ,eAAA0kC,GAAAh8B,EAAA1I,eAAAqmC,EAAAnnC,kBACAvP,EAAAiP,SAAA8lC,GAAAh8B,EAAA9J,SAAAynC,EAAAlnC,iBACAxP,EAAAgP,YACAhP,EAAAkP,YAAA6lC,GAAAh8B,EAAA7J,YAAA9L,GAEApD,EAAAoQ,aAEApQ,EAAAoQ,YAAA2kC,GAAAh8B,EAAAu8B,SAAAoB,EAAApnC,aAGAkK,EAAAlF,QAAAkF,EAAAlF,OAAA4gC,cAAA,CAGA,IAAA70C,EAAA80C,EAAAxvD,KAAAmxD,MAAA,EAKAlyC,GAAAC,OAAA/D,UAAAd,EAAA+Y,EAAAlI,WAAAxQ,EAJAja,EAAA+uD,EAAA,EACA9uD,EAAA6d,EAAA,QAMA,IAAA8K,GACAhP,EAAAy0B,WAAAruC,EAAAC,EAAA8uD,EAAAjxC,GAEAlE,EAAA+S,SAAA3sB,EAAAC,EAAA8uD,EAAAjxC,GAGAlE,EAAAmC,WAyDA40C,CAAA3wD,EAAAC,EAAA0yB,GAEAi9B,EAAArvD,GAAA2Z,KAAAla,EACA4vD,EAAArvD,GAAA4Z,IAAAla,EA1DA,SAAAD,EAAAC,EAAA0yB,EAAA89B,GACA,IAAAG,EAAA9yC,EAAA,EACA+yC,EAAA9B,EAAA6B,EAAA5wD,EACA8wD,EAAA7wD,EAAA2wD,EAEAh3C,EAAAk0B,SAAAnb,EAAAP,KAAAy+B,EAAAC,GAEAn+B,EAAA7T,SAEAlF,EAAAsB,YACAtB,EAAAgP,UAAA,EACAhP,EAAAU,OAAAu2C,EAAAC,GACAl3C,EAAAuB,OAAA01C,EAAAJ,EAAAK,GACAl3C,EAAA0B,UAgDAwyB,CAAA9tC,EAAAC,EAAA0yB,EAAA89B,GAEAniC,EACAkiC,EAAAxwD,GAAA8Z,EAAA+0C,EAAA/jC,QAEA0lC,EAAAvwD,GAAAmwD,MAUAW,iBAAA,SAAA/wD,EAAAC,GACA,IACAM,EAAAywD,EAAAC,EADA76C,EAAAza,KAGA,GAAAqE,GAAAoW,EAAA8D,MAAAla,GAAAoW,EAAAgE,OAAAna,GAAAmW,EAAA+D,KAAAla,GAAAmW,EAAAiE,OAGA,IADA42C,EAAA76C,EAAAg5C,eACA7uD,EAAA,EAAcA,EAAA0wD,EAAA5kD,SAAe9L,EAG7B,GAAAP,IAFAgxD,EAAAC,EAAA1wD,IAEA2Z,MAAAla,GAAAgxD,EAAA92C,KAAA82C,EAAAl3C,OAAA7Z,GAAA+wD,EAAA72C,KAAAla,GAAA+wD,EAAA72C,IAAA62C,EAAAj3C,OAEA,OAAA3D,EAAAs5C,YAAAnvD,GAKA,aAQAmuC,YAAA,SAAApzC,GACA,IAGA41D,EAHA96C,EAAAza,KACAy3B,EAAAhd,EAAAZ,QACAjD,EAAA,YAAAjX,EAAAiX,KAAA,QAAAjX,EAAAiX,KAGA,iBAAAA,GACA,IAAA6gB,EAAAkc,UAAAlc,EAAA67B,QACA,WAEG,cAAA18C,EAKH,OAJA,IAAA6gB,EAAAV,QACA,OAOAw+B,EAAA96C,EAAA26C,iBAAAz1D,EAAA0E,EAAA1E,EAAA2E,GAEA,UAAAsS,EACA2+C,GAAA99B,EAAAV,SAEAU,EAAAV,QAAA5mB,KAAAsK,EAAA9a,EAAA29B,OAAAi4B,IAGA99B,EAAA67B,SAAAiC,IAAA96C,EAAAi5C,eACAj5C,EAAAi5C,cACAj8B,EAAA67B,QAAAnjD,KAAAsK,EAAA9a,EAAA29B,OAAA7iB,EAAAi5C,cAEAj5C,EAAAi5C,aAAA6B,GAGA99B,EAAAkc,SAAA4hB,GAEA99B,EAAAkc,QAAAxjC,KAAAsK,EAAA9a,EAAA29B,OAAAi4B,OAMA,SAAAC,GAAAx3C,EAAAy3C,GACA,IAAA9+B,EAAA,IAAA68B,GAAA,CACAv1C,IAAAD,EAAAC,IACApE,QAAA47C,EACAz3C,UAGAyhB,GAAAK,UAAA9hB,EAAA2Y,EAAA8+B,GACAh2B,GAAAC,OAAA1hB,EAAA2Y,GACA3Y,EAAA2Y,SAGA,IAAA++B,GAAA,CACA99C,GAAA,SASA+9C,SAAAnC,GAEAoC,WAAA,SAAA53C,GACA,IAAAy3C,EAAAz3C,EAAAnE,QAAA8c,OAEA8+B,GACAD,GAAAx3C,EAAAy3C,IAIAha,aAAA,SAAAz9B,GACA,IAAAy3C,EAAAz3C,EAAAnE,QAAA8c,OACAA,EAAA3Y,EAAA2Y,OAEA8+B,GACA5yC,GAAA3I,QAAAu7C,EAAA7zC,GAAAtiB,OAAAq3B,QAEAA,GACA8I,GAAAK,UAAA9hB,EAAA2Y,EAAA8+B,GACA9+B,EAAA9c,QAAA47C,GAEAD,GAAAx3C,EAAAy3C,IAEG9+B,IACH8I,GAAAG,UAAA5hB,EAAA2Y,UACA3Y,EAAA2Y,SAIAk/B,WAAA,SAAA73C,EAAAre,GACA,IAAAg3B,EAAA3Y,EAAA2Y,OACAA,GACAA,EAAAoc,YAAApzC,KAKAm2D,GAAAjzC,GAAA9K,KAEA6J,GAAAT,KAAA,UACAuU,MAAA,CACA2F,SAAA,EACA7Y,UAAA,OACAmd,WAAA,EACAxQ,QAAA,GACAoG,SAAA,MACAkB,KAAA,GACAlgB,OAAA,OAOA,IAAAw/C,GAAA1xC,GAAAhK,OAAA,CACA6I,WAAA,SAAA8hB,GAEAniB,GAAAxI,OADAra,KACAglC,GADAhlC,KAIAyzD,eAAA,IAKAhY,aAAAqa,GACAxtC,OAAA,SAAAozB,EAAAC,EAAAC,GACA,IAAAnhC,EAAAza,KA0BA,OAvBAya,EAAAghC,eAGAhhC,EAAAihC,WACAjhC,EAAAkhC,YACAlhC,EAAAmhC,UAGAnhC,EAAAuhC,sBACAvhC,EAAAwhC,gBACAxhC,EAAAyhC,qBAEAzhC,EAAAm5C,oBACAn5C,EAAAo5C,cACAp5C,EAAAq5C,mBAGAr5C,EAAAsiC,YACAtiC,EAAAuiC,MACAviC,EAAAwiC,WAEAxiC,EAAAyiC,cAEAziC,EAAAmd,SAGAslB,YAAA4Y,GAIA9Z,oBAAA8Z,GACA7Z,cAAA,WACA,IAAAxhC,EAAAza,KAEAya,EAAAkY,gBAEAlY,EAAA0D,MAAA1D,EAAAihC,SACAjhC,EAAA8D,KAAA,EACA9D,EAAAgE,MAAAhE,EAAA0D,QAEA1D,EAAA2D,OAAA3D,EAAAkhC,UAGAlhC,EAAA+D,IAAA,EACA/D,EAAAiE,OAAAjE,EAAA2D,QAIA3D,EAAA2gC,YAAA,EACA3gC,EAAA4gC,WAAA,EACA5gC,EAAA6gC,aAAA,EACA7gC,EAAA8gC,cAAA,EAGA9gC,EAAAmd,QAAA,CACAzZ,MAAA,EACAC,OAAA,IAGA89B,mBAAA4Z,GAIAlC,kBAAAkC,GACAjC,YAAAiC,GACAhC,iBAAAgC,GAIA/Y,UAAA+Y,GACA9Y,IAAA,WACA,IAAAviC,EAAAza,KACAy3B,EAAAhd,EAAAZ,QACAwhB,EAAA5D,EAAA4D,QACAzD,EAAAnd,EAAAmd,QACAo+B,EAAAnzC,GAAA3K,QAAAuf,EAAAhB,MAAAgB,EAAAhB,KAAA/lB,OAAA,EACAulD,EAAApzC,GAAAhJ,QAAAoI,WAAAwV,GACA2wB,EAAA/sB,EAAA26B,EAAAC,EAAA1zC,WAAA,EAAAkV,EAAAtI,QAAA,EAEA1U,EAAAkY,gBACAiF,EAAAzZ,MAAA1D,EAAAihC,SACA9jB,EAAAxZ,OAAAgqC,IAEAxwB,EAAAzZ,MAAAiqC,EACAxwB,EAAAxZ,OAAA3D,EAAAkhC,WAGAlhC,EAAA0D,MAAAyZ,EAAAzZ,MACA1D,EAAA2D,OAAAwZ,EAAAxZ,QAGA6+B,SAAA6Y,GAGAnjC,aAAA,WACA,IAAAqT,EAAAhmC,KAAA6Z,QAAA0b,SACA,cAAAyQ,GAAA,WAAAA,GAIAnc,KAAA,WACA,IAAApP,EAAAza,KACAie,EAAAxD,EAAAwD,IACAwZ,EAAAhd,EAAAZ,QAEA,GAAA4d,EAAA4D,QAAA,CACA,IAQAqgB,EAAAwa,EAAAC,EARAF,EAAApzC,GAAAhJ,QAAAoI,WAAAwV,GACAlV,EAAA0zC,EAAA1zC,WACAmP,EAAAnP,EAAA,EAAAkV,EAAAtI,QACAlQ,EAAA,EACAT,EAAA/D,EAAA+D,IACAD,EAAA9D,EAAA8D,KACAG,EAAAjE,EAAAiE,OACAD,EAAAhE,EAAAgE,MAGAR,EAAA+O,UAAAnK,GAAArK,eAAAif,EAAA8oB,UAAA3+B,GAAAtiB,OAAAgiB,kBACArD,EAAAmE,KAAA6zC,EAAAtkD,OAGA8I,EAAAkY,gBACAujC,EAAA33C,GAAAE,EAAAF,GAAA,EACA43C,EAAA33C,EAAAkT,EACAgqB,EAAAj9B,EAAAF,IAEA23C,EAAA,SAAAz+B,EAAAlC,SAAAhX,EAAAmT,EAAAjT,EAAAiT,EACAykC,EAAA33C,GAAAE,EAAAF,GAAA,EACAk9B,EAAAh9B,EAAAF,EACAS,EAAArb,KAAAkC,IAAA,SAAA2xB,EAAAlC,UAAA,QAGAtX,EAAAgC,OACAhC,EAAAkkC,UAAA+T,EAAAC,GACAl4C,EAAA9H,OAAA8I,GACAhB,EAAAg0B,UAAA,SACAh0B,EAAAi0B,aAAA,SAEA,IAAAzb,EAAAgB,EAAAhB,KACA,GAAA5T,GAAA3K,QAAAue,GAEA,IADA,IAAAnyB,EAAA,EACAM,EAAA,EAAmBA,EAAA6xB,EAAA/lB,SAAiB9L,EACpCqZ,EAAAk0B,SAAA1b,EAAA7xB,GAAA,EAAAN,EAAAo3C,GACAp3C,GAAAie,OAGAtE,EAAAk0B,SAAA1b,EAAA,IAAAilB,GAGAz9B,EAAAmC,cAKA,SAAAg2C,GAAAp4C,EAAAq4C,GACA,IAAA3gC,EAAA,IAAAqgC,GAAA,CACA93C,IAAAD,EAAAC,IACApE,QAAAw8C,EACAr4C,UAGAyhB,GAAAK,UAAA9hB,EAAA0X,EAAA2gC,GACA52B,GAAAC,OAAA1hB,EAAA0X,GACA1X,EAAAs4C,WAAA5gC,EAGA,IAwCAwS,GAAA,GACA+oB,GAAAmB,GACAz7B,GAAA++B,GACAhgC,GA3CA,CACA9d,GAAA,QASA+9C,SAAAI,GAEAH,WAAA,SAAA53C,GACA,IAAAq4C,EAAAr4C,EAAAnE,QAAA6b,MAEA2gC,GACAD,GAAAp4C,EAAAq4C,IAIA5a,aAAA,SAAAz9B,GACA,IAAAq4C,EAAAr4C,EAAAnE,QAAA6b,MACA4gC,EAAAt4C,EAAAs4C,WAEAD,GACAxzC,GAAA3I,QAAAm8C,EAAAz0C,GAAAtiB,OAAAo2B,OAEA4gC,GACA72B,GAAAK,UAAA9hB,EAAAs4C,EAAAD,GACAC,EAAAz8C,QAAAw8C,GAEAD,GAAAp4C,EAAAq4C,IAEGC,IACH72B,GAAAG,UAAA5hB,EAAAs4C,UACAt4C,EAAAs4C,cAmDA,QAAAvyD,MA1CAmkC,GAAA+oB,UACA/oB,GAAAvR,UACAuR,GAAAxS,SAOAmiB,GAAA//B,QAAA+K,GAtlKA,WAiZA,SAAA0zC,EAAAC,EAAAjzB,EAAAkzB,GACA,IAAAC,EAYA,MAXA,iBAAAF,GACAE,EAAA5jD,SAAA0jD,EAAA,KAEA,IAAAA,EAAAx7C,QAAA,OAEA07C,IAAA,IAAAnzB,EAAAyD,WAAAyvB,KAGAC,EAAAF,EAGAE,EAOA,SAAAC,EAAAhjD,GACA,OAAAA,SAAA,SAAAA,EAUA,SAAAijD,EAAAC,EAAAC,EAAAC,GACA,IAAAnzC,EAAAmgB,SAAAizB,YACAhwB,EAAAnkB,GAAAo0C,eAAAJ,GACAK,EAAAtzC,EAAAuzC,iBAAAN,GAAAC,GACAM,EAAAxzC,EAAAuzC,iBAAAnwB,GAAA8vB,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAAh/C,OAAAwlB,kBAEA,OAAAs5B,GAAAC,EACA1zD,KAAAD,IACA0zD,EAAAd,EAAAW,EAAAL,EAAAE,GAAAQ,EACAD,EAAAf,EAAAa,EAAApwB,EAAA+vB,GAAAQ,GAGA,OA3bA10C,GAAAoc,MAAA,SAAAu4B,EAAAC,GACA,GAAA50C,GAAA3K,QAAAs/C,IAAAxnD,MAAAC,UAAA4qB,OACA,OAAA28B,EAAA38B,OAAA48B,GAEA,IAAAC,EAAA,GAQA,OANA70C,GAAA9J,KAAAy+C,EAAA,SAAAt8C,GACAu8C,EAAAv8C,IACAw8C,EAAA7xC,KAAA3K,KAIAw8C,GAEA70C,GAAAmD,UAAAhW,MAAAC,UAAA+V,UACA,SAAA/K,EAAAtC,EAAAyI,GACA,OAAAnG,EAAA+K,UAAArN,EAAAyI,IAEA,SAAAnG,EAAAtC,EAAAyI,GACAA,OAAA3Q,IAAA2Q,EAAAnG,EAAAmG,EACA,QAAAxc,EAAA,EAAA2U,EAAA0B,EAAAvK,OAAuC9L,EAAA2U,IAAU3U,EACjD,GAAA+T,EAAAxI,KAAAiR,EAAAnG,EAAArW,KAAAqW,GACA,OAAArW,EAGA,UAEAie,GAAA4e,cAAA,SAAAk2B,EAAAF,EAAAG,GAEA/0C,GAAA5K,cAAA2/C,KACAA,GAAA,GAEA,QAAAhzD,EAAAgzD,EAAA,EAA8BhzD,EAAA+yD,EAAAjnD,OAA0B9L,IAAA,CACxD,IAAAizD,EAAAF,EAAA/yD,GACA,GAAA6yD,EAAAI,GACA,OAAAA,IAIAh1C,GAAAi1C,kBAAA,SAAAH,EAAAF,EAAAG,GAEA/0C,GAAA5K,cAAA2/C,KACAA,EAAAD,EAAAjnD,QAEA,QAAA9L,EAAAgzD,EAAA,EAA8BhzD,GAAA,EAAQA,IAAA,CACtC,IAAAizD,EAAAF,EAAA/yD,GACA,GAAA6yD,EAAAI,GACA,OAAAA,IAMAh1C,GAAAuB,SAAA,SAAAhf,GACA,OAAA6N,MAAAF,WAAA3N,KAAAkT,SAAAlT,IAEAyd,GAAA2iC,aAAA,SAAAnhD,EAAAC,EAAAyzD,GACA,OAAAn0D,KAAAgrB,IAAAvqB,EAAAC,GAAAyzD,GAEAl1C,GAAA0iC,YAAA,SAAAlhD,EAAA0zD,GACA,IAAAC,EAAAp0D,KAAA+M,MAAAtM,GACA,OAAA2zD,EAAAD,EAAA1zD,GAAA2zD,EAAAD,EAAA1zD,GAEAwe,GAAAhf,IAAA,SAAAoX,GACA,OAAAA,EAAAm1B,OAAA,SAAAvsC,EAAA8P,GACA,OAAAV,MAAAU,GAGA9P,EAFAD,KAAAC,MAAA8P,IAGG4E,OAAAkwC,oBAEH5lC,GAAAlf,IAAA,SAAAsX,GACA,OAAAA,EAAAm1B,OAAA,SAAAzsC,EAAAgQ,GACA,OAAAV,MAAAU,GAGAhQ,EAFAC,KAAAD,MAAAgQ,IAGG4E,OAAAwlB,oBAEHlb,GAAA+gC,KAAAhgD,KAAAggD,KACA,SAAAv/C,GACA,OAAAT,KAAAggD,KAAAv/C,IAEA,SAAAA,GAEA,WADAA,OACA4O,MAAA5O,GACAA,EAEAA,EAAA,QAEAwe,GAAAs2B,MAAAv1C,KAAAu1C,MACA,SAAA90C,GACA,OAAAT,KAAAu1C,MAAA90C,IAEA,SAAAA,GACA,IAAA4zD,EAAAr0D,KAAAs0D,IAAA7zD,GAAAT,KAAAu0D,OAGAC,EAAAx0D,KAAA+M,MAAAsnD,GAGA,OAFA5zD,IAAAT,KAAAO,IAAA,GAAAi0D,GAEAA,EAAAH,GAEAp1C,GAAA+6B,UAAA,SAAAxnC,GACA,OAAAA,GAAAxS,KAAAkC,GAAA,MAEA+c,GAAAomC,UAAA,SAAAoP,GACA,OAAAA,GAAA,IAAAz0D,KAAAkC,KAUA+c,GAAAyiC,eAAA,SAAAjhD,GACA,GAAAwe,GAAAvK,SAAAjU,GAAA,CAKA,IAFA,IAAA1E,EAAA,EACAqF,EAAA,EACApB,KAAA+M,MAAAtM,EAAA1E,OAAA0E,GACA1E,GAAA,GACAqF,IAEA,OAAAA,IAIA6d,GAAAkJ,kBAAA,SAAAusC,EAAAC,GACA,IAAAC,EAAAD,EAAAl0D,EAAAi0D,EAAAj0D,EACAo0D,EAAAF,EAAAj0D,EAAAg0D,EAAAh0D,EACAo0D,EAAA90D,KAAAmC,KAAAyyD,IAAAC,KAEAzsC,EAAApoB,KAAAiC,MAAA4yD,EAAAD,GAMA,OAJAxsC,GAAA,GAAApoB,KAAAkC,KACAkmB,GAAA,EAAApoB,KAAAkC,IAGA,CACAkmB,QACAC,SAAAysC,IAGA71C,GAAAupB,sBAAA,SAAAhO,EAAAC,GACA,OAAAz6B,KAAAmC,KAAAnC,KAAAO,IAAAk6B,EAAAh6B,EAAA+5B,EAAA/5B,EAAA,GAAAT,KAAAO,IAAAk6B,EAAA/5B,EAAA85B,EAAA95B,EAAA,KASAue,GAAA81C,WAAA,SAAAC,GACA,OAAAA,EAAA,WAWA/1C,GAAAm+B,YAAA,SAAAhjC,EAAAkhC,EAAA/gC,GACA,IAAAi2B,EAAAp2B,EAAA66C,wBACAC,EAAA36C,EAAA,EACA,OAAAva,KAAA+M,OAAAuuC,EAAA4Z,GAAA1kB,KAAA0kB,GAGAj2C,GAAAmY,YAAA,SAAA+9B,EAAAC,EAAAC,EAAA/zD,GAMA,IAAAmb,EAAA04C,EAAAvqC,KAAAwqC,EAAAD,EACAnrC,EAAAorC,EACArkC,EAAAskC,EAAAzqC,KAAAwqC,EAAAC,EAEAC,EAAAt1D,KAAAmC,KAAAnC,KAAAO,IAAAypB,EAAAvpB,EAAAgc,EAAAhc,EAAA,GAAAT,KAAAO,IAAAypB,EAAAtpB,EAAA+b,EAAA/b,EAAA,IACA60D,EAAAv1D,KAAAmC,KAAAnC,KAAAO,IAAAwwB,EAAAtwB,EAAAupB,EAAAvpB,EAAA,GAAAT,KAAAO,IAAAwwB,EAAArwB,EAAAspB,EAAAtpB,EAAA,IAEA80D,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAMAG,EAAAp0D,GAHAk0D,EAAAnmD,MAAAmmD,GAAA,EAAAA,GAIAG,EAAAr0D,GAHAm0D,EAAApmD,MAAAomD,GAAA,EAAAA,GAKA,OACAh5C,SAAA,CACAhc,EAAAupB,EAAAvpB,EAAAi1D,GAAA3kC,EAAAtwB,EAAAgc,EAAAhc,GACAC,EAAAspB,EAAAtpB,EAAAg1D,GAAA3kC,EAAArwB,EAAA+b,EAAA/b,IAEAqwB,KAAA,CACAtwB,EAAAupB,EAAAvpB,EAAAk1D,GAAA5kC,EAAAtwB,EAAAgc,EAAAhc,GACAC,EAAAspB,EAAAtpB,EAAAi1D,GAAA5kC,EAAArwB,EAAA+b,EAAA/b,MAIAue,GAAA22C,QAAAjhD,OAAAihD,SAAA,MACA32C,GAAAkY,oBAAA,SAAAhN,GAMA,IAUAnpB,EAAA60D,EAAAC,EAAAC,EA4BAC,EAAAC,EAAAC,EAAAC,EA0BAz7B,EAhEA07B,GAAAjsC,GAAA,IAAArU,IAAA,SAAAoG,GACA,OACA4D,MAAA5D,EAAAwD,OACA22C,OAAA,EACAC,GAAA,KAKAC,EAAAH,EAAAtpD,OAEA,IAAA9L,EAAA,EAAaA,EAAAu1D,IAAev1D,EAE5B,KADA80D,EAAAM,EAAAp1D,IACA8e,MAAA8K,KAAA,CAMA,GAFAirC,EAAA70D,EAAA,EAAAo1D,EAAAp1D,EAAA,SACA+0D,EAAA/0D,EAAAu1D,EAAA,EAAAH,EAAAp1D,EAAA,WACA+0D,EAAAj2C,MAAA8K,KAAA,CACA,IAAA4rC,EAAAT,EAAAj2C,MAAArf,EAAAq1D,EAAAh2C,MAAArf,EAGAq1D,EAAAO,OAAA,IAAAG,GAAAT,EAAAj2C,MAAApf,EAAAo1D,EAAAh2C,MAAApf,GAAA81D,EAAA,EAIAV,EAAAQ,IADAT,KAAA/1C,MAAA8K,KACAkrC,EAAAO,QACIN,KAAAj2C,MAAA8K,KACJirC,EAAAQ,OACIj6D,KAAA4jD,KAAA6V,EAAAQ,UAAAj6D,KAAA4jD,KAAA8V,EAAAO,QACJ,GAEAR,EAAAQ,OAAAP,EAAAO,QAAA,EAMA,IAAAr1D,EAAA,EAAaA,EAAAu1D,EAAA,IAAmBv1D,EAEhC+0D,EAAAK,EAAAp1D,EAAA,IADA80D,EAAAM,EAAAp1D,IAEA8e,MAAA8K,MAAAmrC,EAAAj2C,MAAA8K,OAIA3L,GAAA2iC,aAAAkU,EAAAO,OAAA,EAAAj6D,KAAAw5D,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,QACAF,EAAAn2D,KAAAO,IAAAy1D,EAAA,GAAAh2D,KAAAO,IAAA01D,EAAA,KACA,IAIAC,EAAA,EAAAl2D,KAAAmC,KAAAg0D,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAKA,IAAAr1D,EAAA,EAAaA,EAAAu1D,IAAev1D,GAC5B80D,EAAAM,EAAAp1D,IACA8e,MAAA8K,OAKAmrC,EAAA/0D,EAAAu1D,EAAA,EAAAH,EAAAp1D,EAAA,SADA60D,EAAA70D,EAAA,EAAAo1D,EAAAp1D,EAAA,WAEA60D,EAAA/1C,MAAA8K,OAEAkrC,EAAAh2C,MAAA9C,sBAAA84C,EAAAh2C,MAAArf,GADAi6B,GAAAo7B,EAAAh2C,MAAArf,EAAAo1D,EAAA/1C,MAAArf,GAAA,GAEAq1D,EAAAh2C,MAAA5C,sBAAA44C,EAAAh2C,MAAApf,EAAAg6B,EAAAo7B,EAAAQ,IAEAP,MAAAj2C,MAAA8K,OAEAkrC,EAAAh2C,MAAA7C,kBAAA64C,EAAAh2C,MAAArf,GADAi6B,GAAAq7B,EAAAj2C,MAAArf,EAAAq1D,EAAAh2C,MAAArf,GAAA,GAEAq1D,EAAAh2C,MAAA3C,kBAAA24C,EAAAh2C,MAAApf,EAAAg6B,EAAAo7B,EAAAQ,MAIAr3C,GAAAoY,SAAA,SAAAu8B,EAAA//C,EAAAg7C,GACA,OAAAA,EACAh7C,GAAA+/C,EAAA9mD,OAAA,EAAA8mD,EAAA,GAAAA,EAAA//C,EAAA,GAEAA,GAAA+/C,EAAA9mD,OAAA,EAAA8mD,IAAA9mD,OAAA,GAAA8mD,EAAA//C,EAAA,IAEAoL,GAAA0L,aAAA,SAAAipC,EAAA//C,EAAAg7C,GACA,OAAAA,EACAh7C,GAAA,EAAA+/C,IAAA9mD,OAAA,GAAA8mD,EAAA//C,EAAA,GAEAA,GAAA,EAAA+/C,EAAA,GAAAA,EAAA//C,EAAA,IAGAoL,GAAAwiC,QAAA,SAAA3wB,EAAA/jB,GACA,IAAAsnD,EAAAr0D,KAAAkB,MAAA+d,GAAAs2B,MAAAzkB,IACA2lC,EAAA3lC,EAAA9wB,KAAAO,IAAA,GAAA8zD,GAuBA,OApBAtnD,EACA0pD,EAAA,IACA,EACIA,EAAA,EACJ,EACIA,EAAA,EACJ,EAEA,GAEGA,GAAA,EACH,EACGA,GAAA,EACH,EACGA,GAAA,EACH,EAEA,IAGAz2D,KAAAO,IAAA,GAAA8zD,IAGAp1C,GAAAqD,iBACA,oBAAAvO,OACA,SAAAgB,GACAA,KAGAhB,OAAAmO,uBACAnO,OAAA2iD,6BACA3iD,OAAA4iD,0BACA5iD,OAAA6iD,wBACA7iD,OAAA8iD,yBACA,SAAA9hD,GACA,OAAAhB,OAAA+iD,WAAA/hD,EAAA,SAIAkK,GAAAwa,oBAAA,SAAAs9B,EAAA38C,GACA,IAAAwN,EAAAwD,EACArvB,EAAAg7D,EAAAC,eAAAD,EACA73C,EAAA63C,EAAA5jD,QAAA4jD,EAAAE,WACAC,EAAAh4C,EAAAi4C,wBAEAC,EAAAr7D,EAAAq7D,QACAA,KAAAtqD,OAAA,GACA8a,EAAAwvC,EAAA,GAAAC,QACAjsC,EAAAgsC,EAAA,GAAAE,UAGA1vC,EAAA7rB,EAAAs7D,QACAjsC,EAAArvB,EAAAu7D,SAMA,IAAA9f,EAAAroC,WAAA8P,GAAAogB,SAAAngB,EAAA,iBACAu4B,EAAAtoC,WAAA8P,GAAAogB,SAAAngB,EAAA,gBACAw4B,EAAAvoC,WAAA8P,GAAAogB,SAAAngB,EAAA,kBACAy4B,EAAAxoC,WAAA8P,GAAAogB,SAAAngB,EAAA,mBAEA1E,EAAA08C,EAAAp8C,OAAAo8C,EAAAt8C,IAAA68B,EAAAE,EAOA,OACAl3C,EAJAmnB,EAAA5nB,KAAA+M,OAAA6a,EAAAsvC,EAAAv8C,KAAA68B,IALA0f,EAAAr8C,MAAAq8C,EAAAv8C,KAAA68B,EAAAE,GAKAx4B,EAAA3E,MAAAH,EAAA66C,yBAKAv0D,EAJA0qB,EAAAprB,KAAA+M,OAAAqe,EAAA8rC,EAAAt8C,IAAA68B,GAAA,EAAAv4B,EAAA1E,OAAAJ,EAAA66C,2BA2DAh2C,GAAAs4C,mBAAA,SAAAtE,GACA,OAAAD,EAAAC,EAAA,4BAGAh0C,GAAAu4C,oBAAA,SAAAvE,GACA,OAAAD,EAAAC,EAAA,8BAKAh0C,GAAAw4C,kBAAA,SAAAv0B,EAAA3X,EAAAmsC,GAGA,OAFAnsC,EAAAtM,GAAAogB,SAAA6D,EAAA3X,IAEAnU,QAAA,QAAAsgD,EAAAxoD,SAAAqc,EAAA,QAAArc,SAAAqc,EAAA,KAKAtM,GAAAo0C,eAAA,SAAAJ,GACA,IAAA0E,EAAA1E,EAAA7vB,WAIA,OAHAu0B,GAAA,wBAAAA,EAAAnoD,aACAmoD,IAAAC,MAEAD,GAEA14C,GAAA8xB,gBAAA,SAAAkiB,GACA,IAAA/vB,EAAAjkB,GAAAo0C,eAAAJ,GACA,IAAA/vB,EACA,OAAA+vB,EAAA5vB,YAGA,IAAAA,EAAAH,EAAAG,YAIArzB,EAAAqzB,EAHApkB,GAAAw4C,kBAAAv0B,EAAA,eAAAG,GACApkB,GAAAw4C,kBAAAv0B,EAAA,gBAAAG,GAGAw0B,EAAA54C,GAAAs4C,mBAAAtE,GACA,OAAA5jD,MAAAwoD,GAAA7nD,EAAAhQ,KAAAD,IAAAiQ,EAAA6nD,IAEA54C,GAAAgyB,iBAAA,SAAAgiB,GACA,IAAA/vB,EAAAjkB,GAAAo0C,eAAAJ,GACA,IAAA/vB,EACA,OAAA+vB,EAAA6E,aAGA,IAAAA,EAAA50B,EAAA40B,aAIAn4D,EAAAm4D,EAHA74C,GAAAw4C,kBAAAv0B,EAAA,cAAA40B,GACA74C,GAAAw4C,kBAAAv0B,EAAA,iBAAA40B,GAGAC,EAAA94C,GAAAu4C,oBAAAvE,GACA,OAAA5jD,MAAA0oD,GAAAp4D,EAAAK,KAAAD,IAAAJ,EAAAo4D,IAEA94C,GAAAogB,SAAA,SAAAa,EAAAd,GACA,OAAAc,EAAA83B,aACA93B,EAAA83B,aAAA54B,GACAe,SAAAizB,YAAAG,iBAAArzB,EAAA,MAAA+3B,iBAAA74B,IAEAngB,GAAAsxB,YAAA,SAAAn2B,EAAA89C,GACA,IAAAC,EAAA/9C,EAAA66C,wBAAAiD,GAAA,oBAAAnkD,eAAAy8B,kBAAA,EACA,OAAA2nB,EAAA,CAIA,IAAAj5C,EAAA9E,EAAA8E,OACA1E,EAAAJ,EAAAI,OACAD,EAAAH,EAAAG,MAEA2E,EAAA1E,SAAA29C,EACAj5C,EAAA3E,QAAA49C,EACA/9C,EAAAC,IAAAjL,MAAA+oD,KAKAj5C,EAAA9D,MAAAZ,QAAA0E,EAAA9D,MAAAb,QACA2E,EAAA9D,MAAAZ,SAAA,KACA0E,EAAA9D,MAAAb,QAAA,QAIA0E,GAAA6tB,WAAA,SAAAsrB,EAAAx5C,EAAAF,GACA,OAAAE,EAAA,IAAAw5C,EAAA,MAAA15C,GAEAO,GAAAk3B,YAAA,SAAA97B,EAAAmE,EAAA65C,EAAAjzB,GAEA,IAAAphB,GADAohB,KAAA,IACAphB,KAAAohB,EAAAphB,MAAA,GACAs0C,EAAAlzB,EAAAmzB,eAAAnzB,EAAAmzB,gBAAA,GAEAnzB,EAAA5mB,WACAwF,EAAAohB,EAAAphB,KAAA,GACAs0C,EAAAlzB,EAAAmzB,eAAA,GACAnzB,EAAA5mB,QAGAnE,EAAAmE,OACA,IAAAg6C,EAAA,EACAv5C,GAAA9J,KAAAkjD,EAAA,SAAAI,GAEAA,UAAA,IAAAx5C,GAAA3K,QAAAmkD,GACAD,EAAAv5C,GAAA4tB,YAAAxyB,EAAA2J,EAAAs0C,EAAAE,EAAAC,GACIx5C,GAAA3K,QAAAmkD,IAGJx5C,GAAA9J,KAAAsjD,EAAA,SAAAC,GAEAA,SAAAz5C,GAAA3K,QAAAokD,KACAF,EAAAv5C,GAAA4tB,YAAAxyB,EAAA2J,EAAAs0C,EAAAE,EAAAE,QAMA,IAAAC,EAAAL,EAAAxrD,OAAA,EACA,GAAA6rD,EAAAN,EAAAvrD,OAAA,CACA,QAAA9L,EAAA,EAAkBA,EAAA23D,EAAW33D,WAC7BgjB,EAAAs0C,EAAAt3D,IAEAs3D,EAAAj2C,OAAA,EAAAs2C,GAEA,OAAAH,GAEAv5C,GAAA4tB,YAAA,SAAAxyB,EAAA2J,EAAAs0C,EAAAE,EAAAzqD,GACA,IAAAmjD,EAAAltC,EAAAjW,GAQA,OAPAmjD,IACAA,EAAAltC,EAAAjW,GAAAsM,EAAAwyB,YAAA9+B,GAAAwM,MACA+9C,EAAAr2C,KAAAlU,IAEAmjD,EAAAsH,IACAA,EAAAtH,GAEAsH,GAEAv5C,GAAA07B,mBAAA,SAAA0d,GACA,IAAAO,EAAA,EAQA,OAPA35C,GAAA9J,KAAAkjD,EAAA,SAAAI,GACAx5C,GAAA3K,QAAAmkD,IACAA,EAAA3rD,OAAA8rD,IACAA,EAAAH,EAAA3rD,UAIA8rD,GAGA35C,GAAAm3B,MAAAniC,EAKA,SAAAlE,GAMA,OAJAA,aAAA8oD,iBACA9oD,EAAAiO,GAAAtiB,OAAA+hB,cAGAxJ,EAAAlE,IAVA,SAAAA,GAEA,OADAsD,QAAAC,MAAA,uBACAvD,GAWAkP,GAAAqH,cAAA,SAAAwyC,GAEA,OAAAA,aAAAC,eAAAD,aAAAD,eACAC,EACA75C,GAAAm3B,MAAA0iB,GAAA9mD,SAAA,IAAAD,OAAA,IAAAxD,aAo/IAyqD,GAEA/kB,GAAAglB,UAAAhkB,GACAhB,GAAAilB,UAAAl4C,GACAizB,GAAAklB,iBAAA33C,GACAyyB,GAAA/a,eACA+a,GAAAjxB,kBAAAwE,GACAysB,GAAA32B,SAAAU,GACAi2B,GAAA70B,QAAAqB,GACAwzB,GAAAjuB,YACAiuB,GAAAmlB,YAAAt+B,GACAmZ,GAAAolB,QAAAx9B,GACAoY,GAAAtT,YACAsT,GAAA3P,QAAAC,GACA0P,GAAAqlB,MAAA/hB,GACAtD,GAAAslB,aAAAh0B,GACA0O,GAAAulB,MAAArkB,GACAlB,GAAAwlB,QAAAjvB,GAIAyJ,GAAA//B,QAAAiB,KAAAyO,GAAA,SAAAxU,EAAA4D,GACAihC,GAAAslB,aAAA9zB,kBAAAzyB,EAAA5D,IAAAwwC,aAQAtb,GACAA,GAAAjoC,eAAA8D,KACA8zC,GAAA3P,QAAAI,SAAAJ,GAAAnkC,KAIA8zC,GAAAtT,SAAArhB,aAEA,IAAAo6C,GAAAzlB,GAyGA,MAxGA,oBAAAlgC,SACAA,OAAA7X,MAAA+3C,IAYAA,GAAA/3C,MAAA+3C,GASAA,GAAA2b,OAAAtrB,GAAAvR,OAAAg/B,SASA9d,GAAAke,MAAA7tB,GAAAxS,MAAAigC,SASA9d,GAAA0lB,cAAA1lB,GAAA3P,QAUA2P,GAAA2lB,WAAA3lB,GAAA70B,QAAA3I,OAAA,IASAw9B,GAAA4lB,cAAA5lB,GAAA//B,QAAAgL,OASA+0B,GAAA6lB,cAAA7lB,GAAAolB,QASAplB,GAAA8lB,gBAAAla,GAQA5L,GAAA//B,QAAAiB,KACA,CACA,MACA,SACA,WACA,OACA,YACA,QACA,WAEA,SAAA6kD,GACA/lB,GAAA+lB,GAAA,SAAA3/C,EAAA4/C,GACA,WAAAhmB,GAAA55B,EAAA45B,GAAA//B,QAAAkC,MAAA6jD,GAAA,GAA0E,CAC1EjnD,KAAAgnD,EAAAvmD,OAAA,GAAAymD,cAAAF,EAAA1tD,MAAA,SAMAotD","file":"scripts.d166cef3882d735b5181.js","sourcesContent":["/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n"],"sourceRoot":""}